; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc


PUBLIC	??_C@_0EC@HCHNIDLM@A?5valid?5JSON?5document?5must?5be?5e@ ; `string'
PUBLIC	??_C@_0CP@GDDNKEK@Syntax?5error?3?5value?0?5object?5or?5@ ; `string'
PUBLIC	??_C@_03FFDNHNKN@rue@				; `string'
PUBLIC	??_C@_04KCECFHEP@alse@				; `string'
PUBLIC	??_C@_03KNPGGKC@ull@				; `string'
PUBLIC	??_C@_0CF@GCCDMCPH@Missing?5?8?3?8?5after?5object?5member@ ; `string'
PUBLIC	??_C@_0CJ@NGKOAFKA@Missing?5?8?0?8?5or?5?8?$HN?8?5in?5object?5de@ ; `string'
PUBLIC	??_C@_0CC@JNCGHFHN@Missing?5?8?$HN?8?5or?5object?5member?5na@ ; `string'
PUBLIC	??_C@_0CI@DPCANLPO@Missing?5?8?0?8?5or?5?8?$FN?8?5in?5array?5dec@ ; `string'
PUBLIC	??_C@_0BD@HHNBFDKF@?8?5is?5not?5a?5number?4@	; `string'
PUBLIC	??_C@_01GEODFPGF@?8@				; `string'
PUBLIC	??_C@_03DLDNIBIK@?$CFlf@			; `string'
PUBLIC	??_C@_0CA@DPGKPPOE@Empty?5escape?5sequence?5in?5string@ ; `string'
PUBLIC	??_C@_0BO@NDEEJNNB@Bad?5escape?5sequence?5in?5string@ ; `string'
PUBLIC	??_C@_0EE@LMPEHADE@additional?5six?5characters?5expec@ ; `string'
PUBLIC	??_C@_0FA@BGMMPLKB@expecting?5another?5?2u?5token?5to?5b@ ; `string'
PUBLIC	??_C@_0DN@BPAHJPFJ@Bad?5unicode?5escape?5sequence?5in?5@ ; `string'
PUBLIC	??_C@_0ED@FIDDECIG@Bad?5unicode?5escape?5sequence?5in?5@ ; `string'
PUBLIC	??_C@_0BD@LAMGIMLG@Line?5?$CFd?0?5Column?5?$CFd@ ; `string'
PUBLIC	??_C@_02KAOAMBHJ@?$CK?5@			; `string'
PUBLIC	??_C@_02KNHHEEKP@?5?5@				; `string'
PUBLIC	??_C@_0O@JBAGGIKP@?5for?5detail?4?6@		; `string'
PUBLIC	??_C@_04JBAOJHKB@See?5@				; `string'
PUBLIC	??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@	; `string'
EXTRN	__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z:PROC
EXTRN	__imp___stdio_common_vsscanf:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__report_rangecheckfailure:PROC
;	COMDAT ??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@ DB 'deque<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JBAOJHKB@See?5@
CONST	SEGMENT
??_C@_04JBAOJHKB@See?5@ DB 'See ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBAGGIKP@?5for?5detail?4?6@
CONST	SEGMENT
??_C@_0O@JBAGGIKP@?5for?5detail?4?6@ DB ' for detail.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNHHEEKP@?5?5@
CONST	SEGMENT
??_C@_02KNHHEEKP@?5?5@ DB '  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAOAMBHJ@?$CK?5@
CONST	SEGMENT
??_C@_02KAOAMBHJ@?$CK?5@ DB '* ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LAMGIMLG@Line?5?$CFd?0?5Column?5?$CFd@
CONST	SEGMENT
??_C@_0BD@LAMGIMLG@Line?5?$CFd?0?5Column?5?$CFd@ DB 'Line %d, Column %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@FIDDECIG@Bad?5unicode?5escape?5sequence?5in?5@
CONST	SEGMENT
??_C@_0ED@FIDDECIG@Bad?5unicode?5escape?5sequence?5in?5@ DB 'Bad unicode '
	DB	'escape sequence in string: hexadecimal digit expected.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@BPAHJPFJ@Bad?5unicode?5escape?5sequence?5in?5@
CONST	SEGMENT
??_C@_0DN@BPAHJPFJ@Bad?5unicode?5escape?5sequence?5in?5@ DB 'Bad unicode '
	DB	'escape sequence in string: four digits expected.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@BGMMPLKB@expecting?5another?5?2u?5token?5to?5b@
CONST	SEGMENT
??_C@_0FA@BGMMPLKB@expecting?5another?5?2u?5token?5to?5b@ DB 'expecting a'
	DB	'nother \u token to begin the second half of a unicode surroga'
	DB	'te pair', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@LMPEHADE@additional?5six?5characters?5expec@
CONST	SEGMENT
??_C@_0EE@LMPEHADE@additional?5six?5characters?5expec@ DB 'additional six'
	DB	' characters expected to parse unicode surrogate pair.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NDEEJNNB@Bad?5escape?5sequence?5in?5string@
CONST	SEGMENT
??_C@_0BO@NDEEJNNB@Bad?5escape?5sequence?5in?5string@ DB 'Bad escape sequ'
	DB	'ence in string', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@DPGKPPOE@Empty?5escape?5sequence?5in?5string@
CONST	SEGMENT
??_C@_0CA@DPGKPPOE@Empty?5escape?5sequence?5in?5string@ DB 'Empty escape '
	DB	'sequence in string', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DLDNIBIK@?$CFlf@
CONST	SEGMENT
??_C@_03DLDNIBIK@?$CFlf@ DB '%lf', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GEODFPGF@?8@
CONST	SEGMENT
??_C@_01GEODFPGF@?8@ DB '''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HHNBFDKF@?8?5is?5not?5a?5number?4@
CONST	SEGMENT
??_C@_0BD@HHNBFDKF@?8?5is?5not?5a?5number?4@ DB ''' is not a number.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DPCANLPO@Missing?5?8?0?8?5or?5?8?$FN?8?5in?5array?5dec@
CONST	SEGMENT
??_C@_0CI@DPCANLPO@Missing?5?8?0?8?5or?5?8?$FN?8?5in?5array?5dec@ DB 'Mis'
	DB	'sing '','' or '']'' in array declaration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JNCGHFHN@Missing?5?8?$HN?8?5or?5object?5member?5na@
CONST	SEGMENT
??_C@_0CC@JNCGHFHN@Missing?5?8?$HN?8?5or?5object?5member?5na@ DB 'Missing'
	DB	' ''}'' or object member name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@NGKOAFKA@Missing?5?8?0?8?5or?5?8?$HN?8?5in?5object?5de@
CONST	SEGMENT
??_C@_0CJ@NGKOAFKA@Missing?5?8?0?8?5or?5?8?$HN?8?5in?5object?5de@ DB 'Mis'
	DB	'sing '','' or ''}'' in object declaration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GCCDMCPH@Missing?5?8?3?8?5after?5object?5member@
CONST	SEGMENT
??_C@_0CF@GCCDMCPH@Missing?5?8?3?8?5after?5object?5member@ DB 'Missing '''
	DB	':'' after object member name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KNPGGKC@ull@
CONST	SEGMENT
??_C@_03KNPGGKC@ull@ DB 'ull', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KCECFHEP@alse@
CONST	SEGMENT
??_C@_04KCECFHEP@alse@ DB 'alse', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FFDNHNKN@rue@
CONST	SEGMENT
??_C@_03FFDNHNKN@rue@ DB 'rue', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GDDNKEK@Syntax?5error?3?5value?0?5object?5or?5@
CONST	SEGMENT
??_C@_0CP@GDDNKEK@Syntax?5error?3?5value?0?5object?5or?5@ DB 'Syntax erro'
	DB	'r: value, object or array expected.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@HCHNIDLM@A?5valid?5JSON?5document?5must?5be?5e@
CONST	SEGMENT
??_C@_0EC@HCHNIDLM@A?5valid?5JSON?5document?5must?5be?5e@ DB 'A valid JSO'
	DB	'N document must be either an array or an object value.', 00H ; `string'
PUBLIC	??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z ; std::_Zero_range<Json::Value * * *>
PUBLIC	??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z ; std::_Copy_memmove<Json::Value * * *,Json::Value * * *>
PUBLIC	??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z ; std::_Zero_range<Json::Reader::ErrorInfo * *>
PUBLIC	??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z ; std::_Copy_memmove<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>
PUBLIC	??$_Destroy_range1@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<Json::Value * *> >
PUBLIC	??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_value_construct_n1<Json::Value * * *,unsigned __int64,std::allocator<Json::Value * *> >
PUBLIC	??$_Seek_wrapped@PEAPEAVValue@Json@@@std@@YAXAEAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z ; std::_Seek_wrapped<Json::Value * *>
PUBLIC	??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked<Json::Value * *,Json::Value * *,std::allocator<Json::Value * *> >
PUBLIC	??$_Ptr_copy_cat@PEAPEAVValue@Json@@PEAPEAV12@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAPEAVValue@Json@@0@Z ; std::_Ptr_copy_cat<Json::Value * *,Json::Value * *>
PUBLIC	??$_Get_unwrapped_n@PEAPEAVValue@Json@@_J$0A@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@_J@Z ; std::_Get_unwrapped_n<Json::Value * *,__int64,0>
PUBLIC	??$_Idl_distance1@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<Json::Value * * *,Json::Value * * *>
PUBLIC	??$_Get_unwrapped@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z ; std::_Get_unwrapped<Json::Value * *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Destroy_range1@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<Json::Reader::ErrorInfo *> >
PUBLIC	??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_value_construct_n1<Json::Reader::ErrorInfo * *,unsigned __int64,std::allocator<Json::Reader::ErrorInfo *> >
PUBLIC	??$_Seek_wrapped@PEAVErrorInfo@Reader@Json@@@std@@YAXAEAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z ; std::_Seek_wrapped<Json::Reader::ErrorInfo *>
PUBLIC	??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked<Json::Reader::ErrorInfo *,Json::Reader::ErrorInfo *,std::allocator<Json::Reader::ErrorInfo *> >
PUBLIC	??$_Ptr_copy_cat@PEAVErrorInfo@Reader@Json@@PEAV123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVErrorInfo@Reader@Json@@0@Z ; std::_Ptr_copy_cat<Json::Reader::ErrorInfo *,Json::Reader::ErrorInfo *>
PUBLIC	??$_Get_unwrapped_n@PEAVErrorInfo@Reader@Json@@_J$0A@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@_J@Z ; std::_Get_unwrapped_n<Json::Reader::ErrorInfo *,__int64,0>
PUBLIC	??$_Idl_distance1@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>
PUBLIC	??$_Get_unwrapped@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z ; std::_Get_unwrapped<Json::Reader::ErrorInfo *>
PUBLIC	??$forward@PEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z ; std::forward<Json::Value *>
PUBLIC	??$forward@AEBVErrorInfo@Reader@Json@@@std@@YAAEBVErrorInfo@Reader@Json@@AEBV123@@Z ; std::forward<Json::Reader::ErrorInfo const &>
PUBLIC	??0?$allocator@VErrorInfo@Reader@Json@@@std@@QEAA@XZ ; std::allocator<Json::Reader::ErrorInfo>::allocator<Json::Reader::ErrorInfo>
PUBLIC	??0?$allocator@PEAVValue@Json@@@std@@QEAA@XZ	; std::allocator<Json::Value *>::allocator<Json::Value *>
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEAA@XZ ; std::_Deque_val<std::_Deque_simple_types<Json::Value *> >::_Deque_val<std::_Deque_simple_types<Json::Value *> >
PUBLIC	??0?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ ; std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z		; Json::Reader::ErrorInfo::`scalar deleting destructor'
PUBLIC	??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z	; Json::Reader::ErrorInfo::ErrorInfo
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	??$_Destroy_range@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z ; std::_Destroy_range<std::allocator<Json::Value * *> >
PUBLIC	??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z ; std::_Uninitialized_value_construct_n<Json::Value * * *,unsigned __int64,std::allocator<Json::Value * *> >
PUBLIC	??$_Idl_distance@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0@Z ; std::_Idl_distance<Json::Value * * *,Json::Value * * *>
PUBLIC	??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z ; std::_Uninitialized_copy<Json::Value * * *,Json::Value * * *,std::allocator<Json::Value * *> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1><>
PUBLIC	??$?0PEAVValue@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Json::Value *>
PUBLIC	??$addressof@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$?0VErrorInfo@Reader@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Json::Reader::ErrorInfo>
PUBLIC	??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z		; std::_Get_size_of_n<64>
PUBLIC	??$destroy@VErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::destroy<Json::Reader::ErrorInfo>
PUBLIC	??$_Destroy_range@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z ; std::_Destroy_range<std::allocator<Json::Reader::ErrorInfo *> >
PUBLIC	??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z ; std::_Uninitialized_value_construct_n<Json::Reader::ErrorInfo * *,unsigned __int64,std::allocator<Json::Reader::ErrorInfo *> >
PUBLIC	??$_Idl_distance@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0@Z ; std::_Idl_distance<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>
PUBLIC	??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z ; std::_Uninitialized_copy<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *,std::allocator<Json::Reader::ErrorInfo *> >
PUBLIC	??$destroy@PEAVErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@1@QEAPEAVErrorInfo@Reader@Json@@@Z ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo *> >::destroy<Json::Reader::ErrorInfo *>
PUBLIC	??$addressof@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@AEAPEAV123@@Z ; std::addressof<Json::Reader::ErrorInfo *>
PUBLIC	??$?0VErrorInfo@Reader@Json@@@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z ; std::allocator<Json::Reader::ErrorInfo *>::allocator<Json::Reader::ErrorInfo *><Json::Reader::ErrorInfo>
PUBLIC	??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::construct<Json::Value *,Json::Value *>
PUBLIC	??$destroy@PEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@@Z ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::destroy<Json::Value *>
PUBLIC	??$_Unfancy@PEAVValue@Json@@@std@@YAPEAPEAVValue@Json@@PEAPEAV12@@Z ; std::_Unfancy<Json::Value *>
PUBLIC	??$destroy@PEAPEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAPEAVValue@Json@@@1@QEAPEAPEAVValue@Json@@@Z ; std::_Default_allocator_traits<std::allocator<Json::Value * *> >::destroy<Json::Value * *>
PUBLIC	??$addressof@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@AEAPEAPEAV12@@Z ; std::addressof<Json::Value * *>
PUBLIC	??$?0PEAVValue@Json@@@?$allocator@PEAPEAVValue@Json@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z ; std::allocator<Json::Value * *>::allocator<Json::Value * *><Json::Value *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1><>
PUBLIC	??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::construct<Json::Reader::ErrorInfo>
PUBLIC	??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::construct<Json::Reader::ErrorInfo,Json::Reader::ErrorInfo const &>
PUBLIC	??$_Unfancy@VErrorInfo@Reader@Json@@@std@@YAPEAVErrorInfo@Reader@Json@@PEAV123@@Z ; std::_Unfancy<Json::Reader::ErrorInfo>
PUBLIC	??$move@AEAPEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z ; std::move<Json::Value * &>
PUBLIC	?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAXPEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Setcont
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_first
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SA_KAEBV?$allocator@PEAVValue@Json@@@2@@Z ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::max_size
PUBLIC	??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator+=
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_second
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_first
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?max_size@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_KXZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::max_size
PUBLIC	?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Xlen
PUBLIC	?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Alloc_proxy
PUBLIC	?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Myproxy
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Get_data
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Get_data
PUBLIC	?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z ; std::allocator<Json::Value * *>::allocate
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEBA_K_K@Z ; std::_Deque_val<std::_Deque_simple_types<Json::Value *> >::_Getblock
PUBLIC	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	??Z?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator-=
PUBLIC	??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBQEAVValue@Json@@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator*
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_first
PUBLIC	?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Myproxy
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getal
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SA_KAEBV?$allocator@VErrorInfo@Reader@Json@@@2@@Z ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::max_size
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_second
PUBLIC	??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	?deallocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAXQEAVErrorInfo@Reader@Json@@_K@Z ; std::allocator<Json::Reader::ErrorInfo>::deallocate
PUBLIC	?max_size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::max_size
PUBLIC	?empty@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_NXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::empty
PUBLIC	?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Xlen
PUBLIC	?deallocate@?$allocator@PEAVValue@Json@@@std@@QEAAXQEAPEAVValue@Json@@_K@Z ; std::allocator<Json::Value *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z ; std::allocator<Json::Value *>::allocate
PUBLIC	?end@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@2@XZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::end
PUBLIC	?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Growmap
PUBLIC	?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_K_K@Z ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getblock
PUBLIC	??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >
PUBLIC	?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Free_proxy
PUBLIC	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Orphan_all
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getal
PUBLIC	?_Map@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAPEAVValue@Json@@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Map
PUBLIC	?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mapsize
PUBLIC	?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Myoff
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mysize
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEB_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mysize
PUBLIC	?deallocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAXQEAPEAPEAVValue@Json@@_K@Z ; std::allocator<Json::Value * *>::deallocate
PUBLIC	??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEAPEAVValue@Json@@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator*
PUBLIC	??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBA?AV01@_J@Z ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator-
PUBLIC	?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Free_proxy
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Get_data
PUBLIC	?deallocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAXQEAPEAVErrorInfo@Reader@Json@@_K@Z ; std::allocator<Json::Reader::ErrorInfo *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z ; std::allocator<Json::Reader::ErrorInfo *>::allocate
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_second
PUBLIC	??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
PUBLIC	?allocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAPEAVErrorInfo@Reader@Json@@_K@Z ; std::allocator<Json::Reader::ErrorInfo>::allocate
PUBLIC	?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::pop_back
PUBLIC	?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap
PUBLIC	?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
PUBLIC	??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::deque<Json::Value *,std::allocator<Json::Value *> >
PUBLIC	?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ; std::deque<Json::Value *,std::allocator<Json::Value *> >::push_back
PUBLIC	?empty@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_NXZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::empty
PUBLIC	?back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::back
PUBLIC	?pop_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAXXZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::pop_back
PUBLIC	?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Tidy
PUBLIC	??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::~_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >
PUBLIC	?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBA_K_K@Z ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getblock
PUBLIC	??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >
PUBLIC	??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::~_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >
PUBLIC	?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Orphan_all
PUBLIC	?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getal
PUBLIC	?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Get_data
PUBLIC	?_Map@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAVErrorInfo@Reader@Json@@XZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Map
PUBLIC	?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mapsize
PUBLIC	?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Myoff
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mysize
PUBLIC	?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEB_KXZ ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mysize
PUBLIC	?_Getblock@?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_K_K@Z ; std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >::_Getblock
PUBLIC	??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >
PUBLIC	??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::~deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >
PUBLIC	??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::emplace_back<>
PUBLIC	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
PUBLIC	?size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::size
PUBLIC	?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::push_back
PUBLIC	?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::clear
PUBLIC	??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::~deque<Json::Value *,std::allocator<Json::Value *> >
PUBLIC	??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >
PUBLIC	?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::push
PUBLIC	?empty@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_NXZ ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::empty
PUBLIC	?top@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::top
PUBLIC	?pop@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::pop
PUBLIC	??1Reader@Json@@QEAA@XZ				; Json::Reader::~Reader
PUBLIC	?getNextChar@Reader@Json@@AEAADXZ		; Json::Reader::getNextChar
PUBLIC	?currentValue@Reader@Json@@AEAAAEAVValue@2@XZ	; Json::Reader::currentValue
PUBLIC	?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z ; Json::Reader::addErrorAndRecover
PUBLIC	?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z ; Json::Reader::recoverFromError
PUBLIC	??1ErrorInfo@Reader@Json@@QEAA@XZ		; Json::Reader::ErrorInfo::~ErrorInfo
PUBLIC	??0ErrorInfo@Reader@Json@@QEAA@XZ		; Json::Reader::ErrorInfo::ErrorInfo
PUBLIC	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
PUBLIC	?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z ; Json::Reader::decodeUnicodeEscapeSequence
PUBLIC	?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z ; Json::Reader::decodeUnicodeCodePoint
PUBLIC	?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::Reader::decodeString
PUBLIC	?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::decodeString
PUBLIC	?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::decodeDouble
PUBLIC	?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::decodeNumber
PUBLIC	?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z	; Json::Reader::readArray
PUBLIC	?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z	; Json::Reader::readObject
PUBLIC	?readString@Reader@Json@@AEAA_NXZ		; Json::Reader::readString
PUBLIC	?readNumber@Reader@Json@@AEAAXXZ		; Json::Reader::readNumber
PUBLIC	?readCppStyleComment@Reader@Json@@AEAA_NXZ	; Json::Reader::readCppStyleComment
PUBLIC	?readCStyleComment@Reader@Json@@AEAA_NXZ	; Json::Reader::readCStyleComment
PUBLIC	?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z ; Json::Reader::addComment
PUBLIC	?readComment@Reader@Json@@AEAA_NXZ		; Json::Reader::readComment
PUBLIC	?match@Reader@Json@@AEAA_NPEBDH@Z		; Json::Reader::match
PUBLIC	?skipSpaces@Reader@Json@@AEAAXXZ		; Json::Reader::skipSpaces
PUBLIC	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z	; Json::Reader::readToken
PUBLIC	?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z ; Json::Reader::skipCommentTokens
PUBLIC	?readValue@Reader@Json@@AEAA_NXZ		; Json::Reader::readValue
PUBLIC	?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z	; Json::Reader::parse
PUBLIC	?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z ; Json::Reader::parse
PUBLIC	??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::~stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >
PUBLIC	??0Reader@Json@@QEAA@XZ				; Json::Reader::Reader
PUBLIC	?all@Features@Json@@SA?AV12@XZ			; Json::Features::all
PUBLIC	??0Features@Json@@QEAA@XZ			; Json::Features::Features
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??0_Container_proxy@std@@QEAA@XZ		; std::_Container_proxy::_Container_proxy
PUBLIC	sscanf
PUBLIC	_vsscanf_l
PUBLIC	sprintf
PUBLIC	_vsprintf_l
PUBLIC	_vsnprintf_l
PUBLIC	__local_stdio_scanf_options
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z DD imagerel $LN4
	DD	imagerel $LN4+31
	DD	imagerel $unwind$??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+48
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z DD imagerel $LN10
	DD	imagerel $LN10+56
	DD	imagerel $unwind$??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z DD imagerel $LN6
	DD	imagerel $LN6+67
	DD	imagerel $unwind$??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z DD imagerel $LN22
	DD	imagerel $LN22+48
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+46
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z DD imagerel $LN22
	DD	imagerel $LN22+48
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z DD imagerel $LN7
	DD	imagerel $LN7+31
	DD	imagerel $unwind$??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z DD imagerel $LN8
	DD	imagerel $LN8+60
	DD	imagerel $unwind$??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z DD imagerel $LN10
	DD	imagerel $LN10+74
	DD	imagerel $unwind$??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN48
	DD	imagerel $LN48+63
	DD	imagerel $unwind$?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+24
	DD	imagerel $unwind$?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+18
	DD	imagerel $unwind$?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+26
	DD	imagerel $unwind$?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281+74
	DD	imagerel $LN281+303
	DD	imagerel $chain$4$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281+303
	DD	imagerel $LN281+336
	DD	imagerel $chain$5$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281+336
	DD	imagerel $LN281+342
	DD	imagerel $chain$6$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN58
	DD	imagerel $LN58+85
	DD	imagerel $unwind$??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN43
	DD	imagerel $LN43+35
	DD	imagerel $unwind$?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN48
	DD	imagerel $LN48+63
	DD	imagerel $unwind$?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN43
	DD	imagerel $LN43+35
	DD	imagerel $unwind$?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+24
	DD	imagerel $unwind$?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD imagerel $LN58
	DD	imagerel $LN58+71
	DD	imagerel $unwind$?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281+74
	DD	imagerel $LN281+300
	DD	imagerel $chain$4$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281+300
	DD	imagerel $LN281+333
	DD	imagerel $chain$5$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD imagerel $LN281+333
	DD	imagerel $LN281+339
	DD	imagerel $chain$6$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ DD imagerel $LN156
	DD	imagerel $LN156+189
	DD	imagerel $unwind$?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD imagerel $LN61
	DD	imagerel $LN61+85
	DD	imagerel $unwind$??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z DD imagerel $LN113
	DD	imagerel $LN113+212
	DD	imagerel $unwind$?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ DD imagerel $LN148
	DD	imagerel $LN148+141
	DD	imagerel $unwind$?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN45
	DD	imagerel $LN45+45
	DD	imagerel $unwind$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN58
	DD	imagerel $LN58+85
	DD	imagerel $unwind$??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN45
	DD	imagerel $LN45+45
	DD	imagerel $unwind$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD imagerel $LN61
	DD	imagerel $LN61+85
	DD	imagerel $unwind$??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD imagerel $LN48
	DD	imagerel $LN48+51
	DD	imagerel $unwind$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD imagerel $LN115
	DD	imagerel $LN115+179
	DD	imagerel $unwind$??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z DD imagerel $LN198
	DD	imagerel $LN198+282
	DD	imagerel $unwind$?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z DD imagerel $LN117
	DD	imagerel $LN117+190
	DD	imagerel $unwind$?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+24
	DD	imagerel $unwind$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD imagerel $LN192
	DD	imagerel $LN192+180
	DD	imagerel $unwind$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN64
	DD	imagerel $LN64+85
	DD	imagerel $unwind$??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z DD imagerel $LN117
	DD	imagerel $LN117+212
	DD	imagerel $unwind$?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Reader@Json@@QEAA@XZ DD imagerel $LN244
	DD	imagerel $LN244+228
	DD	imagerel $unwind$??1Reader@Json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z DD imagerel $LN26
	DD	imagerel $LN26+104
	DD	imagerel $unwind$?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z DD imagerel $LN24
	DD	imagerel $LN24+103
	DD	imagerel $unwind$?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ErrorInfo@Reader@Json@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+27
	DD	imagerel $unwind$??0ErrorInfo@Reader@Json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z DD imagerel $LN126
	DD	imagerel $LN126+292
	DD	imagerel $unwind$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD imagerel $LN23
	DD	imagerel $LN23+268
	DD	imagerel $unwind$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD imagerel $LN55
	DD	imagerel $LN55+713
	DD	imagerel $unwind$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN37
	DD	imagerel $LN37+580
	DD	imagerel $unwind$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel $LN138
	DD	imagerel $LN138+431
	DD	imagerel $unwind$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel $LN171
	DD	imagerel $LN171+698
	DD	imagerel $unwind$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel $LN452
	DD	imagerel $LN452+1128
	DD	imagerel $unwind$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel $LN387
	DD	imagerel $LN387+721
	DD	imagerel $unwind$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA DD imagerel ?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	imagerel ?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA+29
	DD	imagerel $unwind$?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel $LN567
	DD	imagerel $LN567+1174
	DD	imagerel $unwind$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA DD imagerel ?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	imagerel ?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA+29
	DD	imagerel $unwind$?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z DD imagerel $LN33
	DD	imagerel $LN33+266
	DD	imagerel $unwind$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readComment@Reader@Json@@AEAA_NXZ DD imagerel $LN111
	DD	imagerel $LN111+580
	DD	imagerel $unwind$?readComment@Reader@Json@@AEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?match@Reader@Json@@AEAA_NPEBDH@Z DD imagerel $LN13
	DD	imagerel $LN13+100
	DD	imagerel $unwind$?match@Reader@Json@@AEAA_NPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel $LN113
	DD	imagerel $LN113+906
	DD	imagerel $unwind$?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z DD imagerel $LN12
	DD	imagerel $LN12+74
	DD	imagerel $unwind$?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?readValue@Reader@Json@@AEAA_NXZ DD imagerel $LN652
	DD	imagerel $LN652+1008
	DD	imagerel $unwind$?readValue@Reader@Json@@AEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z DD imagerel $LN100
	DD	imagerel $LN100+414
	DD	imagerel $unwind$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z DD imagerel $LN102
	DD	imagerel $LN102+453
	DD	imagerel $unwind$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN195
	DD	imagerel $LN195+180
	DD	imagerel $unwind$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Reader@Json@@QEAA@XZ DD imagerel $LN132
	DD	imagerel $LN132+205
	DD	imagerel $unwind$??0Reader@Json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel ?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	imagerel ?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z+421
	DD	imagerel $unwind$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD imagerel ?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
	DD	imagerel ?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sscanf DD imagerel $LN6
	DD	imagerel $LN6+82
	DD	imagerel $unwind$sscanf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsscanf_l DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$_vsscanf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf DD imagerel $LN8
	DD	imagerel $LN8+94
	DD	imagerel $unwind$sprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_l DD imagerel $LN6
	DD	imagerel $LN6+102
	DD	imagerel $unwind$_vsprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_l DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$_vsnprintf_l
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf DD 041601H
	DD	070125216H
	DD	030106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsscanf_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sscanf DD 041601H
	DD	070125216H
	DD	030106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel ?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z+65
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Reader@Json@@QEAA@XZ DD imagerel ??0Reader@Json@@QEAA@XZ+61
	DD	0ffffffffH
	DD	imagerel ??0Reader@Json@@QEAA@XZ+123
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Reader@Json@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0Reader@Json@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0Reader@Json@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0Reader@Json@@QEAA@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??0Reader@Json@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Reader@Json@@QEAA@XZ DD 082211H
	DD	036822H
	DD	0d641dH
	DD	0c3418H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0Reader@Json@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ+101
	DD	00H
	DD	imagerel ??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ+147
	DD	01H
	DD	imagerel ??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ+164
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	00H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z DD imagerel ?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z+58
	DD	0ffffffffH
	DD	imagerel ?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z+156
	DD	00H
	DD	imagerel ?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z+166
	DD	0ffffffffH
	DD	imagerel ?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z+380
	DD	01H
	DD	imagerel ?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z+402
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z DD 0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z DD 082c19H
	DD	017341dH
	DD	0f008d20cH
	DD	07004e006H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z DD imagerel ?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z+119
	DD	0ffffffffH
	DD	imagerel ?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z+129
	DD	00H
	DD	imagerel ?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z+176
	DD	0ffffffffH
	DD	imagerel ?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z+348
	DD	01H
	DD	imagerel ?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z+370
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z DD 0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z DD 072519H
	DD	0f009e20dH
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?readValue@Reader@Json@@AEAA_NXZ DD imagerel ?readValue@Reader@Json@@AEAA_NXZ+71
	DD	0ffffffffH
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+295
	DD	00H
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+300
	DD	0ffffffffH
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+395
	DD	00H
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+500
	DD	0ffffffffH
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+626
	DD	01H
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+744
	DD	03H
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+894
	DD	0ffffffffH
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+914
	DD	04H
	DD	imagerel ?readValue@Reader@Json@@AEAA_NXZ+941
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?readValue@Reader@Json@@AEAA_NXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??readValue@Reader@Json@@AEAA_NXZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??readValue@Reader@Json@@AEAA_NXZ@4HA
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??readValue@Reader@Json@@AEAA_NXZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??readValue@Reader@Json@@AEAA_NXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?readValue@Reader@Json@@AEAA_NXZ DD 019930522H
	DD	05H
	DD	imagerel $stateUnwindMap$?readValue@Reader@Json@@AEAA_NXZ
	DD	00H
	DD	00H
	DD	0aH
	DD	imagerel $ip2state$?readValue@Reader@Json@@AEAA_NXZ
	DD	038H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readValue@Reader@Json@@AEAA_NXZ DD 0a3119H
	DD	0157423H
	DD	014641fH
	DD	013341bH
	DD	0f008d20fH
	DD	05004e006H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?readValue@Reader@Json@@AEAA_NXZ
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?match@Reader@Json@@AEAA_NPEBDH@Z DD 020501H
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?readComment@Reader@Json@@AEAA_NXZ DD imagerel ?readComment@Reader@Json@@AEAA_NXZ+171
	DD	0ffffffffH
	DD	imagerel ?readComment@Reader@Json@@AEAA_NXZ+384
	DD	00H
	DD	imagerel ?readComment@Reader@Json@@AEAA_NXZ+417
	DD	01H
	DD	imagerel ?readComment@Reader@Json@@AEAA_NXZ+441
	DD	0ffffffffH
	DD	imagerel ?readComment@Reader@Json@@AEAA_NXZ+516
	DD	02H
	DD	imagerel ?readComment@Reader@Json@@AEAA_NXZ+549
	DD	03H
	DD	imagerel ?readComment@Reader@Json@@AEAA_NXZ+563
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?readComment@Reader@Json@@AEAA_NXZ DD 0ffffffffH
	DD	imagerel ?dtor$2@?0??readComment@Reader@Json@@AEAA_NXZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??readComment@Reader@Json@@AEAA_NXZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??readComment@Reader@Json@@AEAA_NXZ@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??readComment@Reader@Json@@AEAA_NXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?readComment@Reader@Json@@AEAA_NXZ DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?readComment@Reader@Json@@AEAA_NXZ
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?readComment@Reader@Json@@AEAA_NXZ
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readComment@Reader@Json@@AEAA_NXZ DD 062b19H
	DD	010641cH
	DD	0f3414H
	DD	07002b206H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?readComment@Reader@Json@@AEAA_NXZ
	DD	052H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z DD imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+65
	DD	0ffffffffH
	DD	imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+76
	DD	00H
	DD	imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+104
	DD	01H
	DD	imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+128
	DD	0ffffffffH
	DD	imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+188
	DD	02H
	DD	imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+221
	DD	03H
	DD	imagerel ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z+235
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z DD 042019H
	DD	07004b208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z
	DD	052H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+91
	DD	00H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+119
	DD	01H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+229
	DD	02H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+251
	DD	00H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+793
	DD	04H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+872
	DD	00H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+916
	DD	03H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+996
	DD	00H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+1032
	DD	05H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+1111
	DD	00H
	DD	imagerel ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z+1140
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$2@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$3@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$4@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 0b3519H
	DD	01f7427H
	DD	01e6423H
	DD	01d341fH
	DD	0180113H
	DD	0e006f008H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	0b2H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z+70
	DD	0ffffffffH
	DD	imagerel ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z+100
	DD	00H
	DD	imagerel ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z+212
	DD	01H
	DD	imagerel ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z+316
	DD	0ffffffffH
	DD	imagerel ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z+576
	DD	02H
	DD	imagerel ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z+663
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 062a19H
	DD	014641bH
	DD	0133417H
	DD	07004f20bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+140
	DD	0ffffffffH
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+366
	DD	04H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+492
	DD	0ffffffffH
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+502
	DD	00H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+528
	DD	01H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+567
	DD	02H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+588
	DD	03H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+608
	DD	02H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+771
	DD	05H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+984
	DD	06H
	DD	imagerel ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z+1099
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$6@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$1@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 093019H
	DD	01b6422H
	DD	01a341eH
	DD	0140112H
	DD	07005e007H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	092H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+155
	DD	0ffffffffH
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+165
	DD	00H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+191
	DD	0ffffffffH
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+269
	DD	01H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+299
	DD	02H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+338
	DD	03H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+359
	DD	04H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+379
	DD	03H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+548
	DD	05H
	DD	imagerel ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z+663
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$5@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$6@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	03H
	DD	imagerel ?dtor$3@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	00H
	DD	00H
	DD	0aH
	DD	imagerel $ip2state$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 093019H
	DD	01b6422H
	DD	01a341eH
	DD	0140112H
	DD	07005e007H
	DD	05004H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	09aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z DD imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z+72
	DD	00H
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z+164
	DD	01H
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z+369
	DD	00H
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z+402
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	050H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z DD 082d19H
	DD	017541eH
	DD	016341aH
	DD	0e007f20eH
	DD	060047005H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+68
	DD	0ffffffffH
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+298
	DD	01H
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+310
	DD	0ffffffffH
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+355
	DD	02H
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+377
	DD	0ffffffffH
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+413
	DD	00H
	DD	imagerel ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z+435
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 082c19H
	DD	017341dH
	DD	0f008d20cH
	DD	07004e006H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+88
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+108
	DD	00H
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+264
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+284
	DD	02H
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+322
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+342
	DD	01H
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+431
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+451
	DD	03H
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+555
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+575
	DD	04H
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+635
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+676
	DD	05H
	DD	imagerel ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+698
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
	DD	00H
	DD	00H
	DD	0dH
	DD	imagerel $ip2state$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD 082a19H
	DD	0f00bf212H
	DD	0c007e009H
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD imagerel ?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+70
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+90
	DD	00H
	DD	imagerel ?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+206
	DD	0ffffffffH
	DD	imagerel ?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+226
	DD	01H
	DD	imagerel ?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z+255
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z DD 042019H
	DD	070049208H
	DD	030026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z DD imagerel ?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z+86
	DD	00H
	DD	imagerel ?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z+255
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z DD 062419H
	DD	011010cH
	DD	060047005H
	DD	030025003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ErrorInfo@Reader@Json@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z DD 060f01H
	DD	0b640fH
	DD	0a340fH
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z DD 060f01H
	DD	0b640fH
	DD	0a340fH
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Reader@Json@@QEAA@XZ DD imagerel ??1Reader@Json@@QEAA@XZ+55
	DD	00H
	DD	imagerel ??1Reader@Json@@QEAA@XZ+70
	DD	01H
	DD	imagerel ??1Reader@Json@@QEAA@XZ+149
	DD	00H
	DD	imagerel ??1Reader@Json@@QEAA@XZ+195
	DD	02H
	DD	imagerel ??1Reader@Json@@QEAA@XZ+212
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Reader@Json@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	00H
	DD	imagerel __imp___std_terminate
	DD	00H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Reader@Json@@QEAA@XZ DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??1Reader@Json@@QEAA@XZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??1Reader@Json@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Reader@Json@@QEAA@XZ DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Reader@Json@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 040d01H
	DD	02680dH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD imagerel ??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ+101
	DD	0ffffffffH
	DD	imagerel ??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ+147
	DD	00H
	DD	imagerel ??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ+164
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD 061919H
	DD	096419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD imagerel ?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ+13
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD imagerel ??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ+18
	DD	0ffffffffH
	DD	imagerel ??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ+32
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ DD 040d01H
	DD	02680dH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ+26
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ DD 040d01H
	DD	02680dH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ+26
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ DD 040d01H
	DD	02680dH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD 021H
	DD	imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD 020021H
	DD	0be400H
	DD	imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD 0a1d21H
	DD	04f41dH
	DD	0be418H
	DD	0ac40fH
	DD	09740aH
	DD	083405H
	DD	imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z DD 030701H
	DD	060034207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ DD 040e01H
	DD	02680eH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ DD 040d01H
	DD	02680dH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD 021H
	DD	imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD 020021H
	DD	0be400H
	DD	imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD 0a2021H
	DD	04f420H
	DD	0be418H
	DD	0ac40fH
	DD	09740aH
	DD	083405H
	DD	imagerel $LN281
	DD	imagerel $LN281+74
	DD	imagerel $unwind$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z DD 030701H
	DD	060034207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ DD 040e01H
	DD	02680eH
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_scanf_options
_TEXT	SEGMENT
__local_stdio_scanf_options PROC			; COMDAT

; 83   :     static unsigned __int64 _OptionsStorage;
; 84   :     return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 85   : }

	ret	0
__local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsnprintf_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vsnprintf_l PROC					; COMDAT

; 1385 : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx

; 1386 :     int const _Result = __stdio_common_vsprintf(

	call	__local_stdio_printf_options
	mov	r9, rdi
	mov	r8, rsi
	mov	rdx, rbp
	mov	rcx, QWORD PTR [rax]
	mov	rax, QWORD PTR _ArgList$[rsp]
	or	rcx, 1
	mov	QWORD PTR [rsp+40], rax
	mov	QWORD PTR [rsp+32], rbx
	call	QWORD PTR __imp___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;
; 1391 : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	ecx, -1
	mov	rbp, QWORD PTR [rsp+72]
	test	eax, eax
	mov	rsi, QWORD PTR [rsp+80]
	cmovs	eax, ecx
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsprintf_l
_TEXT	SEGMENT
_Buffer$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vsprintf_l PROC					; COMDAT

; 1455 : {

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx

; 1386 :     int const _Result = __stdio_common_vsprintf(

	call	__local_stdio_printf_options
	mov	QWORD PTR [rsp+40], rbx
	mov	r9, rsi
	mov	rbx, -1
	mov	QWORD PTR [rsp+32], rdi
	mov	r8, rbx
	mov	rdx, rbp
	mov	rcx, QWORD PTR [rax]
	or	rcx, 1
	call	QWORD PTR __imp___stdio_common_vsprintf

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 1459 :     #pragma warning(pop)
; 1460 : }

	mov	rbp, QWORD PTR [rsp+72]

; 1390 :     return _Result < 0 ? -1 : _Result;

	test	eax, eax

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 1459 :     #pragma warning(pop)
; 1460 : }

	mov	rsi, QWORD PTR [rsp+80]

; 1390 :     return _Result < 0 ? -1 : _Result;

	cmovs	eax, ebx

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 1459 :     #pragma warning(pop)
; 1460 : }

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT sprintf
_TEXT	SEGMENT
_Buffer$ = 80
_Format$ = 88
sprintf	PROC						; COMDAT

; 1776 : {

$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx

; 1777 :     int _Result;
; 1778 :     va_list _ArgList;
; 1779 :     __crt_va_start(_ArgList, _Format);

	lea	rsi, QWORD PTR _Format$[rsp+8]
	mov	rdi, rcx

; 1386 :     int const _Result = __stdio_common_vsprintf(

	call	__local_stdio_printf_options
	mov	r9, rbx
	mov	QWORD PTR [rsp+40], rsi
	mov	rbx, -1
	mov	QWORD PTR [rsp+32], 0
	mov	r8, rbx
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	or	rcx, 1
	call	QWORD PTR __imp___stdio_common_vsprintf

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

	test	eax, eax
	cmovs	eax, ebx

; 1780 : 
; 1781 :     #pragma warning(push)
; 1782 :     #pragma warning(disable: 4996) // Deprecation
; 1783 :     _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1784 :     #pragma warning(pop)
; 1785 : 
; 1786 :     __crt_va_end(_ArgList);
; 1787 :     return _Result;
; 1788 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
sprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsscanf_l
_TEXT	SEGMENT
_Buffer$ = 64
_Format$ = 72
_Locale$dead$ = 80
_ArgList$ = 88
_vsscanf_l PROC						; COMDAT

; 2166 : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, rdx
	mov	rsi, rcx

; 2167 :     return __stdio_common_vsscanf(

	call	__local_stdio_scanf_options
	mov	QWORD PTR [rsp+40], rbx
	mov	r9, rdi
	mov	r8, -1
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rsi
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsscanf

; 2168 :         _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 2169 :         _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2170 : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT sscanf
_TEXT	SEGMENT
_Buffer$ = 80
_Format$ = 88
sscanf	PROC						; COMDAT

; 2261 : {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, rdx

; 2262 :     int _Result;
; 2263 :     va_list _ArgList;
; 2264 :     __crt_va_start(_ArgList, _Format);

	lea	rsi, QWORD PTR _Format$[rsp+8]
	mov	rdi, rcx

; 2167 :     return __stdio_common_vsscanf(

	call	__local_stdio_scanf_options
	mov	QWORD PTR [rsp+40], rsi
	mov	r9, rbx
	mov	r8, -1
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsscanf

; 2265 :     _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);
; 2266 :     __crt_va_end(_ArgList);
; 2267 :     return _Result;
; 2268 : }

	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Container_proxy@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_proxy@std@@QEAA@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT

; 68   : 		: _Mycont(nullptr), _Myfirstiter(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 70   : 		}

	mov	rax, rcx
	ret	0
??0_Container_proxy@std@@QEAA@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rcx], 0

; 82   : 		}

	mov	rax, rcx
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 110  : 		}

	mov	rax, rcx
	ret	0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 120  : 		if (_Myproxy != _Right._Myproxy)

	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN13@Iterator_b

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN13@Iterator_b

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN13@Iterator_b:

; 115  : 		*this = _Right;
; 116  : 		}

	mov	rax, rcx
	ret	0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 120  : 		if (_Myproxy != _Right._Myproxy)

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	je	SHORT $LN10@operator

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)

	test	rax, rax
	je	SHORT $LN10@operator

; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN10@operator

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN10@operator:

; 132  : 				}
; 133  : 			}
; 134  : 
; 135  : 		return (*this);
; 136  : 		}

	mov	rax, rcx
	ret	0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 140  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 141  : 		_Lockit _Lock(_LOCK_DEBUG);
; 142  : 		_Orphan_me();
; 143  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 144  : 		}

	ret	0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
this$ = 8
_Parent$ = 16
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN3@Adopt

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN3@Adopt:

; 171  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			}
; 173  : 		}

	ret	0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	jne	SHORT $LN3@Getcont

; 183  : 		}

	ret	0
$LN3@Getcont:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 183  : 		}

	ret	0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 215  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 216  : 	if (_Myproxy != nullptr)
; 217  : 		{	// proxy allocated, drain it
; 218  : 		_Lockit _Lock(_LOCK_DEBUG);
; 219  : 
; 220  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;
; 221  : 			*_Pnext != nullptr; *_Pnext = (*_Pnext)->_Mynextiter)
; 222  : 			(*_Pnext)->_Myproxy = nullptr;
; 223  : 		_Myproxy->_Myfirstiter = nullptr;
; 224  : 		}
; 225  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 226  : 	}

	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ??0Features@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Features@Json@@QEAA@XZ PROC				; Json::Features::Features, COMDAT

	mov	WORD PTR [rcx], 1

	mov	rax, rcx
	ret	0
??0Features@Json@@QEAA@XZ ENDP				; Json::Features::Features
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?all@Features@Json@@SA?AV12@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 8
?all@Features@Json@@SA?AV12@XZ PROC			; Json::Features::all, COMDAT

	mov	WORD PTR [rcx], 1

	mov	rax, rcx

	ret	0
?all@Features@Json@@SA?AV12@XZ ENDP			; Json::Features::all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?in@Json@@YA_NDDDDD@Z
_TEXT	SEGMENT
c$ = 8
c1$dead$ = 16
c2$dead$ = 24
c3$dead$ = 32
c4$dead$ = 40
?in@Json@@YA_NDDDDD@Z PROC				; Json::in, COMDAT

	sub	cl, 43					; 0000002bH
	cmp	cl, 58					; 0000003aH
	ja	SHORT $LN5@in
	movsx	rax, cl
	mov	rcx, 288230376218820617			; 0400000004000009H
	bt	rcx, rax
	jae	SHORT $LN5@in
	mov	al, 1

	ret	0
$LN5@in:

	xor	al, al

	ret	0
?in@Json@@YA_NDDDDD@Z ENDP				; Json::in
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?in@Json@@YA_NDDDDDD@Z
_TEXT	SEGMENT
c$ = 8
c1$dead$ = 16
c2$dead$ = 24
c3$dead$ = 32
c4$dead$ = 40
c5$dead$ = 48
?in@Json@@YA_NDDDDDD@Z PROC				; Json::in, COMDAT

	sub	cl, 43					; 0000002bH
	cmp	cl, 58					; 0000003aH
	ja	SHORT $LN5@in
	movsx	rax, cl
	mov	rcx, 288230376218820621			; 040000000400000dH
	bt	rcx, rax
	jae	SHORT $LN5@in
	mov	al, 1

	ret	0
$LN5@in:

	xor	al, al

	ret	0
?in@Json@@YA_NDDDDDD@Z ENDP				; Json::in
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?containsNewLine@Json@@YA_NPEBD0@Z
_TEXT	SEGMENT
begin$ = 8
end$ = 16
?containsNewLine@Json@@YA_NPEBD0@Z PROC			; Json::containsNewLine, COMDAT

	cmp	rcx, rdx
	jae	SHORT $LN3@containsNe
$LL4@containsNe:

	movzx	eax, BYTE PTR [rcx]
	cmp	al, 10
	je	SHORT $LN9@containsNe
	cmp	al, 13
	je	SHORT $LN9@containsNe

	inc	rcx
	cmp	rcx, rdx
	jb	SHORT $LL4@containsNe
$LN3@containsNe:

	xor	al, al

	ret	0
$LN9@containsNe:

	mov	al, 1

	ret	0
?containsNewLine@Json@@YA_NPEBD0@Z ENDP			; Json::containsNewLine
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
cp$ = 72
?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Json::codePointToUTF8, COMDAT

	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	ebx, edx
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	DWORD PTR $T1[rsp], 1

	cmp	ebx, 127				; 0000007fH
	ja	SHORT $LN2@codePointT

	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+1]
	mov	rcx, rdi
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	xor	edx, edx
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]

	mov	BYTE PTR [rax], bl
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN2@codePointT:

	cmp	ebx, 2047				; 000007ffH
	ja	SHORT $LN4@codePointT

	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+2]
	mov	rcx, rdi
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	mov	edx, 1
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, bl
	and	cl, 63					; 0000003fH
	or	cl, -128				; ffffffffffffff80H
	mov	BYTE PTR [rax], cl

	xor	edx, edx
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	shr	ebx, 6
	and	bl, 31
	or	bl, -64					; ffffffffffffffc0H

	mov	BYTE PTR [rax], bl
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN4@codePointT:

	cmp	ebx, 65535				; 0000ffffH
	ja	SHORT $LN6@codePointT

	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+3]
	mov	rcx, rdi
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	mov	edx, 2
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, bl
	and	cl, 63					; 0000003fH
	or	cl, -128				; ffffffffffffff80H
	mov	BYTE PTR [rax], cl

	mov	edx, 1
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	mov	ecx, ebx
	shr	ecx, 6
	and	cl, 63					; 0000003fH
	or	cl, -128				; ffffffffffffff80H
	mov	BYTE PTR [rax], cl

	xor	edx, edx
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	shr	ebx, 12
	and	bl, 15
	or	bl, -32					; ffffffffffffffe0H

	mov	BYTE PTR [rax], bl
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
$LN6@codePointT:

	cmp	ebx, 1114111				; 0010ffffH
	ja	SHORT $LN12@codePointT

	xor	r8d, r8d
	lea	edx, QWORD PTR [r8+4]
	mov	rcx, rdi
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	mov	edx, 3
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, bl
	and	cl, 63					; 0000003fH
	or	cl, -128				; ffffffffffffff80H
	mov	BYTE PTR [rax], cl

	mov	edx, 2
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	mov	ecx, ebx
	shr	ecx, 6
	and	cl, 63					; 0000003fH
	or	cl, -128				; ffffffffffffff80H
	mov	BYTE PTR [rax], cl

	mov	edx, 1
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	mov	ecx, ebx
	shr	ecx, 12
	and	cl, 63					; 0000003fH
	or	cl, -128				; ffffffffffffff80H
	mov	BYTE PTR [rax], cl

	xor	edx, edx
	mov	rcx, rdi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	shr	ebx, 18
	and	bl, 7
	or	bl, -16

	mov	BYTE PTR [rax], bl
$LN12@codePointT:
	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
	int	3
?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Json::codePointToUTF8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
cp$ = 72
?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `Json::codePointToUTF8'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN11@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `Json::codePointToUTF8'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
cp$ = 72
?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA PROC ; `Json::codePointToUTF8'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN11@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z@4HA ENDP ; `Json::codePointToUTF8'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ??0Reader@Json@@QEAA@XZ
_TEXT	SEGMENT
$T37 = 32
this$ = 80
this$ = 88
??0Reader@Json@@QEAA@XZ PROC				; Json::Reader::Reader, COMDAT

$LN132:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T37[rsp], -2
	mov	QWORD PTR [rsp+96], rbx
	mov	QWORD PTR [rsp+104], rsi
	movaps	XMMWORD PTR [rsp+48], xmm6
	mov	rdi, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	esi, esi
	mov	QWORD PTR [rcx], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rsi

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rsi

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rsi

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rsi+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rdi], rax
	xorps	xmm6, xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
	lea	ecx, QWORD PTR [rsi+16]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rdi]
	mov	QWORD PTR [rax], rdi
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rbx, QWORD PTR [rdi+40]
	mov	QWORD PTR this$[rsp], rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rbx], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rbx+8], rsi

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rbx+16], rsi

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rbx+24], rsi

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rbx+32], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rsi+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
	lea	ecx, QWORD PTR [rsi+16]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]
	mov	QWORD PTR [rax], rbx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rcx, QWORD PTR [rdi+80]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rdi+152]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	WORD PTR [rdi+184], 1

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??0Reader@Json@@QEAA@XZ ENDP				; Json::Reader::Reader
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T37 = 32
this$ = 80
this$ = 88
?dtor$0@?0???0Reader@Json@@QEAA@XZ@4HA PROC		; `Json::Reader::Reader'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???0Reader@Json@@QEAA@XZ@4HA ENDP		; `Json::Reader::Reader'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T37 = 32
this$ = 80
this$ = 88
?dtor$0@?0???0Reader@Json@@QEAA@XZ@4HA PROC		; `Json::Reader::Reader'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
?dtor$0@?0???0Reader@Json@@QEAA@XZ@4HA ENDP		; `Json::Reader::Reader'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T69 = 32
this$ = 64
??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::~stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >, COMDAT
$LN195:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T69[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	rbx, rcx

; 1377 : 		return (this->_Mysize() == 0);

	mov	rax, QWORD PTR [rcx+32]

; 1871 : 		while (!empty())

	xor	esi, esi
	test	rax, rax
	je	SHORT $LN8@stack
	npad	9
$LL7@stack:

; 1518 : 		if (--this->_Mysize() == 0)

	sub	rax, 1
	mov	QWORD PTR [rcx+32], rax
	jne	SHORT $LN30@stack

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rcx+24], rsi
$LN30@stack:

; 1871 : 		while (!empty())

	test	rax, rax
	jne	SHORT $LL7@stack
$LN8@stack:

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	rdi, QWORD PTR [rcx+16]
	test	rdi, rdi
	je	SHORT $LN10@stack
	npad	4
$LL9@stack:

; 1877 : 			{	// free storage for a block and destroy pointer
; 1878 : 			if (this->_Map()[--_Block] != pointer())

	dec	rdi
	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rax+rdi*8]
	test	rcx, rcx
	je	SHORT $LN109@stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	edx, 16
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
$LN109@stack:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	rdi, rdi
	jne	SHORT $LL9@stack
$LN10@stack:

; 1879 : 				{	// free block and destroy its pointer
; 1880 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1881 : 				_Alpty_traits::destroy(_Almap, _STD addressof(this->_Map()[_Block]));
; 1882 : 				}
; 1883 : 			}
; 1884 : 
; 1885 : 		if (this->_Map() != _Mapptr())

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN13@stack

; 1886 : 			{
; 1887 : 			_Almap.deallocate(this->_Map(), this->_Mapsize());	// free storage for map

	mov	rdx, QWORD PTR [rbx+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rdx*8]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
$LN13@stack:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1890 : 		this->_Mapsize() = 0;

	mov	QWORD PTR [rbx+16], rsi

; 1891 : 		this->_Map() = _Mapptr();

	mov	QWORD PTR [rbx+8], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rbx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], rsi
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::~stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z
_TEXT	SEGMENT
token$27 = 32
$T24 = 56
$T28 = 64
$T25 = 72
__$ArrayPad$ = 104
this$ = 160
document$ = 168
root$ = 176
collectComments$ = 184
?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z PROC ; Json::Reader::parse, COMDAT

$LN102:
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	mov	QWORD PTR $T28[rsp], -2
	mov	QWORD PTR [rsp+184], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	movzx	esi, r9b
	mov	rbp, r8
	mov	rbx, rcx

	add	rcx, 80					; 00000050H
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	lea	rcx, QWORD PTR [rbx+80]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	r14, rax

	lea	rcx, QWORD PTR [rbx+80]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	r15, QWORD PTR [r14+rax]

	mov	QWORD PTR [rbx+112], r14

	mov	QWORD PTR [rbx+120], r15

	xor	edi, edi
	mov	edx, edi
	cmp	BYTE PTR [rbx+184], dl
	cmovne	edx, esi

	mov	BYTE PTR [rbx+186], dl

	mov	QWORD PTR [rbx+128], r14

	mov	QWORD PTR [rbx+136], rdi

	mov	QWORD PTR [rbx+144], rdi

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, QWORD PTR [rbx+152]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	npad	1

	lea	rcx, QWORD PTR [rbx+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1690 : 		_Tidy();

	call	?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
	npad	1

; 1377 : 		return (this->_Mysize() == 0);

	mov	rax, QWORD PTR [rbx+32]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	test	rax, rax
	je	SHORT $LN5@parse
	npad	1
$LL4@parse:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1518 : 		if (--this->_Mysize() == 0)

	sub	rax, 1
	mov	QWORD PTR [rbx+32], rax
	jne	SHORT $LN28@parse

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rbx+24], rdi
$LN28@parse:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	test	rax, rax
	jne	SHORT $LL4@parse
$LN5@parse:

	mov	QWORD PTR $T24[rsp], rbp
	lea	rdx, QWORD PTR $T24[rsp]
	mov	rcx, rbx
	call	?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::push

	mov	rcx, rbx
	call	?readValue@Reader@Json@@AEAA_NXZ	; Json::Reader::readValue
	movzx	edi, al

	cmp	BYTE PTR [rbx+184], 0
	je	SHORT $LN80@parse
	npad	7
$LL79@parse:

	lea	rdx, QWORD PTR token$27[rsp]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	cmp	DWORD PTR token$27[rsp], 12
	je	SHORT $LL79@parse

	jmp	SHORT $LN81@parse
$LN80@parse:

	lea	rdx, QWORD PTR token$27[rsp]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
$LN81@parse:

	cmp	BYTE PTR [rbx+186], 0
	je	SHORT $LN7@parse
	lea	rcx, QWORD PTR [rbx+152]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN7@parse

	mov	r8d, 2
	lea	rdx, QWORD PTR [rbx+152]
	mov	rcx, rbp
	call	?setComment@Value@Json@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::setComment
$LN7@parse:

	cmp	BYTE PTR [rbx+185], 0
	je	SHORT $LN9@parse
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1315 :    return type_ == stringValue;

	movzx	eax, BYTE PTR [rbp+8]
	test	al, al
	je	SHORT $LN9@parse
	sub	al, 6
	cmp	al, 1
	jbe	SHORT $LN9@parse
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	DWORD PTR token$27[rsp], 13

	mov	QWORD PTR token$27[rsp+8], r14

	mov	QWORD PTR token$27[rsp+16], r15

	lea	rdx, OFFSET FLAT:??_C@_0EC@HCHNIDLM@A?5valid?5JSON?5document?5must?5be?5e@
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	xor	r9d, r9d
	lea	r8, QWORD PTR token$27[rsp]
	lea	rdx, QWORD PTR $T25[rsp]
	mov	rcx, rbx
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	npad	1
	lea	rcx, QWORD PTR $T25[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	xor	al, al

	jmp	SHORT $LN3@parse
$LN9@parse:

	movzx	eax, dil
$LN3@parse:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+184]
	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z ENDP ; Json::Reader::parse
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
token$27 = 32
$T24 = 56
$T28 = 64
$T25 = 72
__$ArrayPad$ = 104
this$ = 160
document$ = 168
root$ = 176
collectComments$ = 184
?dtor$0@?0??parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z@4HA PROC ; `Json::Reader::parse'::`1'::dtor$0
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z@4HA ENDP ; `Json::Reader::parse'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
token$27 = 32
$T24 = 56
$T28 = 64
$T25 = 72
__$ArrayPad$ = 104
this$ = 160
document$ = 168
root$ = 176
collectComments$ = 184
?dtor$0@?0??parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z@4HA PROC ; `Json::Reader::parse'::`1'::dtor$0
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??parse@Reader@Json@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@2@_N@Z@4HA ENDP ; `Json::Reader::parse'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z
_TEXT	SEGMENT
token$ = 32
$T24 = 56
$T26 = 64
$T25 = 72
__$ArrayPad$ = 104
this$ = 176
beginDoc$ = 184
endDoc$ = 192
root$ = 200
collectComments$ = 208
?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z PROC	; Json::Reader::parse, COMDAT

$LN100:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T26[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, r9
	mov	r15, r8
	mov	r14, rdx
	mov	rbx, rcx

	mov	QWORD PTR [rcx+112], rdx

	mov	QWORD PTR [rcx+120], r8

	xor	edi, edi
	mov	ecx, edi
	movzx	eax, BYTE PTR collectComments$[rsp]
	cmp	BYTE PTR [rbx+184], cl
	cmovne	ecx, eax

	mov	BYTE PTR [rbx+186], cl

	mov	QWORD PTR [rbx+128], rdx

	mov	QWORD PTR [rbx+136], rdi

	mov	QWORD PTR [rbx+144], rdi

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, QWORD PTR [rbx+152]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	npad	1

	lea	rcx, QWORD PTR [rbx+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1690 : 		_Tidy();

	call	?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
	npad	1

; 1377 : 		return (this->_Mysize() == 0);

	mov	rax, QWORD PTR [rbx+32]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	test	rax, rax
	je	SHORT $LN3@parse
$LL2@parse:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1518 : 		if (--this->_Mysize() == 0)

	sub	rax, 1
	mov	QWORD PTR [rbx+32], rax
	jne	SHORT $LN26@parse

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rbx+24], rdi
$LN26@parse:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	test	rax, rax
	jne	SHORT $LL2@parse
$LN3@parse:

	mov	QWORD PTR $T24[rsp], rsi
	lea	rdx, QWORD PTR $T24[rsp]
	mov	rcx, rbx
	call	?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::push

	mov	rcx, rbx
	call	?readValue@Reader@Json@@AEAA_NXZ	; Json::Reader::readValue
	movzx	edi, al

	cmp	BYTE PTR [rbx+184], 0
	je	SHORT $LN78@parse
	npad	7
$LL77@parse:

	lea	rdx, QWORD PTR token$[rsp]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	cmp	DWORD PTR token$[rsp], 12
	je	SHORT $LL77@parse

	jmp	SHORT $LN79@parse
$LN78@parse:

	lea	rdx, QWORD PTR token$[rsp]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
$LN79@parse:

	cmp	BYTE PTR [rbx+186], 0
	je	SHORT $LN5@parse
	lea	rcx, QWORD PTR [rbx+152]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN5@parse

	mov	r8d, 2
	lea	rdx, QWORD PTR [rbx+152]
	mov	rcx, rsi
	call	?setComment@Value@Json@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::setComment
$LN5@parse:

	cmp	BYTE PTR [rbx+185], 0
	je	SHORT $LN7@parse
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1315 :    return type_ == stringValue;

	movzx	eax, BYTE PTR [rsi+8]
	test	al, al
	je	SHORT $LN7@parse
	sub	al, 6
	cmp	al, 1
	jbe	SHORT $LN7@parse
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	DWORD PTR token$[rsp], 13

	mov	QWORD PTR token$[rsp+8], r14

	mov	QWORD PTR token$[rsp+16], r15

	lea	rdx, OFFSET FLAT:??_C@_0EC@HCHNIDLM@A?5valid?5JSON?5document?5must?5be?5e@
	lea	rcx, QWORD PTR $T25[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	xor	r9d, r9d
	lea	r8, QWORD PTR token$[rsp]
	lea	rdx, QWORD PTR $T25[rsp]
	mov	rcx, rbx
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	npad	1
	lea	rcx, QWORD PTR $T25[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	xor	al, al
	jmp	SHORT $LN1@parse
$LN7@parse:

	movzx	eax, dil
$LN1@parse:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z ENDP	; Json::Reader::parse
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
token$ = 32
$T24 = 56
$T26 = 64
$T25 = 72
__$ArrayPad$ = 104
this$ = 176
beginDoc$ = 184
endDoc$ = 192
root$ = 200
collectComments$ = 208
?dtor$0@?0??parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z@4HA PROC ; `Json::Reader::parse'::`1'::dtor$0
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z@4HA ENDP ; `Json::Reader::parse'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
token$ = 32
$T24 = 56
$T26 = 64
$T25 = 72
__$ArrayPad$ = 104
this$ = 176
beginDoc$ = 184
endDoc$ = 192
root$ = 200
collectComments$ = 208
?dtor$0@?0??parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z@4HA PROC ; `Json::Reader::parse'::`1'::dtor$0
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??parse@Reader@Json@@QEAA_NPEBD0AEAVValue@2@_N@Z@4HA ENDP ; `Json::Reader::parse'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readValue@Reader@Json@@AEAA_NXZ
_TEXT	SEGMENT
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?readValue@Reader@Json@@AEAA_NXZ PROC			; Json::Reader::readValue, COMDAT

$LN652:
	mov	rax, rsp
	push	rbp
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 112				; 00000070H
	mov	QWORD PTR $T87[rbp-112], -2
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rsi
	mov	QWORD PTR [rax+32], rdi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-112], rax
	mov	rbx, rcx

	cmp	BYTE PTR [rcx+184], 0
	je	SHORT $LN23@readValue
	npad	3
$LL22@readValue:

	lea	rdx, QWORD PTR token$[rbp-112]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	mov	esi, DWORD PTR token$[rbp-112]
	cmp	esi, 12
	je	SHORT $LL22@readValue

	jmp	SHORT $LN24@readValue
$LN23@readValue:

	lea	rdx, QWORD PTR token$[rbp-112]
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	mov	esi, DWORD PTR token$[rbp-112]
$LN24@readValue:

	mov	r14b, 1

	xor	edi, edi
	cmp	BYTE PTR [rbx+186], dil
	je	$LN4@readValue
	lea	rcx, QWORD PTR [rbx+152]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	$LN4@readValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rcx, QWORD PTR [rbx+24]
	add	rcx, QWORD PTR [rbx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rdx, QWORD PTR [rbx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	eax, edi
	test	rdx, rdx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN82@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rdx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN82@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN82@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	r9, QWORD PTR [rcx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN643@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN643@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN643@readValue
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN120@readValue
$LN643@readValue:
	mov	rdx, rdi
$LN120@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r9
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r9d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	xor	r8d, r8d
	lea	rdx, QWORD PTR [rbx+152]
	mov	rcx, QWORD PTR [rcx+r9*8]
	call	?setComment@Value@Json@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::setComment

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, QWORD PTR [rbx+152]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
$LN4@readValue:

	dec	esi
	cmp	esi, 8
	ja	$LN12@readValue
	movsxd	rax, esi
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN648@readValue[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN5@readValue:

	mov	rcx, rbx
	call	?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readObject
	movzx	r14d, al

	jmp	$LN2@readValue
$LN6@readValue:

	mov	rcx, rbx
	call	?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readArray
	movzx	r14d, al

	jmp	$LN2@readValue
$LN7@readValue:

	lea	rdx, QWORD PTR token$[rbp-112]
	mov	rcx, rbx
	call	?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::decodeNumber
	movzx	r14d, al

	jmp	$LN2@readValue
$LN8@readValue:

	lea	rdx, QWORD PTR token$[rbp-112]
	mov	rcx, rbx
	call	?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::decodeString
	movzx	r14d, al

	jmp	$LN2@readValue
$LN9@readValue:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 408  : #endif

	mov	eax, DWORD PTR $T15[rbp-104]
	and	eax, -251				; ffffffffffffff05H
	or	eax, 5
	mov	DWORD PTR $T15[rbp-104], eax

; 409  : {

	mov	QWORD PTR $T15[rbp-96], rdi

; 410  :    value_.string_ = valueAllocator()->duplicateStringValue( value, value.length() );
; 411  : }
; 412  : # endif
; 413  : 
; 414  : Value::Value( bool value )

	mov	BYTE PTR $T15[rbp-112], 1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rbx+24]
	add	rdx, QWORD PTR [rbx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rbx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdi
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN197@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN197@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
$LN197@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	r8, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN644@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN644@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN644@readValue
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN235@readValue
$LN644@readValue:
	mov	rdx, rdi
$LN235@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r8
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r8d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T15[rbp-112]
	mov	rcx, QWORD PTR [rcx+r8*8]
	call	??4Value@Json@@QEAAAEAV01@AEBV01@@Z	; Json::Value::operator=
	npad	1

	jmp	$LN649@readValue
$LN10@readValue:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 408  : #endif

	mov	eax, DWORD PTR $T30[rbp-104]
	and	eax, -251				; ffffffffffffff05H
	or	eax, 5
	mov	DWORD PTR $T30[rbp-104], eax

; 409  : {

	mov	QWORD PTR $T30[rbp-96], rdi

; 410  :    value_.string_ = valueAllocator()->duplicateStringValue( value, value.length() );
; 411  : }
; 412  : # endif
; 413  : 
; 414  : Value::Value( bool value )

	mov	BYTE PTR $T30[rbp-112], dil
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rbx+32]
	add	rdx, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rbx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdi
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN312@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN312@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
$LN312@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	r8, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN645@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN645@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN645@readValue
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN350@readValue
$LN645@readValue:
	mov	rdx, rdi
$LN350@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r8
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r8d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T30[rbp-112]
	mov	rcx, QWORD PTR [rcx+r8*8]
	call	??4Value@Json@@QEAAAEAV01@AEBV01@@Z	; Json::Value::operator=
	npad	1

	jmp	SHORT $LN649@readValue
$LN11@readValue:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 270  : 

	and	DWORD PTR $T45[rbp-104], -512		; fffffffffffffe00H

; 271  : /*! \internal Default constructor initialization must be equivalent to:

	mov	QWORD PTR $T45[rbp-96], rdi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rcx, QWORD PTR [rbx+24]
	add	rcx, QWORD PTR [rbx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rdx, QWORD PTR [rbx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdi
	test	rdx, rdx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN465@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rdx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN465@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN465@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	r8, QWORD PTR [rcx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN646@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN646@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN646@readValue
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN503@readValue
$LN646@readValue:
	mov	rdx, rdi
$LN503@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r8
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r8d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T45[rbp-112]
	mov	rcx, QWORD PTR [rcx+r8*8]
	call	??4Value@Json@@QEAAAEAV01@AEBV01@@Z	; Json::Value::operator=
	npad	1
$LN649@readValue:

	lea	rcx, QWORD PTR $T45[rbp-112]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
$LN2@readValue:
	cmp	BYTE PTR [rbx+186], 0
	je	SHORT $LN13@readValue

	mov	rax, QWORD PTR [rbx+128]
	mov	QWORD PTR [rbx+136], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rbx+32]
	dec	rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rbx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdi
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN578@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN578@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
$LN578@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	add	rdx, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN616@readValue

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN616@readValue

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rax]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN616@readValue
	mov	rdi, QWORD PTR [rax]
$LN616@readValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, rdx
	shr	rcx, 1
	mov	rax, QWORD PTR [rdi+16]
	dec	rax
	and	rcx, rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rax, QWORD PTR [rdi+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	edx, 1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR [rax+rdx*8]
	mov	QWORD PTR [rbx+144], rcx
$LN13@readValue:

	movzx	eax, r14b
	jmp	SHORT $LN1@readValue
$LN12@readValue:

	lea	rdx, OFFSET FLAT:??_C@_0CP@GDDNKEK@Syntax?5error?3?5value?0?5object?5or?5@
	lea	rcx, QWORD PTR $T66[rbp-112]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	xor	r9d, r9d
	lea	r8, QWORD PTR token$[rbp-112]
	lea	rdx, QWORD PTR $T66[rbp-112]
	mov	rcx, rbx
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T66[rbp-112]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
$LN1@readValue:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-112]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+112]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rdi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rbp
	ret	0
$LN648@readValue:
	DD	$LN5@readValue
	DD	$LN12@readValue
	DD	$LN6@readValue
	DD	$LN12@readValue
	DD	$LN8@readValue
	DD	$LN7@readValue
	DD	$LN9@readValue
	DD	$LN10@readValue
	DD	$LN11@readValue
?readValue@Reader@Json@@AEAA_NXZ ENDP			; Json::Reader::readValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$0@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$0@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$0
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$1@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T30[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$1@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$1
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$2@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T45[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$2@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$2
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$3@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T66[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$0@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$0@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$1@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T30[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$1@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$2@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T45[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$2@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T45 = 32
$T30 = 32
$T15 = 32
token$ = 32
$T87 = 56
$T66 = 64
__$ArrayPad$ = 96
this$ = 144
?dtor$3@?0??readValue@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T66[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??readValue@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z
_TEXT	SEGMENT
this$ = 48
token$ = 56
?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z PROC ; Json::Reader::skipCommentTokens, COMDAT

$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

	cmp	BYTE PTR [rcx+184], 0
	mov	rbx, rdx
	mov	rdi, rcx
	je	SHORT $LN5@skipCommen
	npad	7
$LL4@skipCommen:

	mov	rdx, rbx
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	cmp	DWORD PTR [rbx], 12
	je	SHORT $LL4@skipCommen

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@skipCommen:
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

	jmp	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
?skipCommentTokens@Reader@Json@@AEAAXAEAVToken@12@@Z ENDP ; Json::Reader::skipCommentTokens
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z
_TEXT	SEGMENT
this$ = 48
token$ = 56
?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z PROC	; Json::Reader::readToken, COMDAT

$LN113:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rdi, rdx

	mov	rcx, QWORD PTR [rcx+128]
	mov	r9, QWORD PTR [rbx+120]
	cmp	rcx, r9
	je	SHORT $LN107@readToken
	mov	r8, rcx
	mov	r10, 4294976000				; 0000000100002200H
	npad	3
$LL21@readToken:

	movzx	edx, BYTE PTR [r8]

	cmp	dl, 32					; 00000020H
	ja	SHORT $LN101@readToken
	bt	r10, rdx
	jb	SHORT $LN25@readToken
$LN101@readToken:
	cmp	dl, 10
	jne	SHORT $LN107@readToken
$LN25@readToken:

	lea	rcx, QWORD PTR [r8+1]
	mov	QWORD PTR [rbx+128], rcx
	mov	r8, rcx
	cmp	rcx, r9
	jne	SHORT $LL21@readToken
$LN107@readToken:

	mov	QWORD PTR [rdi+8], rcx

	mov	rax, QWORD PTR [rbx+128]
	cmp	rax, QWORD PTR [rbx+120]
	jne	SHORT $LN28@readToken

	xor	cl, cl
	jmp	SHORT $LN27@readToken
$LN28@readToken:

	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rbx+128], rax
$LN27@readToken:

	movsx	rax, cl
	cmp	eax, 125				; 0000007dH
	ja	$LN98@readToken
	lea	r10, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN105@readToken[r10+rax]
	mov	ecx, DWORD PTR $LN106@readToken[r10+rax*4]
	add	rcx, r10
	jmp	rcx
$LN4@readToken:

	mov	DWORD PTR [rdi], 1

	jmp	SHORT $LN18@readToken
$LN5@readToken:

	mov	DWORD PTR [rdi], 2

	jmp	SHORT $LN18@readToken
$LN6@readToken:

	mov	edx, 3
	mov	DWORD PTR [rdi], edx

	jmp	SHORT $LN18@readToken
$LN7@readToken:

	mov	edx, 4
	mov	DWORD PTR [rdi], edx

	jmp	SHORT $LN18@readToken
$LN8@readToken:

	mov	DWORD PTR [rdi], 5

	xor	cl, cl

	mov	rax, QWORD PTR [rbx+128]
	mov	rdx, QWORD PTR [rbx+120]
	cmp	rax, rdx
	je	SHORT $LN108@readToken
$LN38@readToken:

	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rbx+128], rax

	cmp	cl, 92					; 0000005cH
	jne	SHORT $LN33@readToken

	cmp	rax, rdx
	je	SHORT $LN108@readToken

	inc	rax
	mov	QWORD PTR [rbx+128], rax

	jmp	SHORT $LN35@readToken
$LN33@readToken:
	cmp	cl, 34					; 00000022H
	je	SHORT $LN110@readToken
$LN35@readToken:

	cmp	rax, rdx
	jne	SHORT $LN38@readToken
$LN108@readToken:

	cmp	cl, 34					; 00000022H
$LN110@readToken:
	sete	al

	jmp	SHORT $LN2@readToken
$LN9@readToken:

	mov	rcx, rbx
	mov	DWORD PTR [rdi], 12
	call	?readComment@Reader@Json@@AEAA_NXZ	; Json::Reader::readComment
$LN2@readToken:

	test	al, al
	jne	SHORT $LN18@readToken
$LN98@readToken:

	mov	DWORD PTR [rdi], 13
$LN18@readToken:

	mov	rax, QWORD PTR [rbx+128]

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+16], rax
	mov	al, 1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN10@readToken:

	mov	DWORD PTR [rdi], 6

	mov	rcx, QWORD PTR [rbx+128]
	mov	r8, QWORD PTR [rbx+120]
	cmp	rcx, r8
	je	SHORT $LN18@readToken
	mov	r9, 288230376218820621			; 040000000400000dH
$LL44@readToken:

	movzx	edx, BYTE PTR [rcx]
	lea	eax, DWORD PTR [rdx-48]
	cmp	al, 9
	jbe	SHORT $LN51@readToken

	sub	dl, 43					; 0000002bH
	cmp	dl, 58					; 0000003aH
	ja	SHORT $LN18@readToken
	bt	r9, rdx
	jae	SHORT $LN18@readToken
$LN51@readToken:

	inc	rcx
	mov	QWORD PTR [rbx+128], rcx
	cmp	rcx, r8
	jne	SHORT $LL44@readToken

	jmp	SHORT $LN18@readToken
$LN11@readToken:

	mov	DWORD PTR [rdi], 7

	mov	r8, QWORD PTR [rbx+128]
	mov	rax, QWORD PTR [rbx+120]
	sub	rax, r8
	cmp	rax, 3
	jl	$LN98@readToken

	lea	rcx, OFFSET FLAT:??_C@_03FFDNHNKN@rue@+3
	mov	r9, r8
	sub	r9, rcx
	mov	edx, 3
	npad	5
$LL54@readToken:

	dec	rdx

	lea	rcx, QWORD PTR ??_C@_03FFDNHNKN@rue@[r10]
	add	rcx, rdx
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [r9+rcx+3], al
	jne	$LN98@readToken

	test	rdx, rdx
	jne	SHORT $LL54@readToken

	lea	rax, QWORD PTR [r8+3]
	mov	QWORD PTR [rbx+128], rax

	jmp	$LN18@readToken
$LN12@readToken:

	mov	DWORD PTR [rdi], 8

	mov	r8, QWORD PTR [rbx+128]
	mov	rax, QWORD PTR [rbx+120]
	sub	rax, r8
	cmp	rax, 4
	jl	$LN98@readToken

	lea	rcx, OFFSET FLAT:??_C@_04KCECFHEP@alse@+4
	mov	r9, r8
	sub	r9, rcx
	mov	edx, 4
$LL60@readToken:

	dec	rdx

	lea	rcx, QWORD PTR ??_C@_04KCECFHEP@alse@[r10]
	add	rcx, rdx
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [r9+rcx+4], al
	jne	$LN98@readToken

	test	rdx, rdx
	jne	SHORT $LL60@readToken

	lea	rax, QWORD PTR [r8+4]
	mov	QWORD PTR [rbx+128], rax

	jmp	$LN18@readToken
$LN13@readToken:

	mov	DWORD PTR [rdi], 9

	mov	r8, QWORD PTR [rbx+128]
	mov	rax, QWORD PTR [rbx+120]
	sub	rax, r8
	cmp	rax, 3
	jl	$LN98@readToken

	lea	rcx, OFFSET FLAT:??_C@_03KNPGGKC@ull@+3
	mov	r9, r8
	sub	r9, rcx
	mov	edx, 3
$LL66@readToken:

	dec	rdx

	lea	rcx, QWORD PTR ??_C@_03KNPGGKC@ull@[r10]
	add	rcx, rdx
	movzx	eax, BYTE PTR [rcx]
	cmp	BYTE PTR [r9+rcx+3], al
	jne	$LN98@readToken

	test	rdx, rdx
	jne	SHORT $LL66@readToken

	lea	rax, QWORD PTR [r8+3]
	mov	QWORD PTR [rbx+128], rax

	jmp	$LN18@readToken
$LN14@readToken:

	mov	DWORD PTR [rdi], 10

	jmp	$LN18@readToken
$LN15@readToken:

	mov	DWORD PTR [rdi], 11

	jmp	$LN18@readToken
$LN16@readToken:

	mov	DWORD PTR [rdi], 0

	jmp	$LN18@readToken
	npad	3
$LN106@readToken:

	DD	$LN16@readToken
	DD	$LN8@readToken
	DD	$LN14@readToken
	DD	$LN10@readToken
	DD	$LN9@readToken
	DD	$LN15@readToken
	DD	$LN6@readToken
	DD	$LN7@readToken
	DD	$LN12@readToken
	DD	$LN13@readToken
	DD	$LN11@readToken
	DD	$LN4@readToken
	DD	$LN5@readToken
	DD	$LN98@readToken
$LN105@readToken:
	DB	0
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	1
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	2
	DB	3
	DB	13
	DB	4
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	5
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	6
	DB	13
	DB	7
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	8
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	9
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	10
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	13
	DB	11
	DB	13
	DB	12
?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ENDP	; Json::Reader::readToken
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?skipSpaces@Reader@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?skipSpaces@Reader@Json@@AEAAXXZ PROC			; Json::Reader::skipSpaces, COMDAT

	mov	rax, QWORD PTR [rcx+128]
	mov	r8, rcx
	mov	r9, QWORD PTR [rcx+120]
	cmp	rax, r9
	je	SHORT $LN4@skipSpaces
	mov	r10, 4294977024				; 0000000100002600H
	npad	3
$LL2@skipSpaces:

	movzx	edx, BYTE PTR [rax]

	cmp	dl, 32					; 00000020H
	ja	SHORT $LN4@skipSpaces
	bt	r10, rdx
	jae	SHORT $LN4@skipSpaces

	inc	rax
	mov	QWORD PTR [r8+128], rax
	cmp	rax, r9
	jne	SHORT $LL2@skipSpaces
$LN4@skipSpaces:

	ret	0
?skipSpaces@Reader@Json@@AEAAXXZ ENDP			; Json::Reader::skipSpaces
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?match@Reader@Json@@AEAA_NPEBDH@Z
_TEXT	SEGMENT
this$ = 8
pattern$ = 16
patternLength$ = 24
?match@Reader@Json@@AEAA_NPEBDH@Z PROC			; Json::Reader::match, COMDAT

$LN13:
	mov	QWORD PTR [rsp+8], rbx

	mov	r10, QWORD PTR [rcx+128]
	mov	r9, rdx
	mov	rax, QWORD PTR [rcx+120]
	mov	rbx, rcx
	sub	rax, r10
	movsxd	r11, r8d
	cmp	rax, r11
	jl	SHORT $LN8@match

	test	r8d, r8d
	je	SHORT $LN9@match

	add	rdx, r11
	mov	r8, r10
	sub	r8, r9
	npad	1
$LL2@match:
	movzx	eax, BYTE PTR [rdx-1]
	mov	rcx, rdx
	dec	rdx
	cmp	BYTE PTR [rcx+r8-1], al
	jne	SHORT $LN8@match

	mov	rax, rdx
	sub	rax, r9
	jne	SHORT $LL2@match
$LN9@match:

	lea	rax, QWORD PTR [r11+r10]
	mov	QWORD PTR [rbx+128], rax

	mov	al, 1

	mov	rbx, QWORD PTR [rsp+8]
	ret	0
$LN8@match:
	mov	rbx, QWORD PTR [rsp+8]
	xor	al, al
	ret	0
?match@Reader@Json@@AEAA_NPEBDH@Z ENDP			; Json::Reader::match
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readComment@Reader@Json@@AEAA_NXZ
_TEXT	SEGMENT
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?readComment@Reader@Json@@AEAA_NXZ PROC			; Json::Reader::readComment, COMDAT

$LN111:
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	QWORD PTR $T12[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	QWORD PTR [rsp+128], rsi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

	mov	rax, QWORD PTR [rcx+128]
	lea	rdi, QWORD PTR [rax-1]

	mov	r8, QWORD PTR [rcx+120]
	cmp	rax, r8
	je	SHORT $LN95@readCommen

	movzx	r9d, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rcx+128], rax

	cmp	r9b, 42					; 0000002aH
	jne	SHORT $LN2@readCommen

	cmp	rax, r8
	je	SHORT $LN102@readCommen

	mov	rdx, rax
	cmp	rax, r8
	je	SHORT $LN17@readCommen
$LN104@readCommen:

	movzx	ecx, BYTE PTR [rdx]
	lea	rax, QWORD PTR [rdx+1]
	mov	QWORD PTR [rbx+128], rax

	mov	rdx, rax
	cmp	cl, 42					; 0000002aH
	jne	SHORT $LN17@readCommen
	cmp	BYTE PTR [rax], 47			; 0000002fH
	je	SHORT $LN81@readCommen
$LN17@readCommen:

	mov	rax, rdx
	cmp	rdx, r8
	jne	SHORT $LN104@readCommen
$LN81@readCommen:

	cmp	rax, r8
	jne	SHORT $LN23@readCommen
$LN102@readCommen:

	xor	cl, cl
	jmp	SHORT $LN22@readCommen
$LN23@readCommen:

	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rbx+128], rax
$LN22@readCommen:

	cmp	cl, 47					; 0000002fH
	je	SHORT $LN5@readCommen
$LN95@readCommen:

	xor	al, al
$LN1@readCommen:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+120]
	mov	rsi, QWORD PTR [rsp+128]
	add	rsp, 96					; 00000060H
	pop	rdi
	ret	0
$LN2@readCommen:

	cmp	r9b, 47					; 0000002fH
	jne	SHORT $LN95@readCommen

	cmp	rax, r8
	je	SHORT $LN5@readCommen
$LN107@readCommen:

	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rbx+128], rax

	cmp	cl, 13
	je	SHORT $LN5@readCommen
	cmp	cl, 10
	je	SHORT $LN5@readCommen

	cmp	rax, r8
	jne	SHORT $LN107@readCommen
$LN5@readCommen:

	cmp	BYTE PTR [rbx+186], 0
	je	$LN50@readCommen

	xor	r8d, r8d

	mov	rax, QWORD PTR [rbx+136]
	test	rax, rax
	je	SHORT $LN8@readCommen

	cmp	rax, rdi
	jae	SHORT $LN36@readCommen
	npad	5
$LL37@readCommen:

	movzx	ecx, BYTE PTR [rax]
	cmp	cl, 10
	je	SHORT $LN8@readCommen
	cmp	cl, 13
	je	SHORT $LN8@readCommen

	inc	rax
	cmp	rax, rdi
	jb	SHORT $LL37@readCommen
$LN36@readCommen:

	cmp	r9b, 42					; 0000002aH
	jne	SHORT $LN43@readCommen
	mov	rax, rdi

	mov	rdx, QWORD PTR [rbx+128]
	cmp	rdi, rdx
	jae	SHORT $LN43@readCommen
	npad	6
$LL44@readCommen:

	movzx	ecx, BYTE PTR [rax]
	cmp	cl, 10
	je	SHORT $LN8@readCommen
	cmp	cl, 13
	je	SHORT $LN8@readCommen

	inc	rax
	cmp	rax, rdx
	jb	SHORT $LL44@readCommen
$LN43@readCommen:

	mov	r8d, 1
$LN8@readCommen:

	mov	rsi, QWORD PTR [rbx+128]

	cmp	r8d, 1
	jne	SHORT $LN49@readCommen

	lea	rcx, QWORD PTR $T4[rsp]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR $T5[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T7[rsp]
	mov	r8, rsi
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T5[rsp]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	r8d, 1
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR [rbx+144]
	call	?setComment@Value@Json@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::setComment
	npad	1

	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	al, 1
	jmp	$LN1@readCommen
$LN49@readCommen:

	add	rbx, 152				; 00000098H
	mov	rcx, rbx
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN51@readCommen

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN51@readCommen:

	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR $T9[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T11[rsp]
	mov	r8, rsi
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T9[rsp]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN50@readCommen:
	mov	al, 1
	jmp	$LN1@readCommen
?readComment@Reader@Json@@AEAA_NXZ ENDP			; Json::Reader::readComment
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$2@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$2
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$2@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$2
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$0@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$0
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$0
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$3@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$3
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$3@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$3
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$1@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$1
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$2@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$2
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$2@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$0@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$0
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$3@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$3
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$3@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T11 = 32
$T7 = 32
$T8 = 32
$T4 = 32
$T12 = 40
$T9 = 48
$T5 = 48
__$ArrayPad$ = 80
this$ = 112
?dtor$1@?0??readComment@Reader@Json@@AEAA_NXZ@4HA PROC	; `Json::Reader::readComment'::`1'::dtor$1
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??readComment@Reader@Json@@AEAA_NXZ@4HA ENDP	; `Json::Reader::readComment'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z
_TEXT	SEGMENT
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z PROC ; Json::Reader::addComment, COMDAT

$LN33:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 96					; 00000060H
	mov	QWORD PTR $T9[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, r8
	mov	rdi, rdx
	mov	rbx, rcx

	cmp	r9d, 1
	jne	SHORT $LN2@addComment

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T4[rsp]
	mov	r8, rsi
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	r8d, 1
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR [rbx+144]
	call	?setComment@Value@Json@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::setComment
	npad	1

	jmp	SHORT $LN30@addComment
$LN2@addComment:

	add	rbx, 152				; 00000098H
	mov	rcx, rbx
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN4@addComment

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN4@addComment:

	lea	rcx, QWORD PTR $T5[rsp]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR $T6[rsp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T8[rsp]
	mov	r8, rsi
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T6[rsp]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN30@addComment:

	lea	rcx, QWORD PTR $T6[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 96					; 00000060H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z ENDP ; Json::Reader::addComment
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$2@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$2@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$2
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$0@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$0
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$3@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$3
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$3@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$3
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$1@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$1
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$2@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$2
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$2@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$0@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$3@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$3
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$3@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
$T4 = 32
$T5 = 32
$T1 = 32
$T9 = 40
$T6 = 48
$T2 = 48
__$ArrayPad$ = 80
this$ = 128
begin$ = 136
end$ = 144
placement$ = 152
?dtor$1@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA PROC ; `Json::Reader::addComment'::`1'::dtor$1
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??addComment@Reader@Json@@AEAAXPEBD0W4CommentPlacement@2@@Z@4HA ENDP ; `Json::Reader::addComment'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readCStyleComment@Reader@Json@@AEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?readCStyleComment@Reader@Json@@AEAA_NXZ PROC		; Json::Reader::readCStyleComment, COMDAT

	mov	rax, QWORD PTR [rcx+128]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rcx+120]
	cmp	rax, rdx
	je	SHORT $LN16@readCStyle
$LN21@readCStyle:

	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [r8+128], rax

	cmp	cl, 42					; 0000002aH
	jne	SHORT $LN4@readCStyle
	cmp	BYTE PTR [rax], 47			; 0000002fH
	je	SHORT $LN13@readCStyle
$LN4@readCStyle:

	cmp	rax, rdx
	jne	SHORT $LN21@readCStyle

	xor	cl, cl

	cmp	cl, 47					; 0000002fH
	sete	al

	ret	0
$LN13@readCStyle:

	cmp	rax, rdx
	jne	SHORT $LN10@readCStyle
$LN16@readCStyle:

	xor	cl, cl

	cmp	cl, 47					; 0000002fH
	sete	al

	ret	0
$LN10@readCStyle:

	movzx	ecx, BYTE PTR [rax]
	inc	rax

	cmp	cl, 47					; 0000002fH

	mov	QWORD PTR [r8+128], rax

	sete	al

	ret	0
?readCStyleComment@Reader@Json@@AEAA_NXZ ENDP		; Json::Reader::readCStyleComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readCppStyleComment@Reader@Json@@AEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?readCppStyleComment@Reader@Json@@AEAA_NXZ PROC		; Json::Reader::readCppStyleComment, COMDAT

	mov	rax, QWORD PTR [rcx+128]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rcx+120]
	cmp	rax, rdx
	je	SHORT $LN18@readCppSty
$LN22@readCppSty:

	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [r8+128], rax

	cmp	cl, 13
	je	SHORT $LN18@readCppSty
	cmp	cl, 10
	je	SHORT $LN18@readCppSty

	cmp	rax, rdx
	jne	SHORT $LN22@readCppSty
$LN18@readCppSty:

	mov	al, 1
	ret	0
?readCppStyleComment@Reader@Json@@AEAA_NXZ ENDP		; Json::Reader::readCppStyleComment
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readNumber@Reader@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 8
?readNumber@Reader@Json@@AEAAXXZ PROC			; Json::Reader::readNumber, COMDAT

	mov	rax, QWORD PTR [rcx+128]
	mov	r9, rcx
	mov	r10, QWORD PTR [rcx+120]
	cmp	rax, r10
	je	SHORT $LN16@readNumber
	mov	r11, 288230376218820621			; 040000000400000dH
	npad	3
$LL2@readNumber:

	movzx	r8d, BYTE PTR [rax]
	lea	edx, DWORD PTR [r8-48]
	cmp	dl, 9
	jbe	SHORT $LN9@readNumber

	sub	r8b, 43					; 0000002bH
	cmp	r8b, 58					; 0000003aH
	ja	SHORT $LN16@readNumber
	bt	r11, r8
	jae	SHORT $LN16@readNumber
$LN9@readNumber:

	inc	rax
	mov	QWORD PTR [r9+128], rax
	cmp	rax, r10
	jne	SHORT $LL2@readNumber
$LN16@readNumber:

	ret	0
?readNumber@Reader@Json@@AEAAXXZ ENDP			; Json::Reader::readNumber
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readString@Reader@Json@@AEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?readString@Reader@Json@@AEAA_NXZ PROC			; Json::Reader::readString, COMDAT

	mov	rax, QWORD PTR [rcx+128]
	xor	dl, dl
	mov	r8, QWORD PTR [rcx+120]
	cmp	rax, r8
	je	SHORT $LN15@readString
$LN9@readString:

	movzx	edx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rcx+128], rax

	cmp	dl, 92					; 0000005cH
	jne	SHORT $LN4@readString

	cmp	rax, r8
	je	SHORT $LN15@readString

	inc	rax
	mov	QWORD PTR [rcx+128], rax

	jmp	SHORT $LN6@readString
$LN4@readString:

	cmp	dl, 34					; 00000022H
	je	SHORT $LN20@readString
$LN6@readString:

	cmp	rax, r8
	jne	SHORT $LN9@readString
$LN15@readString:

	cmp	dl, 34					; 00000022H
$LN20@readString:
	sete	al

	ret	0
?readString@Reader@Json@@AEAA_NXZ ENDP			; Json::Reader::readString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z
_TEXT	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z PROC	; Json::Reader::readObject, COMDAT

$LN567:
	mov	rax, rsp
	push	rbp
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rax-95]
	sub	rsp, 192				; 000000c0H
	mov	QWORD PTR $T133[rbp-121], -2
	mov	QWORD PTR [rax+16], rbx
	mov	QWORD PTR [rax+24], rsi
	mov	QWORD PTR [rax+32], rdi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-121], rax
	mov	rdi, rcx

	lea	rcx, QWORD PTR name$[rbp-121]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 269  : // //////////////////////////////////////////////////////////////////

	mov	eax, DWORD PTR $T1[rbp-113]
	and	eax, -505				; fffffffffffffe07H

; 270  : 

	or	eax, 7
	mov	DWORD PTR $T1[rbp-113], eax

; 271  : /*! \internal Default constructor initialization must be equivalent to:

	xor	r15d, r15d
	mov	QWORD PTR $T1[rbp-105], r15

; 293  :       break;

	lea	ecx, QWORD PTR [r15+16]
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T2[rbp-121], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 286  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	lea	rcx, QWORD PTR $T3[rbp-121]
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree

; 468  : 		: _Myhead(),

	mov	QWORD PTR [rbx], r15

; 469  : 		_Mysize(0)

	mov	QWORD PTR [rbx+8], r15

; 808  : 		_Get_data()._Myhead = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@VCZString@Value@Json@@V23@U?$less@VCZString@Value@Json@@@std@@V?$allocator@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@5@$0A@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@PEAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<Json::Value::CZString,Json::Value,std::less<Json::Value::CZString>,std::allocator<std::pair<Json::Value::CZString const ,Json::Value> >,0> >::_Buyheadnode
	mov	QWORD PTR [rbx], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 293  :       break;

	mov	QWORD PTR $T1[rbp-121], rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	r8, QWORD PTR [rdi+32]
	dec	r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rdi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	eax, r15d
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN126@readObject

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN126@readObject

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
$LN126@readObject:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	add	r8, QWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN553@readObject

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN553@readObject

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN553@readObject
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN164@readObject
$LN553@readObject:
	mov	rdx, r15
$LN164@readObject:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r8
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r8d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T1[rbp-121]
	mov	rcx, QWORD PTR [rcx+r8*8]
	call	??4Value@Json@@QEAAAEAV01@AEBV01@@Z	; Json::Value::operator=
	npad	1
	lea	rcx, QWORD PTR $T1[rbp-121]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
$LN561@readObject:

	lea	rdx, QWORD PTR tokenName$[rbp-121]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	je	$LN3@readObject
	mov	cl, 1

	mov	eax, DWORD PTR tokenName$[rbp-121]
	cmp	eax, 12
	jne	SHORT $LN548@readObject
$LL4@readObject:
	test	cl, cl
	je	$LN3@readObject

	lea	rdx, QWORD PTR tokenName$[rbp-121]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	movzx	ecx, al

	mov	eax, DWORD PTR tokenName$[rbp-121]
	cmp	eax, 12
	je	SHORT $LL4@readObject

	test	cl, cl
	je	$LN3@readObject
$LN548@readObject:

	cmp	eax, 2
	je	$LN551@readObject

	cmp	eax, 5
	jne	$LN3@readObject

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	lea	rcx, QWORD PTR name$[rbp-121]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	lea	r8, QWORD PTR name$[rbp-121]
	lea	rdx, QWORD PTR tokenName$[rbp-121]
	mov	rcx, rdi
	call	?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::Reader::decodeString
	mov	rcx, rdi
	test	al, al
	je	$LN527@readObject

	lea	rdx, QWORD PTR colon$132[rbp-121]
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	je	$LN13@readObject
	cmp	DWORD PTR colon$132[rbp-121], 11
	jne	$LN13@readObject
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rcx, QWORD PTR [rdi+32]
	add	rcx, QWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rdx, QWORD PTR [rdi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, r15

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rdx, rdx
	je	SHORT $LN256@readObject

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rdx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN256@readObject

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN256@readObject:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	rbx, QWORD PTR [rcx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN554@readObject

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN554@readObject

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN554@readObject
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN294@readObject
$LN554@readObject:
	mov	rdx, r15
$LN294@readObject:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, rbx
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	ebx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rbx, QWORD PTR [rcx+rbx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1084 : #endif

	lea	rcx, QWORD PTR name$[rbp-121]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str

; 1017 : #endif

	mov	rdx, rax
	mov	rcx, rbx
	call	?resolveReference@Value@Json@@AEAAAEAV12@PEBD_N@Z ; Json::Value::resolveReference
	mov	r14, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rdx, QWORD PTR [rdi+32]
	movzx	ecx, dl
	add	cl, BYTE PTR [rdi+24]
	test	cl, 1
	jne	SHORT $LN322@readObject
	lea	rcx, QWORD PTR [rdx+2]
	shr	rcx, 1
	cmp	QWORD PTR [rdi+16], rcx
	ja	SHORT $LN322@readObject
	mov	rcx, rdi
	call	?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Growmap
$LN322@readObject:
	mov	rax, QWORD PTR [rdi+16]
	lea	rax, QWORD PTR [rax*2-1]
	and	QWORD PTR [rdi+24], rax
	mov	rsi, QWORD PTR [rdi+24]
	add	rsi, QWORD PTR [rdi+32]

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rbx, QWORD PTR [rdi+16]
	dec	rbx
	mov	rax, rsi
	shr	rax, 1
	and	rbx, rax

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rax, QWORD PTR [rdi+8]
	cmp	QWORD PTR [rax+rbx*8], 0
	jne	SHORT $LN323@readObject
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 2
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rcx+rbx*8], rax
	mov	rax, QWORD PTR [rdi+8]
$LN323@readObject:

; 1106 : 		_Alty_traits::construct(this->_Getal(),

	and	esi, 1
	mov	rax, QWORD PTR [rax+rbx*8]
	lea	rdx, QWORD PTR [rax+rsi*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR [rax], r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1109 : 		_PUSH_BACK_END;

	inc	QWORD PTR [rdi+32]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rcx, rdi
	call	?readValue@Reader@Json@@AEAA_NXZ	; Json::Reader::readValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rdi+32], 1
	jne	SHORT $LN434@readObject

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rdi+24], r15
$LN434@readObject:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rcx, rdi
	test	al, al
	je	$LN527@readObject

	lea	rdx, QWORD PTR comma$134[rbp-121]
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	je	SHORT $LN16@readObject
	mov	ecx, DWORD PTR comma$134[rbp-121]
	lea	eax, DWORD PTR [rcx-2]
	test	eax, -11				; fffffff5H
	jne	SHORT $LN16@readObject
	cmp	ecx, 4
	je	SHORT $LN16@readObject

	mov	al, 1

	cmp	ecx, 12
	jne	SHORT $LN7@readObject
	npad	5
$LL6@readObject:
	test	al, al
	je	SHORT $LN7@readObject

	lea	rdx, QWORD PTR comma$134[rbp-121]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	mov	ecx, DWORD PTR comma$134[rbp-121]
	cmp	ecx, 12
	je	SHORT $LL6@readObject
$LN7@readObject:

	cmp	ecx, 2
	jne	$LN561@readObject
$LN564@readObject:

	mov	bl, 1
	jmp	$LN29@readObject
$LN16@readObject:

	lea	rdx, OFFSET FLAT:??_C@_0CJ@NGKOAFKA@Missing?5?8?0?8?5or?5?8?$HN?8?5in?5object?5de@
	lea	rcx, QWORD PTR $T115[rbp-121]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	xor	r9d, r9d
	lea	r8, QWORD PTR comma$134[rbp-121]
	lea	rdx, QWORD PTR $T115[rbp-121]
	mov	rcx, rdi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 307  : 		return (_Myval2);

	lea	rbx, QWORD PTR [rdi+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1367 : 		return (this->_Mysize());

	mov	rsi, QWORD PTR [rbx+32]
$LL485@readObject:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR skip$130[rbp-121]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	jne	SHORT $LN555@readObject

	movsxd	rdx, esi
	mov	rcx, rbx
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
$LN555@readObject:

	mov	eax, DWORD PTR skip$130[rbp-121]
	cmp	eax, 2
	je	SHORT $LN530@readObject
	test	eax, eax
	jne	SHORT $LL485@readObject
$LN530@readObject:

	movsxd	rdx, esi
	mov	rcx, rbx
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize

	xor	bl, bl
	lea	rcx, QWORD PTR $T115[rbp-121]
	jmp	$LN562@readObject
$LN527@readObject:

	mov	edx, 2
	call	?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z ; Json::Reader::recoverFromError
	movzx	ebx, al
	jmp	$LN29@readObject
$LN13@readObject:

	lea	rdx, OFFSET FLAT:??_C@_0CF@GCCDMCPH@Missing?5?8?3?8?5after?5object?5member@
	lea	rcx, QWORD PTR $T25[rbp-121]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	xor	r9d, r9d
	lea	r8, QWORD PTR colon$132[rbp-121]
	lea	rdx, QWORD PTR $T25[rbp-121]
	mov	rcx, rdi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 307  : 		return (_Myval2);

	lea	rbx, QWORD PTR [rdi+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1367 : 		return (this->_Mysize());

	mov	rsi, QWORD PTR [rbx+32]
	npad	1
$LL186@readObject:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR skip$131[rbp-121]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	jne	SHORT $LN556@readObject

	movsxd	rdx, esi
	mov	rcx, rbx
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
$LN556@readObject:

	mov	eax, DWORD PTR skip$131[rbp-121]
	cmp	eax, 2
	je	SHORT $LN531@readObject
	test	eax, eax
	jne	SHORT $LL186@readObject
$LN531@readObject:

	movsxd	rdx, esi
	mov	rcx, rbx
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize

	xor	bl, bl
	jmp	SHORT $LN563@readObject
$LN551@readObject:

	lea	rcx, QWORD PTR name$[rbp-121]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	$LN564@readObject
$LN3@readObject:

	lea	rdx, OFFSET FLAT:??_C@_0CC@JNCGHFHN@Missing?5?8?$HN?8?5or?5object?5member?5na@
	lea	rcx, QWORD PTR $T122[rbp-121]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	xor	r9d, r9d
	lea	r8, QWORD PTR tokenName$[rbp-121]
	lea	rdx, QWORD PTR $T122[rbp-121]
	mov	rcx, rdi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 307  : 		return (_Myval2);

	lea	rbx, QWORD PTR [rdi+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1367 : 		return (this->_Mysize());

	mov	rsi, QWORD PTR [rbx+32]
$LL502@readObject:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR skip$129[rbp-121]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	jne	SHORT $LN557@readObject

	movsxd	rdx, esi
	mov	rcx, rbx
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
$LN557@readObject:

	mov	eax, DWORD PTR skip$129[rbp-121]
	cmp	eax, 2
	je	SHORT $LN532@readObject
	test	eax, eax
	jne	SHORT $LL502@readObject
$LN532@readObject:

	movsxd	rdx, esi
	mov	rcx, rbx
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize

	xor	bl, bl
$LN563@readObject:
	lea	rcx, QWORD PTR $T122[rbp-121]
$LN562@readObject:
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
$LN29@readObject:
	lea	rcx, QWORD PTR name$[rbp-121]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-121]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+192]
	mov	rbx, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	mov	rdi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rbp
	ret	0
?readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z ENDP	; Json::Reader::readObject
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$0@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$0
	lea	rcx, QWORD PTR name$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$0
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$5
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$1@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$1@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$1
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$2@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$2
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$2
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$3@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$3
	lea	rcx, QWORD PTR $T115[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$3
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$4@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$4
	lea	rcx, QWORD PTR $T122[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$0@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$0
	lea	rcx, QWORD PTR name$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$1@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$1
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$1@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$2@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$2
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$3@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$3
	lea	rcx, QWORD PTR $T115[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$129 = 40
skip$130 = 40
skip$131 = 40
colon$132 = 40
$T133 = 64
$T2 = 72
$T115 = 80
tokenName$ = 80
$T1 = 80
$T122 = 112
comma$134 = 112
$T25 = 112
name$ = 144
__$ArrayPad$ = 176
this$ = 224
tokenStart$dead$ = 232
?dtor$4@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readObject'::`1'::dtor$4
	lea	rcx, QWORD PTR $T122[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??readObject@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readObject'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z
_TEXT	SEGMENT
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z PROC	; Json::Reader::readArray, COMDAT

$LN387:
	mov	r11, rsp
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	QWORD PTR [r11-64], -2
	mov	QWORD PTR [r11+16], rbx
	mov	QWORD PTR [r11+24], rsi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rcx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 269  : // //////////////////////////////////////////////////////////////////

	mov	eax, DWORD PTR $T1[rsp+8]
	and	eax, -506				; fffffffffffffe06H

; 270  : 

	or	eax, 6
	mov	DWORD PTR $T1[rsp+8], eax

; 271  : /*! \internal Default constructor initialization must be equivalent to:

	xor	esi, esi
	mov	QWORD PTR [r11-80], rsi

; 293  :       break;

	lea	ecx, QWORD PTR [rsi+16]
	call	??2@YAPEAX_K@Z				; operator new
	mov	rbx, rax
	mov	QWORD PTR $T2[rsp], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 286  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	lea	rcx, QWORD PTR $T3[rsp]
	call	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree

; 468  : 		: _Myhead(),

	mov	QWORD PTR [rbx], rsi

; 469  : 		_Mysize(0)

	mov	QWORD PTR [rbx+8], rsi

; 808  : 		_Get_data()._Myhead = _Buyheadnode();

	call	?_Buyheadnode@?$_Tree_comp_alloc@V?$_Tmap_traits@VCZString@Value@Json@@V23@U?$less@VCZString@Value@Json@@@std@@V?$allocator@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@5@$0A@@std@@@std@@QEAAPEAU?$_Tree_node@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@PEAX@2@XZ ; std::_Tree_comp_alloc<std::_Tmap_traits<Json::Value::CZString,Json::Value,std::less<Json::Value::CZString>,std::allocator<std::pair<Json::Value::CZString const ,Json::Value> >,0> >::_Buyheadnode
	mov	QWORD PTR [rbx], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 293  :       break;

	mov	QWORD PTR $T1[rsp], rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rdi+24]
	add	rdx, QWORD PTR [rdi+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rdi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	eax, esi
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN112@readArray

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN112@readArray

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
$LN112@readArray:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	r8, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN378@readArray

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN378@readArray

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN378@readArray
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN150@readArray
$LN378@readArray:
	mov	rdx, rsi
$LN150@readArray:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r8
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r8d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR [rcx+r8*8]
	call	??4Value@Json@@QEAAAEAV01@AEBV01@@Z	; Json::Value::operator=
	npad	1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value

	mov	rcx, QWORD PTR [rdi+128]
	mov	r9, QWORD PTR [rdi+120]
	cmp	rcx, r9
	je	SHORT $LN172@readArray
	mov	r8, rcx
	mov	r10, 4294976000				; 0000000100002200H
$LL170@readArray:

	mov	rcx, r8
	movzx	edx, BYTE PTR [r8]

	cmp	dl, 32					; 00000020H
	ja	SHORT $LN382@readArray
	movsx	rax, dl
	bt	r10, rax
	jb	SHORT $LN174@readArray
$LN382@readArray:
	cmp	dl, 10
	jne	SHORT $LN172@readArray
$LN174@readArray:

	lea	rcx, QWORD PTR [r8+1]
	mov	QWORD PTR [rdi+128], rcx
	mov	r8, rcx

	cmp	rcx, r9
	jne	SHORT $LL170@readArray
$LN172@readArray:

	cmp	BYTE PTR [rcx], 93			; 0000005dH
	jne	SHORT $LN6@readArray

	lea	rdx, QWORD PTR endArray$66[rsp]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	mov	al, 1
	jmp	$LN1@readArray
$LN6@readArray:

	mov	ebx, esi
	npad	6
$LL2@readArray:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rcx, QWORD PTR [rdi+32]
	add	rcx, QWORD PTR [rdi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rdx, QWORD PTR [rdi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rsi

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rdx, rdx
	je	SHORT $LN232@readArray

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rdx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN232@readArray

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN232@readArray:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	r8, QWORD PTR [rcx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN379@readArray

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rcx, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rcx, rcx
	je	SHORT $LN379@readArray

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN379@readArray
	mov	rdx, QWORD PTR [rax]
	jmp	SHORT $LN270@readArray
$LN379@readArray:
	mov	rdx, rsi
$LN270@readArray:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, r8
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r8d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	edx, ebx
	mov	rcx, QWORD PTR [rcx+r8*8]
	call	??AValue@Json@@QEAAAEAV01@I@Z		; Json::Value::operator[]
	inc	ebx

	mov	QWORD PTR $T36[rsp], rax
	lea	rdx, QWORD PTR $T36[rsp]
	mov	rcx, rdi
	call	?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::push

	mov	rcx, rdi
	call	?readValue@Reader@Json@@AEAA_NXZ	; Json::Reader::readValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rdi+32], 1
	jne	SHORT $LN380@readArray

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rdi+24], rsi
$LN380@readArray:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rcx, rdi
	test	al, al
	je	$LN361@readArray

	lea	rdx, QWORD PTR token$65[rsp]
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	mov	ecx, DWORD PTR token$65[rsp]
	cmp	ecx, 12
	jne	SHORT $LN5@readArray
	npad	5
$LL4@readArray:
	test	al, al
	je	SHORT $LN9@readArray

	lea	rdx, QWORD PTR token$65[rsp]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken

	mov	ecx, DWORD PTR token$65[rsp]
	cmp	ecx, 12
	je	SHORT $LL4@readArray
$LN5@readArray:

	test	al, al
	je	SHORT $LN9@readArray

	cmp	ecx, 4
	jne	$LL2@readArray

	mov	al, 1
	jmp	$LN1@readArray
$LN9@readArray:

	lea	rdx, OFFSET FLAT:??_C@_0CI@DPCANLPO@Missing?5?8?0?8?5or?5?8?$FN?8?5in?5array?5dec@
	lea	rcx, QWORD PTR $T56[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	xor	r9d, r9d
	lea	r8, QWORD PTR token$65[rsp]
	lea	rdx, QWORD PTR $T56[rsp]
	mov	rcx, rdi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1367 : 		return (this->_Mysize());

	mov	rsi, QWORD PTR [rdi+72]
	npad	7
$LL343@readArray:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rdx, QWORD PTR skip$64[rsp]
	mov	rcx, rdi
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	jne	SHORT $LN381@readArray

	movsxd	rdx, esi
	lea	rcx, QWORD PTR [rdi+40]
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
$LN381@readArray:

	mov	eax, DWORD PTR skip$64[rsp]
	cmp	eax, 4
	je	SHORT $LN364@readArray
	test	eax, eax
	jne	SHORT $LL343@readArray
$LN364@readArray:

	movsxd	rdx, esi
	lea	rcx, QWORD PTR [rdi+40]
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
	npad	1

	lea	rcx, QWORD PTR $T56[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	xor	al, al
	jmp	SHORT $LN1@readArray
$LN361@readArray:

	mov	edx, 4
	call	?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z ; Json::Reader::recoverFromError
$LN1@readArray:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+24]
	mov	rsi, QWORD PTR [r11+32]
	mov	rsp, r11
	pop	rdi
	ret	0
?readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z ENDP	; Json::Reader::readArray
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readArray'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readArray'::`1'::dtor$2
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?dtor$0@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readArray'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$0@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readArray'::`1'::dtor$0
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?dtor$1@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readArray'::`1'::dtor$1
	lea	rcx, QWORD PTR $T56[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readArray'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readArray'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readArray'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?dtor$0@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readArray'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$0@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readArray'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T3 = 32
skip$64 = 40
token$65 = 40
endArray$66 = 40
$T1 = 40
$T2 = 64
$T36 = 64
$T56 = 80
__$ArrayPad$ = 112
this$ = 144
tokenStart$dead$ = 152
?dtor$1@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::readArray'::`1'::dtor$1
	lea	rcx, QWORD PTR $T56[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??readArray@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::readArray'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z
_TEXT	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z PROC	; Json::Reader::decodeNumber, COMDAT

$LN452:
	mov	rax, rsp
	push	rbp
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rax-95]
	sub	rsp, 160				; 000000a0H
	mov	QWORD PTR $T70[rbp-89], -2
	mov	QWORD PTR [rax+24], rbx
	mov	QWORD PTR [rax+32], rsi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-89], rax
	mov	r14, rdx
	mov	rsi, rcx

	xor	al, al

	mov	r8, QWORD PTR [rdx+8]
	mov	r10, QWORD PTR [rdx+16]

	mov	rcx, r8

	cmp	r8, r10
	je	SHORT $LN445@decodeNumb
	mov	r9, 288230376218820617			; 0400000004000009H
$LL4@decodeNumb:

	test	al, al
	jne	SHORT $LN17@decodeNumb
	movzx	edx, BYTE PTR [rcx]

	lea	eax, DWORD PTR [rdx-43]
	cmp	al, 58					; 0000003aH
	ja	SHORT $LN446@decodeNumb
	movsx	rax, al
	bt	r9, rax
	jb	SHORT $LN17@decodeNumb
$LN446@decodeNumb:

	cmp	dl, 45					; 0000002dH
	jne	SHORT $LN18@decodeNumb
	cmp	rcx, r8
	jne	SHORT $LN17@decodeNumb
$LN18@decodeNumb:
	xor	al, al
	jmp	SHORT $LN19@decodeNumb
$LN17@decodeNumb:
	mov	al, 1
$LN19@decodeNumb:

	inc	rcx
	cmp	rcx, r10
	jne	SHORT $LL4@decodeNumb

	test	al, al
	je	SHORT $LN445@decodeNumb
$LN434@decodeNumb:

	mov	rdx, r14
	mov	rcx, rsi
	call	?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::decodeDouble
	jmp	$LN1@decodeNumb
$LN445@decodeNumb:

	movzx	ebx, BYTE PTR [r8]

	lea	rdx, QWORD PTR [r8+1]
	cmp	bl, 45					; 0000002dH
	cmovne	rdx, r8
	mov	eax, 429496729				; 19999999H
	mov	r11d, 214748364				; 0cccccccH
	cmovne	r11d, eax

	xor	r8d, r8d
	mov	ecx, r8d

	cmp	rdx, r10
	jae	SHORT $LN6@decodeNumb
	npad	1
$LL5@decodeNumb:

	movzx	r9d, BYTE PTR [rdx]
	inc	rdx

	lea	eax, DWORD PTR [r9-48]
	cmp	al, 9
	ja	$LN10@decodeNumb

	cmp	ecx, r11d
	jae	SHORT $LN434@decodeNumb

	lea	ecx, DWORD PTR [rcx+rcx*4]
	movsx	eax, r9b
	lea	ecx, DWORD PTR [rcx-24]
	lea	ecx, DWORD PTR [rax+rcx*2]

	cmp	rdx, r10
	jb	SHORT $LL5@decodeNumb
$LN6@decodeNumb:

	mov	eax, DWORD PTR $T10[rbp-81]
	mov	QWORD PTR $T10[rbp-73], r8
	cmp	bl, 45					; 0000002dH
	jne	$LN12@decodeNumb
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 313  :    default:

	and	eax, -255				; ffffffffffffff01H
	or	eax, 1
	mov	DWORD PTR $T10[rbp-81], eax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	neg	ecx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 319  : Value::Value( Int value )

	mov	DWORD PTR $T10[rbp-89], ecx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rsi+24]
	add	rdx, QWORD PTR [rsi+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rsi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rcx, r8

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN105@decodeNumb

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN105@decodeNumb

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN105@decodeNumb:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	rbx, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, r8
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN126@decodeNumb

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN126@decodeNumb

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN126@decodeNumb:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN143@decodeNumb
	mov	r8, QWORD PTR [rax]
$LN143@decodeNumb:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [r8+16]
	dec	rcx
	mov	rax, rbx
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	ebx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [r8+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rbx, QWORD PTR [rcx+rbx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 510  :    if ( comments_ )

	lea	rdx, QWORD PTR $T10[rbp-89]
	lea	rcx, QWORD PTR temp$73[rbp-89]
	call	??0Value@Json@@QEAA@AEBV01@@Z		; Json::Value::Value

; 518  :    swap( temp );

	movsx	edx, BYTE PTR [rbx+8]

; 519  :    return *this;

	movzx	eax, BYTE PTR temp$73[rbp-81]
	mov	BYTE PTR [rbx+8], al

; 520  : }

	mov	eax, DWORD PTR temp$73[rbp-81]
	xor	eax, edx
	movzx	r8d, al
	xor	r8d, DWORD PTR temp$73[rbp-81]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 67   : 	_Ty _Tmp = _STD move(_Left);

	mov	rax, QWORD PTR [rbx]

; 68   : 	_Left = _STD move(_Right);

	mov	rcx, QWORD PTR temp$73[rbp-89]
	mov	QWORD PTR [rbx], rcx

; 69   : 	_Right = _STD move(_Tmp);

	mov	QWORD PTR temp$73[rbp-89], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 522  : void 

	mov	ecx, DWORD PTR [rbx+8]
	mov	edx, ecx
	shl	edx, 23
	sar	edx, 31

; 523  : Value::swap( Value &other )

	mov	eax, ecx
	xor	eax, r8d
	and	eax, 256				; 00000100H
	xor	eax, ecx
	mov	DWORD PTR [rbx+8], eax

; 524  : {

	shl	edx, 8
	xor	edx, r8d
	and	edx, 256				; 00000100H
	xor	edx, r8d
	mov	DWORD PTR temp$73[rbp-81], edx

; 512  : }

	lea	rcx, QWORD PTR temp$73[rbp-89]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	jmp	$LN449@decodeNumb
$LN10@decodeNumb:

	lea	rcx, QWORD PTR $T2[rbp-89]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	mov	rbx, QWORD PTR [r14+16]
	mov	rdi, QWORD PTR [r14+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rbp-89]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR $T3[rbp-89]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T5[rbp-89]
	mov	r8, rbx
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T3[rbp-89]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1

; 4158 : 	return (_STD move(_Right.insert(0, _Left)));

	lea	r8, OFFSET FLAT:??_C@_01GEODFPGF@?8@
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rbp-89]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	mov	rcx, rax
	call	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	r8, OFFSET FLAT:??_C@_0BD@HHNBFDKF@?8?5is?5not?5a?5number?4@
	lea	rdx, QWORD PTR $T7[rbp-89]
	lea	rcx, QWORD PTR $T8[rbp-89]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	xor	r9d, r9d
	mov	r8, r14
	mov	rdx, rax
	mov	rcx, rsi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T8[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T3[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
	jmp	$LN1@decodeNumb
$LN12@decodeNumb:

	mov	DWORD PTR $T29[rbp-89], ecx
	cmp	ecx, 2147483647				; 7fffffffH
	ja	$LN14@decodeNumb
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 313  :    default:

	and	eax, -255				; ffffffffffffff01H
	or	eax, 1
	mov	DWORD PTR $T29[rbp-81], eax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rsi+32]
	add	rdx, QWORD PTR [rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rsi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rcx, r8

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN233@decodeNumb

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN233@decodeNumb

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN233@decodeNumb:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	rbx, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, r8
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN254@decodeNumb

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN254@decodeNumb

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN254@decodeNumb:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN271@decodeNumb
	mov	r8, QWORD PTR [rax]
$LN271@decodeNumb:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [r8+16]
	dec	rcx
	mov	rax, rbx
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	ebx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [r8+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rbx, QWORD PTR [rcx+rbx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 510  :    if ( comments_ )

	lea	rdx, QWORD PTR $T29[rbp-89]
	lea	rcx, QWORD PTR temp$72[rbp-89]
	call	??0Value@Json@@QEAA@AEBV01@@Z		; Json::Value::Value

; 518  :    swap( temp );

	movsx	edx, BYTE PTR [rbx+8]

; 519  :    return *this;

	movzx	eax, BYTE PTR temp$72[rbp-81]
	mov	BYTE PTR [rbx+8], al

; 520  : }

	mov	eax, DWORD PTR temp$72[rbp-81]
	xor	eax, edx
	movzx	r8d, al
	xor	r8d, DWORD PTR temp$72[rbp-81]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 67   : 	_Ty _Tmp = _STD move(_Left);

	mov	rax, QWORD PTR [rbx]

; 68   : 	_Left = _STD move(_Right);

	mov	rcx, QWORD PTR temp$72[rbp-89]
	mov	QWORD PTR [rbx], rcx

; 69   : 	_Right = _STD move(_Tmp);

	mov	QWORD PTR temp$72[rbp-89], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 522  : void 

	mov	ecx, DWORD PTR [rbx+8]
	mov	edx, ecx
	shl	edx, 23
	sar	edx, 31

; 523  : Value::swap( Value &other )

	mov	eax, ecx
	xor	eax, r8d
	and	eax, 256				; 00000100H
	xor	eax, ecx
	mov	DWORD PTR [rbx+8], eax

; 524  : {

	shl	edx, 8
	xor	edx, r8d
	and	edx, 256				; 00000100H
	xor	edx, r8d
	mov	DWORD PTR temp$72[rbp-81], edx

; 512  : }

	lea	rcx, QWORD PTR temp$72[rbp-89]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	jmp	$LN449@decodeNumb
$LN14@decodeNumb:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 324  : #endif

	and	eax, -254				; ffffffffffffff02H
	or	eax, 2
	mov	DWORD PTR $T48[rbp-81], eax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [rsi+32]
	add	rdx, QWORD PTR [rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rsi]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rcx, r8

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN361@decodeNumb

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN361@decodeNumb

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN361@decodeNumb:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	rbx, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, r8
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN382@decodeNumb

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN382@decodeNumb

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN382@decodeNumb:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN399@decodeNumb
	mov	r8, QWORD PTR [rax]
$LN399@decodeNumb:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [r8+16]
	dec	rcx
	mov	rax, rbx
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	ebx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [r8+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rbx, QWORD PTR [rcx+rbx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 510  :    if ( comments_ )

	lea	rdx, QWORD PTR $T48[rbp-89]
	lea	rcx, QWORD PTR temp$71[rbp-89]
	call	??0Value@Json@@QEAA@AEBV01@@Z		; Json::Value::Value

; 518  :    swap( temp );

	movsx	edx, BYTE PTR [rbx+8]

; 519  :    return *this;

	movzx	eax, BYTE PTR temp$71[rbp-81]
	mov	BYTE PTR [rbx+8], al

; 520  : }

	mov	eax, DWORD PTR temp$71[rbp-81]
	xor	eax, edx
	movzx	r8d, al
	xor	r8d, DWORD PTR temp$71[rbp-81]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 67   : 	_Ty _Tmp = _STD move(_Left);

	mov	rax, QWORD PTR [rbx]

; 68   : 	_Left = _STD move(_Right);

	mov	rcx, QWORD PTR temp$71[rbp-89]
	mov	QWORD PTR [rbx], rcx

; 69   : 	_Right = _STD move(_Tmp);

	mov	QWORD PTR temp$71[rbp-89], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 522  : void 

	mov	ecx, DWORD PTR [rbx+8]
	mov	edx, ecx
	shl	edx, 23
	sar	edx, 31

; 523  : Value::swap( Value &other )

	mov	eax, ecx
	xor	eax, r8d
	and	eax, 256				; 00000100H
	xor	eax, ecx
	mov	DWORD PTR [rbx+8], eax

; 524  : {

	shl	edx, 8
	xor	edx, r8d
	and	edx, 256				; 00000100H
	xor	edx, r8d
	mov	DWORD PTR temp$71[rbp-81], edx

; 512  : }

	lea	rcx, QWORD PTR temp$71[rbp-89]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
	npad	1
$LN449@decodeNumb:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rcx, QWORD PTR $T48[rbp-89]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
	mov	al, 1
$LN1@decodeNumb:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-89]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
?decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z ENDP	; Json::Reader::decodeNumber
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$6@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$6
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$6@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$6
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$0@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$0
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$0
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$1@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$1
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$1
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$2@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$2
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$2
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$3@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$3
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$3@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$3
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$4@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$4
	lea	rcx, QWORD PTR $T29[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$4@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$4
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$5@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$5
	lea	rcx, QWORD PTR $T48[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$5@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$6@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$6
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$6@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$0@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$0
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$1@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$1
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$2@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$2
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$3@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$3
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$3@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$4@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$4
	lea	rcx, QWORD PTR $T29[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$4@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 32
$T70 = 40
temp$71 = 48
temp$72 = 48
temp$73 = 48
$T7 = 48
$T48 = 80
$T29 = 80
$T10 = 80
$T3 = 80
$T8 = 112
__$ArrayPad$ = 144
this$ = 192
token$ = 200
?dtor$5@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeNumber'::`1'::dtor$5
	lea	rcx, QWORD PTR $T48[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$5@?0??decodeNumber@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeNumber'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z
_TEXT	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z PROC	; Json::Reader::decodeDouble, COMDAT

$LN171:
	mov	rax, rsp
	push	rbp
	push	rdi
	push	r14
	lea	rbp, QWORD PTR [rax-95]
	sub	rsp, 160				; 000000a0H
	mov	QWORD PTR $T34[rbp-89], -2
	mov	QWORD PTR [rax+24], rbx
	mov	QWORD PTR [rax+32], rsi
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-89], rax
	mov	rsi, rdx
	mov	r14, rcx
	xorps	xmm0, xmm0

	movsd	QWORD PTR value$[rbp-89], xmm0

	mov	eax, DWORD PTR [rdx+16]
	sub	eax, DWORD PTR [rdx+8]

	cmp	eax, 32					; 00000020H
	jg	SHORT $LN2@decodeDoub

	movsxd	rbx, eax
	mov	r8, rbx
	mov	rdx, QWORD PTR [rdx+8]
	lea	rcx, QWORD PTR buffer$37[rbp-89]
	call	memcpy

	cmp	rbx, 32					; 00000020H
	jae	$LN6@decodeDoub
	mov	BYTE PTR buffer$37[rbp+rbx-89], 0

	lea	r8, QWORD PTR value$[rbp-89]
	lea	rdx, OFFSET FLAT:??_C@_03DLDNIBIK@?$CFlf@
	lea	rcx, QWORD PTR buffer$37[rbp-89]
	call	sscanf
	mov	ebx, eax

	jmp	SHORT $LN3@decodeDoub
$LN2@decodeDoub:

	lea	rcx, QWORD PTR $T3[rbp-89]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	mov	rbx, QWORD PTR [rsi+16]
	mov	rdi, QWORD PTR [rsi+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR buffer$36[rbp-89]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR buffer$36[rbp-89]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T5[rbp-89]
	mov	r8, rbx
	mov	rdx, rdi
	lea	rcx, QWORD PTR buffer$36[rbp-89]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rcx, QWORD PTR buffer$36[rbp-89]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rcx, rax
	lea	r8, QWORD PTR value$[rbp-89]
	lea	rdx, OFFSET FLAT:??_C@_03DLDNIBIK@?$CFlf@
	call	sscanf
	mov	ebx, eax

	lea	rcx, QWORD PTR buffer$36[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@decodeDoub:

	cmp	ebx, 1
	je	$LN4@decodeDoub

	lea	rcx, QWORD PTR $T6[rbp-89]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	mov	rbx, QWORD PTR [rsi+16]
	mov	rdi, QWORD PTR [rsi+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 2220 : 		: _Mybase(_Al)

	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	??$?0AEBV?$allocator@D@std@@X@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > ><std::allocator<char> const &,void>
	npad	1

; 2221 : 		{	// construct from [_First, _Last) with optional allocator
; 2222 : 		_Tidy_init();

	lea	rcx, QWORD PTR $T7[rbp-89]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2223 : 		_Adl_verify_range(_First, _Last);
; 2224 : 		_Construct(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>());

	movzx	r9d, BYTE PTR $T9[rbp-89]
	mov	r8, rbx
	mov	rdx, rdi
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	?_Construct@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXQEBD0Urandom_access_iterator_tag@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct
	npad	1

; 4158 : 	return (_STD move(_Right.insert(0, _Left)));

	lea	r8, OFFSET FLAT:??_C@_01GEODFPGF@?8@
	xor	edx, edx
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	mov	rcx, rax
	call	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T11[rbp-89]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	r8, OFFSET FLAT:??_C@_0BD@HHNBFDKF@?8?5is?5not?5a?5number?4@
	lea	rdx, QWORD PTR $T11[rbp-89]
	lea	rcx, QWORD PTR $T12[rbp-89]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	xor	r9d, r9d
	mov	r8, rsi
	mov	rdx, rax
	mov	rcx, r14
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T12[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T11[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
	jmp	$LN1@decodeDoub
$LN4@decodeDoub:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 334  :    , itemIsUsed_( 0 )

	mov	eax, DWORD PTR $T14[rbp-81]
	and	eax, -253				; ffffffffffffff03H
	or	eax, 3
	mov	DWORD PTR $T14[rbp-81], eax

; 335  : #endif

	xor	edx, edx
	mov	QWORD PTR $T14[rbp-73], rdx

; 336  : {
; 337  :    value_.uint_ = value;
; 338  : }
; 339  : 
; 340  : Value::Value( double value )

	movsd	xmm0, QWORD PTR value$[rbp-89]
	movsd	QWORD PTR $T14[rbp-89], xmm0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	r8, QWORD PTR [r14+32]
	mov	r9, QWORD PTR [r14+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r14]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	ecx, edx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN97@decodeDoub

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN97@decodeDoub

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN97@decodeDoub:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	rbx, QWORD PTR [r9-1]
	add	rbx, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdx
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN118@decodeDoub

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	r8, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	r8, r8
	je	SHORT $LN118@decodeDoub

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r8]
$LN118@decodeDoub:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN135@decodeDoub
	mov	rdx, QWORD PTR [rax]
$LN135@decodeDoub:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rdx+16]
	dec	rcx
	mov	rax, rbx
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	ebx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rbx, QWORD PTR [rcx+rbx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 510  :    if ( comments_ )

	lea	rdx, QWORD PTR $T14[rbp-89]
	lea	rcx, QWORD PTR temp$35[rbp-89]
	call	??0Value@Json@@QEAA@AEBV01@@Z		; Json::Value::Value

; 518  :    swap( temp );

	movsx	edx, BYTE PTR [rbx+8]

; 519  :    return *this;

	movzx	eax, BYTE PTR temp$35[rbp-81]
	mov	BYTE PTR [rbx+8], al

; 520  : }

	mov	eax, DWORD PTR temp$35[rbp-81]
	xor	eax, edx
	movzx	r8d, al
	xor	r8d, DWORD PTR temp$35[rbp-81]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 67   : 	_Ty _Tmp = _STD move(_Left);

	mov	rax, QWORD PTR [rbx]

; 68   : 	_Left = _STD move(_Right);

	mov	rcx, QWORD PTR temp$35[rbp-89]
	mov	QWORD PTR [rbx], rcx

; 69   : 	_Right = _STD move(_Tmp);

	mov	QWORD PTR temp$35[rbp-89], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 522  : void 

	mov	ecx, DWORD PTR [rbx+8]
	mov	edx, ecx
	shl	edx, 23
	sar	edx, 31

; 523  : Value::swap( Value &other )

	mov	eax, ecx
	xor	eax, r8d
	and	eax, 256				; 00000100H
	xor	eax, ecx
	mov	DWORD PTR [rbx+8], eax

; 524  : {

	shl	edx, 8
	xor	edx, r8d
	and	edx, 256				; 00000100H
	xor	edx, r8d
	mov	DWORD PTR temp$35[rbp-81], edx

; 512  : }

	lea	rcx, QWORD PTR temp$35[rbp-89]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rcx, QWORD PTR $T14[rbp-89]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value

	mov	al, 1
$LN1@decodeDoub:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-89]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+160]
	mov	rbx, QWORD PTR [r11+48]
	mov	rsi, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rbp
	ret	0
$LN6@decodeDoub:

	call	__report_rangecheckfailure
	int	3
$LN168@decodeDoub:
?decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z ENDP	; Json::Reader::decodeDouble
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$5@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$5
	lea	rcx, QWORD PTR buffer$36[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$5@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$5
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$6@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$6
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$6@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$6
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$1@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$1
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$1
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$2@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$2
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$2
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$3@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$3
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$3
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$4@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$4
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$4@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$5@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$5
	lea	rcx, QWORD PTR buffer$36[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$5@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$6@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$6
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QEAA@XZ
?dtor$6@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$1@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$1
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$2@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$2
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$3@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$3
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
$T5 = 32
$T6 = 32
$T3 = 32
value$ = 40
$T34 = 48
temp$35 = 56
$T11 = 56
$T12 = 88
$T14 = 120
$T7 = 120
buffer$36 = 120
buffer$37 = 120
__$ArrayPad$ = 152
this$ = 192
token$ = 200
?dtor$4@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeDouble'::`1'::dtor$4
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$4@?0??decodeDouble@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeDouble'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z
_TEXT	SEGMENT
temp$23 = 32
$T3 = 56
decoded$ = 88
__$ArrayPad$ = 120
this$ = 160
token$ = 168
?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z PROC	; Json::Reader::decodeString, COMDAT

$LN138:
	mov	r11, rsp
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 128				; 00000080H
	mov	QWORD PTR [r11-72], -2
	mov	QWORD PTR [r11+24], rbx
	mov	QWORD PTR [r11+32], rbp
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rdx
	mov	r14, rcx

	lea	rcx, QWORD PTR [r11-64]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	r8, QWORD PTR decoded$[rsp]
	mov	rdx, rbx
	mov	rcx, r14
	call	?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::Reader::decodeString
	test	al, al
	jne	SHORT $LN2@decodeStri
	xor	bl, bl
	jmp	$LN6@decodeStri
$LN2@decodeStri:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 370  : {

	mov	eax, DWORD PTR $T3[rsp+8]
	and	eax, -252				; ffffffffffffff04H

; 371  :    value_.string_ = valueAllocator()->duplicateStringValue( beginValue, 

	or	eax, 260				; 00000104H
	mov	DWORD PTR $T3[rsp+8], eax

; 372  :                                                             UInt(endValue - beginValue) );

	xor	ebp, ebp
	mov	QWORD PTR $T3[rsp+16], rbp

; 373  : }
; 374  : 
; 375  : 
; 376  : Value::Value( const std::string &value )
; 377  :    : type_( stringValue )

	call	?valueAllocator@Json@@YAAEAPEAVValueAllocator@1@XZ ; Json::valueAllocator
	mov	rdi, QWORD PTR [rax]
	mov	rsi, QWORD PTR [rdi]
	lea	rcx, QWORD PTR decoded$[rsp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	rbx, rax
	lea	rcx, QWORD PTR decoded$[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	mov	r8d, ebx
	mov	rcx, rdi
	call	QWORD PTR [rsi+24]
	mov	QWORD PTR $T3[rsp], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rdx, QWORD PTR [r14+32]
	add	rdx, QWORD PTR [r14+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r14]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	ecx, ebp

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN65@decodeStri

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN65@decodeStri

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN65@decodeStri:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	lea	rbx, QWORD PTR [rdx-1]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rbp
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN86@decodeStri

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN86@decodeStri

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN86@decodeStri:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN103@decodeStri
	mov	rbp, QWORD PTR [rax]
$LN103@decodeStri:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rbp+16]
	dec	rcx
	mov	rax, rbx
	shr	rax, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	ebx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rbp+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rbx, QWORD PTR [rcx+rbx*8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 510  :    if ( comments_ )

	lea	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR temp$23[rsp]
	call	??0Value@Json@@QEAA@AEBV01@@Z		; Json::Value::Value

; 518  :    swap( temp );

	movsx	edx, BYTE PTR [rbx+8]

; 519  :    return *this;

	movzx	eax, BYTE PTR temp$23[rsp+8]
	mov	BYTE PTR [rbx+8], al

; 520  : }

	mov	eax, DWORD PTR temp$23[rsp+8]
	xor	eax, edx
	movzx	r8d, al
	xor	r8d, DWORD PTR temp$23[rsp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 67   : 	_Ty _Tmp = _STD move(_Left);

	mov	rax, QWORD PTR [rbx]

; 68   : 	_Left = _STD move(_Right);

	mov	rcx, QWORD PTR temp$23[rsp]
	mov	QWORD PTR [rbx], rcx

; 69   : 	_Right = _STD move(_Tmp);

	mov	QWORD PTR temp$23[rsp], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 522  : void 

	mov	ecx, DWORD PTR [rbx+8]
	mov	edx, ecx
	shl	edx, 23
	sar	edx, 31

; 523  : Value::swap( Value &other )

	mov	eax, ecx
	xor	eax, r8d
	and	eax, 256				; 00000100H
	xor	eax, ecx
	mov	DWORD PTR [rbx+8], eax

; 524  : {

	shl	edx, 8
	xor	edx, r8d
	and	edx, 256				; 00000100H
	xor	edx, r8d
	mov	DWORD PTR temp$23[rsp+8], edx

; 512  : }

	lea	rcx, QWORD PTR temp$23[rsp]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	lea	rcx, QWORD PTR $T3[rsp]
	call	??1Value@Json@@QEAA@XZ			; Json::Value::~Value

	mov	bl, 1
$LN6@decodeStri:
	lea	rcx, QWORD PTR decoded$[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+48]
	mov	rbp, QWORD PTR [r11+56]
	mov	rsp, r11
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
?decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z ENDP	; Json::Reader::decodeString
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
temp$23 = 32
$T3 = 56
decoded$ = 88
__$ArrayPad$ = 120
this$ = 160
token$ = 168
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$0
	lea	rcx, QWORD PTR decoded$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$0
temp$23 = 32
$T3 = 56
decoded$ = 88
__$ArrayPad$ = 120
this$ = 160
token$ = 168
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
temp$23 = 32
$T3 = 56
decoded$ = 88
__$ArrayPad$ = 120
this$ = 160
token$ = 168
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$0
	lea	rcx, QWORD PTR decoded$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
temp$23 = 32
$T3 = 56
decoded$ = 88
__$ArrayPad$ = 120
this$ = 160
token$ = 168
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1Value@Json@@QEAA@XZ			; Json::Value::~Value
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::Reader::decodeString, COMDAT

$LN37:
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	mov	QWORD PTR $T7[rsp], -2
	mov	QWORD PTR [rsp+184], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, r8
	mov	rbp, rdx
	mov	r14, rcx

	mov	rdx, QWORD PTR [rdx+16]
	sub	rdx, QWORD PTR [rbp+8]
	sub	rdx, 2
	mov	rcx, r8
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	mov	rax, QWORD PTR [rbp+8]
	lea	rbx, QWORD PTR [rax+1]

	mov	rsi, QWORD PTR [rbp+16]
	dec	rsi
	cmp	rbx, rsi

	je	SHORT $LN32@decodeStri
	lea	r15, OFFSET FLAT:__ImageBase
$LL2@decodeStri:

	movzx	edx, BYTE PTR [rbx]
	inc	rbx

	cmp	dl, 34					; 00000022H
	je	SHORT $LN32@decodeStri

	cmp	dl, 92					; 0000005cH
	jne	SHORT $LN8@decodeStri

	cmp	rbx, rsi
	je	$LN28@decodeStri

	movsx	eax, BYTE PTR [rbx]
	inc	rbx
	mov	QWORD PTR current$[rsp], rbx

	add	eax, -34				; ffffffffffffffdeH
	cmp	eax, 83					; 00000053H
	ja	$LN21@decodeStri
	cdqe
	movzx	eax, BYTE PTR $LN33@decodeStri[r15+rax]
	mov	ecx, DWORD PTR $LN34@decodeStri[r15+rax*4]
	add	rcx, r15
	jmp	rcx
$LN11@decodeStri:

	mov	dl, 34					; 00000022H
$LN8@decodeStri:

	mov	rcx, rdi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN9@decodeStri:
	cmp	rbx, rsi
	jne	SHORT $LL2@decodeStri
$LN32@decodeStri:

	mov	al, 1
$LN1@decodeStri:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+184]
	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN12@decodeStri:

	mov	dl, 47					; 0000002fH
	jmp	SHORT $LN8@decodeStri
$LN13@decodeStri:

	mov	dl, 92					; 0000005cH
	jmp	SHORT $LN8@decodeStri
$LN14@decodeStri:

	mov	dl, 8
	jmp	SHORT $LN8@decodeStri
$LN15@decodeStri:

	mov	dl, 12
	jmp	SHORT $LN8@decodeStri
$LN16@decodeStri:

	mov	dl, 10
	jmp	SHORT $LN8@decodeStri
$LN17@decodeStri:

	mov	dl, 13
	jmp	SHORT $LN8@decodeStri
$LN18@decodeStri:

	mov	dl, 9
	jmp	SHORT $LN8@decodeStri
$LN19@decodeStri:

	lea	rax, QWORD PTR unicode$6[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rsi
	lea	r8, QWORD PTR current$[rsp]
	mov	rdx, rbp
	mov	rcx, r14
	call	?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z ; Json::Reader::decodeUnicodeCodePoint
	test	al, al
	je	SHORT $LN29@decodeStri

	mov	edx, DWORD PTR unicode$6[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	?codePointToUTF8@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::codePointToUTF8
	npad	1
	mov	rdx, rax
	mov	rcx, rdi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T3[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rbx, QWORD PTR current$[rsp]
	jmp	$LN9@decodeStri
$LN29@decodeStri:

	xor	al, al
	jmp	$LN1@decodeStri
$LN21@decodeStri:

	lea	rdx, OFFSET FLAT:??_C@_0BO@NDEEJNNB@Bad?5escape?5sequence?5in?5string@
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, rbx
	mov	r8, rbp
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, r14
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T4[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
	jmp	$LN1@decodeStri
$LN28@decodeStri:

	lea	rdx, OFFSET FLAT:??_C@_0CA@DPGKPPOE@Empty?5escape?5sequence?5in?5string@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, rbx
	mov	r8, rbp
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r14
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
	jmp	$LN1@decodeStri
	npad	3
$LN34@decodeStri:

	DD	$LN11@decodeStri
	DD	$LN12@decodeStri
	DD	$LN13@decodeStri
	DD	$LN14@decodeStri
	DD	$LN15@decodeStri
	DD	$LN16@decodeStri
	DD	$LN17@decodeStri
	DD	$LN18@decodeStri
	DD	$LN19@decodeStri
	DD	$LN21@decodeStri
$LN33@decodeStri:
	DB	0
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	1
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	2
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	3
	DB	9
	DB	9
	DB	9
	DB	4
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	5
	DB	9
	DB	9
	DB	9
	DB	6
	DB	9
	DB	7
	DB	8
?decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::Reader::decodeString
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$0
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$1
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?dtor$2@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
unicode$6 = 48
current$ = 56
$T7 = 64
$T4 = 72
$T3 = 72
$T1 = 72
__$ArrayPad$ = 104
this$ = 160
token$ = 168
decoded$ = 176
?dtor$2@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `Json::Reader::decodeString'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeString@Reader@Json@@AEAA_NAEAVToken@12@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `Json::Reader::decodeString'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
_TEXT	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z PROC ; Json::Reader::decodeUnicodeCodePoint, COMDAT

$LN55:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 128				; 00000080H
	mov	QWORD PTR $T16[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r14, r9
	mov	rsi, r8
	mov	r12, rdx
	mov	r15, rcx
	mov	rdi, QWORD PTR unicode$[rsp]

	mov	rax, r9
	sub	rax, QWORD PTR [r8]
	xor	ebx, ebx
	cmp	rax, 4
	jge	SHORT $LN16@decodeUnic

	lea	rdx, OFFSET FLAT:??_C@_0DN@BPAHJPFJ@Bad?5unicode?5escape?5sequence?5in?5@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rsi]
	mov	r8, r12
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, r15
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebp, al
	lea	rcx, QWORD PTR $T1[rsp]
	jmp	$LN50@decodeUnic
$LN16@decodeUnic:

	mov	DWORD PTR [rdi], ebx

	mov	r8d, ebx
	npad	13
$LL15@decodeUnic:

	mov	rax, QWORD PTR [rsi]
	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rsi], rax

	mov	edx, DWORD PTR [rdi]
	shl	edx, 4
	mov	DWORD PTR [rdi], edx

	lea	eax, DWORD PTR [rcx-48]
	cmp	al, 9
	ja	SHORT $LN17@decodeUnic

	movsx	eax, cl
	lea	ecx, DWORD PTR [rdx-48]
	jmp	SHORT $LN51@decodeUnic
$LN17@decodeUnic:

	lea	eax, DWORD PTR [rcx-97]
	cmp	al, 5
	ja	SHORT $LN19@decodeUnic

	movsx	eax, cl
	lea	ecx, DWORD PTR [rdx-87]
	jmp	SHORT $LN51@decodeUnic
$LN19@decodeUnic:

	lea	eax, DWORD PTR [rcx-65]
	cmp	al, 5
	ja	SHORT $LN21@decodeUnic

	movsx	eax, cl
	lea	ecx, DWORD PTR [rdx-55]
$LN51@decodeUnic:

	add	ecx, eax
	mov	DWORD PTR [rdi], ecx
	inc	r8d
	cmp	r8d, 4
	jl	SHORT $LL15@decodeUnic
$LN49@decodeUnic:

	mov	eax, DWORD PTR [rdi]
	sub	eax, 55296				; 0000d800H
	cmp	eax, 1023				; 000003ffH
	ja	$LN6@decodeUnic

	mov	rdx, QWORD PTR [rsi]
	mov	rax, r14
	sub	rax, rdx
	cmp	rax, 6
	jge	SHORT $LN4@decodeUnic

	lea	rdx, OFFSET FLAT:??_C@_0EE@LMPEHADE@additional?5six?5characters?5expec@
	lea	rcx, QWORD PTR $T6[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rsi]
	mov	r8, r12
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, r15
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T6[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
	jmp	$LN1@decodeUnic
$LN21@decodeUnic:

	lea	rdx, OFFSET FLAT:??_C@_0ED@FIDDECIG@Bad?5unicode?5escape?5sequence?5in?5@
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rsi]
	mov	r8, r12
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, r15
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebp, al
	lea	rcx, QWORD PTR $T4[rsp]
$LN50@decodeUnic:

	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	test	bpl, bpl
	jne	$LN49@decodeUnic
$LN7@decodeUnic:

	xor	al, al
	jmp	$LN1@decodeUnic
$LN4@decodeUnic:

	movzx	eax, BYTE PTR [rdx]
	inc	rdx
	mov	QWORD PTR [rsi], rdx
	cmp	al, 92					; 0000005cH
	jne	$LN5@decodeUnic
	movzx	eax, BYTE PTR [rdx]
	inc	rdx
	mov	QWORD PTR [rsi], rdx
	cmp	al, 117					; 00000075H
	jne	$LN5@decodeUnic

	sub	r14, rdx
	cmp	r14, 4
	jge	SHORT $LN30@decodeUnic

	lea	rdx, OFFSET FLAT:??_C@_0DN@BPAHJPFJ@Bad?5unicode?5escape?5sequence?5in?5@
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rsi]
	mov	r8, r12
	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, r15
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	esi, al
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ebx, DWORD PTR surrogatePair$15[rsp]
	jmp	SHORT $LN26@decodeUnic
$LN30@decodeUnic:

	mov	edx, ebx
	npad	3
$LL29@decodeUnic:

	mov	rax, QWORD PTR [rsi]
	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rsi], rax

	shl	ebx, 4

	lea	eax, DWORD PTR [rcx-48]
	cmp	al, 9
	ja	SHORT $LN31@decodeUnic

	add	ebx, -48				; ffffffd0H
	jmp	SHORT $LN52@decodeUnic
$LN31@decodeUnic:

	lea	eax, DWORD PTR [rcx-97]
	cmp	al, 5
	ja	SHORT $LN33@decodeUnic

	add	ebx, -87				; ffffffa9H
	jmp	SHORT $LN52@decodeUnic
$LN33@decodeUnic:

	lea	eax, DWORD PTR [rcx-65]
	cmp	al, 5
	ja	SHORT $LN35@decodeUnic

	add	ebx, -55				; ffffffc9H
$LN52@decodeUnic:

	movsx	eax, cl
	add	ebx, eax
	inc	edx
	cmp	edx, 4
	jl	SHORT $LL29@decodeUnic
	jmp	SHORT $LN48@decodeUnic
$LN35@decodeUnic:

	lea	rdx, OFFSET FLAT:??_C@_0ED@FIDDECIG@Bad?5unicode?5escape?5sequence?5in?5@
	lea	rcx, QWORD PTR $T11[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rsi]
	mov	r8, r12
	lea	rdx, QWORD PTR $T11[rsp]
	mov	rcx, r15
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	esi, al
	lea	rcx, QWORD PTR $T11[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN26@decodeUnic:

	test	sil, sil
	je	$LN7@decodeUnic
$LN48@decodeUnic:

	mov	eax, DWORD PTR [rdi]
	and	eax, 1023				; 000003ffH
	add	eax, 64					; 00000040H
	shl	eax, 10
	and	ebx, 1023				; 000003ffH
	add	eax, ebx
	mov	DWORD PTR [rdi], eax
$LN6@decodeUnic:

	mov	al, 1
$LN1@decodeUnic:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
$LN5@decodeUnic:

	lea	rdx, OFFSET FLAT:??_C@_0FA@BGMMPLKB@expecting?5another?5?2u?5token?5to?5b@
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rsi]
	mov	r8, r12
	lea	rdx, QWORD PTR $T13[rsp]
	mov	rcx, r15
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	lea	rcx, QWORD PTR $T13[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
	jmp	SHORT $LN1@decodeUnic
?decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z ENDP ; Json::Reader::decodeUnicodeCodePoint
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$2@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$2
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$3@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$3
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$3
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$0@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$0
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$0
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$4@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$4
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$4
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$5@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$5
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$5
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$1@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$1
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$2@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$2
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$3@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$3
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$0@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$0
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$4@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$4
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$5@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$5
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
surrogatePair$15 = 32
$T16 = 40
$T8 = 48
$T4 = 48
$T13 = 48
$T6 = 48
$T11 = 80
$T1 = 80
__$ArrayPad$ = 112
this$ = 192
token$ = 200
current$ = 208
end$ = 216
unicode$ = 224
?dtor$1@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$1
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeUnicodeCodePoint@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeCodePoint'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z
_TEXT	SEGMENT
$T5 = 32
$T3 = 40
$T1 = 40
__$ArrayPad$ = 72
this$ = 112
token$ = 120
current$ = 128
end$ = 136
unicode$ = 144
?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z PROC ; Json::Reader::decodeUnicodeEscapeSequence, COMDAT

$LN23:
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T5[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, r8
	mov	rsi, rdx
	mov	rdi, rcx
	mov	r10, QWORD PTR unicode$[rsp]

	sub	r9, QWORD PTR [r8]
	cmp	r9, 4
	jge	SHORT $LN5@decodeUnic

	lea	rdx, OFFSET FLAT:??_C@_0DN@BPAHJPFJ@Bad?5unicode?5escape?5sequence?5in?5@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rbx]
	mov	r8, rsi
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rdi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
	jmp	$LN19@decodeUnic
$LN5@decodeUnic:

	xor	r8d, r8d
	mov	DWORD PTR [r10], r8d
	npad	3
$LL4@decodeUnic:

	mov	rax, QWORD PTR [rbx]
	movzx	ecx, BYTE PTR [rax]
	inc	rax
	mov	QWORD PTR [rbx], rax

	mov	edx, DWORD PTR [r10]
	shl	edx, 4
	mov	DWORD PTR [r10], edx

	lea	eax, DWORD PTR [rcx-48]
	cmp	al, 9
	ja	SHORT $LN6@decodeUnic

	movsx	eax, cl
	lea	ecx, DWORD PTR [rdx-48]
	jmp	SHORT $LN20@decodeUnic
$LN6@decodeUnic:

	lea	eax, DWORD PTR [rcx-97]
	cmp	al, 5
	ja	SHORT $LN8@decodeUnic

	movsx	eax, cl
	lea	ecx, DWORD PTR [rdx-87]
	jmp	SHORT $LN20@decodeUnic
$LN8@decodeUnic:

	lea	eax, DWORD PTR [rcx-65]
	cmp	al, 5
	ja	SHORT $LN10@decodeUnic

	movsx	eax, cl
	lea	ecx, DWORD PTR [rdx-55]
$LN20@decodeUnic:

	add	ecx, eax
	mov	DWORD PTR [r10], ecx
	inc	r8d
	cmp	r8d, 4
	jl	SHORT $LL4@decodeUnic

	mov	al, 1
	jmp	SHORT $LN1@decodeUnic
$LN10@decodeUnic:

	lea	rdx, OFFSET FLAT:??_C@_0ED@FIDDECIG@Bad?5unicode?5escape?5sequence?5in?5@
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r9, QWORD PTR [rbx]
	mov	r8, rsi
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, rdi
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError
	movzx	ebx, al
$LN19@decodeUnic:

	lea	rcx, QWORD PTR $T3[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	movzx	eax, bl
$LN1@decodeUnic:
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
?decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z ENDP ; Json::Reader::decodeUnicodeEscapeSequence
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T3 = 40
$T1 = 40
__$ArrayPad$ = 72
this$ = 112
token$ = 120
current$ = 128
end$ = 136
unicode$ = 144
?dtor$0@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$0
$T5 = 32
$T3 = 40
$T1 = 40
__$ArrayPad$ = 72
this$ = 112
token$ = 120
current$ = 128
end$ = 136
unicode$ = 144
?dtor$1@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T3 = 40
$T1 = 40
__$ArrayPad$ = 72
this$ = 112
token$ = 120
current$ = 128
end$ = 136
unicode$ = 144
?dtor$0@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T3 = 40
$T1 = 40
__$ArrayPad$ = 72
this$ = 112
token$ = 120
current$ = 128
end$ = 136
unicode$ = 144
?dtor$1@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA PROC ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??decodeUnicodeEscapeSequence@Reader@Json@@AEAA_NAEAVToken@12@AEAPEBDPEBDAEAI@Z@4HA ENDP ; `Json::Reader::decodeUnicodeEscapeSequence'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z
_TEXT	SEGMENT
$T49 = 32
info$ = 48
__$ArrayPad$ = 112
this$ = 176
message$ = 184
token$ = 192
extra$ = 200
?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z PROC ; Json::Reader::addError, COMDAT

$LN126:
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 136				; 00000088H
	mov	QWORD PTR $T49[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbp, r9
	mov	rbx, r8
	mov	rdi, rdx
	mov	rsi, rcx
	lea	rcx, QWORD PTR info$[rsp+24]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	movups	xmm0, XMMWORD PTR [rbx]
	movaps	XMMWORD PTR info$[rsp], xmm0
	movsd	xmm1, QWORD PTR [rbx+16]
	movsd	QWORD PTR info$[rsp+16], xmm1

	mov	rdx, rdi
	lea	rcx, QWORD PTR info$[rsp+24]
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	mov	QWORD PTR info$[rsp+56], rbp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1487 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rsi+56]
	mov	rax, QWORD PTR [rsi+72]
	inc	rax
	cmp	rcx, rax
	ja	SHORT $LN8@addError
	lea	rcx, QWORD PTR [rsi+40]
	call	?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap
	mov	rcx, QWORD PTR [rsi+56]
$LN8@addError:
	lea	rax, QWORD PTR [rcx-1]
	and	QWORD PTR [rsi+64], rax
	mov	rdx, QWORD PTR [rsi+64]
	add	rdx, QWORD PTR [rsi+72]

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rsi+56]
	dec	rax
	and	rax, rdx

; 1487 : 		_PUSH_BACK_BEGIN;

	lea	rbx, QWORD PTR [rax*8]
	mov	rdx, QWORD PTR [rsi+48]
	cmp	QWORD PTR [rdx+rbx], 0
	jne	SHORT $LN9@addError
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 64					; 00000040H
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1487 : 		_PUSH_BACK_BEGIN;

	mov	rdx, QWORD PTR [rsi+48]
	mov	QWORD PTR [rbx+rdx], rax
	mov	rdx, QWORD PTR [rsi+48]
$LN9@addError:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, QWORD PTR [rbx+rdx]
	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	rbx, rax
	movaps	xmm0, XMMWORD PTR info$[rsp]
	movups	XMMWORD PTR [rax], xmm0
	movsd	xmm1, QWORD PTR info$[rsp+16]
	movsd	QWORD PTR [rax+16], xmm1
	lea	rcx, QWORD PTR [rax+24]
	lea	rdx, QWORD PTR info$[rsp+24]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rcx, QWORD PTR info$[rsp+56]
	mov	QWORD PTR [rbx+56], rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1490 : 		_PUSH_BACK_END;

	inc	QWORD PTR [rsi+72]
	lea	rcx, QWORD PTR info$[rsp+24]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	xor	al, al

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ENDP ; Json::Reader::addError
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T49 = 32
info$ = 48
__$ArrayPad$ = 112
this$ = 176
message$ = 184
token$ = 192
extra$ = 200
?dtor$0@?0??addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z@4HA PROC ; `Json::Reader::addError'::`1'::dtor$0
	lea	rcx, QWORD PTR info$[rdx]
	jmp	??1ErrorInfo@Reader@Json@@QEAA@XZ
?dtor$0@?0??addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z@4HA ENDP ; `Json::Reader::addError'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T49 = 32
info$ = 48
__$ArrayPad$ = 112
this$ = 176
message$ = 184
token$ = 192
extra$ = 200
?dtor$0@?0??addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z@4HA PROC ; `Json::Reader::addError'::`1'::dtor$0
	lea	rcx, QWORD PTR info$[rdx]
	jmp	??1ErrorInfo@Reader@Json@@QEAA@XZ
?dtor$0@?0??addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z@4HA ENDP ; `Json::Reader::addError'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ErrorInfo@Reader@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0ErrorInfo@Reader@Json@@QEAA@XZ PROC			; Json::Reader::ErrorInfo::ErrorInfo, COMDAT
$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	add	rcx, 24
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0ErrorInfo@Reader@Json@@QEAA@XZ ENDP			; Json::Reader::ErrorInfo::ErrorInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1ErrorInfo@Reader@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ErrorInfo@Reader@Json@@QEAA@XZ PROC			; Json::Reader::ErrorInfo::~ErrorInfo, COMDAT
	add	rcx, 24
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
??1ErrorInfo@Reader@Json@@QEAA@XZ ENDP			; Json::Reader::ErrorInfo::~ErrorInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z
_TEXT	SEGMENT
skip$ = 32
this$ = 80
skipUntilToken$ = 88
?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z PROC ; Json::Reader::recoverFromError, COMDAT

$LN24:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 64					; 00000040H

	movsxd	rdi, DWORD PTR [rcx+72]
	mov	esi, edx
	mov	rbx, rcx
	npad	8
$LL2@recoverFro:

	lea	rdx, QWORD PTR skip$[rsp]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	jne	SHORT $LN21@recoverFro

	mov	rdx, rdi
	lea	rcx, QWORD PTR [rbx+40]
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
$LN21@recoverFro:

	mov	eax, DWORD PTR skip$[rsp]
	cmp	eax, esi
	je	SHORT $LN17@recoverFro
	test	eax, eax
	jne	SHORT $LL2@recoverFro
$LN17@recoverFro:

	mov	rdx, rdi
	lea	rcx, QWORD PTR [rbx+40]
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize

	mov	rbx, QWORD PTR [rsp+80]
	xor	al, al
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?recoverFromError@Reader@Json@@AEAA_NW4TokenType@12@@Z ENDP ; Json::Reader::recoverFromError
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z
_TEXT	SEGMENT
skip$5 = 32
this$ = 80
message$ = 88
token$ = 96
skipUntilToken$ = 104
?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z PROC ; Json::Reader::addErrorAndRecover, COMDAT

$LN26:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	esi, r9d
	mov	rbx, rcx

	xor	r9d, r9d
	call	?addError@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@PEBD@Z ; Json::Reader::addError

	movsxd	rdi, DWORD PTR [rbx+72]
$LL4@addErrorAn:

	lea	rdx, QWORD PTR skip$5[rsp]
	mov	rcx, rbx
	call	?readToken@Reader@Json@@AEAA_NAEAVToken@12@@Z ; Json::Reader::readToken
	test	al, al
	jne	SHORT $LN23@addErrorAn

	mov	rdx, rdi
	lea	rcx, QWORD PTR [rbx+40]
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
$LN23@addErrorAn:

	mov	eax, DWORD PTR skip$5[rsp]
	cmp	eax, esi
	je	SHORT $LN19@addErrorAn
	test	eax, eax
	jne	SHORT $LL4@addErrorAn
$LN19@addErrorAn:

	mov	rdx, rdi
	lea	rcx, QWORD PTR [rbx+40]
	call	?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize

	mov	rbx, QWORD PTR [rsp+80]
	xor	al, al
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?addErrorAndRecover@Reader@Json@@AEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVToken@12@W4TokenType@12@@Z ENDP ; Json::Reader::addErrorAndRecover
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?currentValue@Reader@Json@@AEAAAEAVValue@2@XZ
_TEXT	SEGMENT
this$ = 8
?currentValue@Reader@Json@@AEAAAEAVValue@2@XZ PROC	; Json::Reader::currentValue, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	r9, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	r8d, r8d

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	dec	r9
	mov	rdx, QWORD PTR [rcx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	ecx, r8d

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN57@currentVal

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN57@currentVal

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN57@currentVal:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	add	r9, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, r8
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN78@currentVal

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rdx, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN78@currentVal

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
$LN78@currentVal:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN95@currentVal
	mov	r8, QWORD PTR [rax]
$LN95@currentVal:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [r8+16]
	mov	rdx, r9
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rax, QWORD PTR [r8+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	dec	rcx
	shr	rdx, 1

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r9d, 1

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	and	rdx, rcx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp

	mov	rax, QWORD PTR [rax+rdx*8]
	mov	rax, QWORD PTR [rax+r9*8]

	ret	0
?currentValue@Reader@Json@@AEAAAEAVValue@2@XZ ENDP	; Json::Reader::currentValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_reader.cpp
;	COMDAT ?getNextChar@Reader@Json@@AEAADXZ
_TEXT	SEGMENT
this$ = 8
?getNextChar@Reader@Json@@AEAADXZ PROC			; Json::Reader::getNextChar, COMDAT

	mov	rdx, rcx

	mov	rcx, QWORD PTR [rcx+128]
	cmp	rcx, QWORD PTR [rdx+120]
	jne	SHORT $LN2@getNextCha

	xor	al, al

	ret	0
$LN2@getNextCha:

	movzx	eax, BYTE PTR [rcx]
	inc	rcx
	mov	QWORD PTR [rdx+128], rcx

	ret	0
?getNextChar@Reader@Json@@AEAADXZ ENDP			; Json::Reader::getNextChar
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??1Reader@Json@@QEAA@XZ
_TEXT	SEGMENT
$T82 = 32
this$ = 64
??1Reader@Json@@QEAA@XZ PROC				; Json::Reader::~Reader, COMDAT
$LN244:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T82[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	rdi, rcx
	add	rcx, 152				; 00000098H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rdi+80]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

; 1193 : 		_Tidy();

	lea	rcx, QWORD PTR [rdi+40]
	call	?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rdi+40]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	xor	esi, esi
	mov	QWORD PTR [rdi+40], rsi

; 1377 : 		return (this->_Mysize() == 0);

	mov	rax, QWORD PTR [rdi+32]

; 1871 : 		while (!empty())

	test	rax, rax
	je	SHORT $LN57@Reader
	npad	5
$LL56@Reader:

; 1518 : 		if (--this->_Mysize() == 0)

	sub	rax, 1
	mov	QWORD PTR [rdi+32], rax
	jne	SHORT $LN79@Reader

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rdi+24], rsi
$LN79@Reader:

; 1871 : 		while (!empty())

	test	rax, rax
	jne	SHORT $LL56@Reader
$LN57@Reader:

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	rbx, QWORD PTR [rdi+16]
	test	rbx, rbx
	je	SHORT $LN59@Reader
	npad	4
$LL58@Reader:

; 1877 : 			{	// free storage for a block and destroy pointer
; 1878 : 			if (this->_Map()[--_Block] != pointer())

	dec	rbx
	mov	rax, QWORD PTR [rdi+8]
	mov	rcx, QWORD PTR [rax+rbx*8]
	test	rcx, rcx
	je	SHORT $LN158@Reader
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	edx, 16
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
$LN158@Reader:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	rbx, rbx
	jne	SHORT $LL58@Reader
$LN59@Reader:

; 1879 : 				{	// free block and destroy its pointer
; 1880 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1881 : 				_Alpty_traits::destroy(_Almap, _STD addressof(this->_Map()[_Block]));
; 1882 : 				}
; 1883 : 			}
; 1884 : 
; 1885 : 		if (this->_Map() != _Mapptr())

	mov	rcx, QWORD PTR [rdi+8]
	test	rcx, rcx
	je	SHORT $LN62@Reader

; 1886 : 			{
; 1887 : 			_Almap.deallocate(this->_Map(), this->_Mapsize());	// free storage for map

	mov	rdx, QWORD PTR [rdi+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rdx*8]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
$LN62@Reader:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1890 : 		this->_Mapsize() = 0;

	mov	QWORD PTR [rdi+16], rsi

; 1891 : 		this->_Map() = _Mapptr();

	mov	QWORD PTR [rdi+8], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rdi]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rdi], rsi
	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1Reader@Json@@QEAA@XZ ENDP				; Json::Reader::~Reader
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
;	COMDAT ?pop@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?pop@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::pop, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rcx+32], 1
	jne	SHORT $LN4@pop

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rcx+24], 0
$LN4@pop:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 126  : 		}

	ret	0
?pop@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::pop
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
;	COMDAT ?top@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ
_TEXT	SEGMENT
this$ = 8
?top@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ PROC ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::top, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	r9, QWORD PTR [rcx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	add	r9, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	ecx, edx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN55@top

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN55@top

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN55@top:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	dec	r9
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdx
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN76@top

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	r8, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	r8, r8
	je	SHORT $LN76@top

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r8]
$LN76@top:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN93@top
	mov	rdx, QWORD PTR [rax]
$LN93@top:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rdx+16]
	mov	rcx, r9
	dec	rax
	shr	rcx, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r9d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [rax+rcx*8]
	lea	rax, QWORD PTR [rax+r9*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 111  : 		}

	ret	0
?top@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ ENDP ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::top
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
;	COMDAT ?empty@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_NXZ PROC ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::empty, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1377 : 		return (this->_Mysize() == 0);

	cmp	QWORD PTR [rcx+32], 0
	sete	al
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 101  : 		}

	ret	0
?empty@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_NXZ ENDP ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
;	COMDAT ?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z PROC ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::push, COMDAT

; 84   : 		{	// insert element at beginning

$LN117:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	r14, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rcx+32]
	mov	r8, QWORD PTR [rbx+24]
	lea	eax, DWORD PTR [rcx+r8]
	test	al, 1
	jne	SHORT $LN6@push
	lea	rax, QWORD PTR [rcx+2]
	shr	rax, 1
	cmp	QWORD PTR [rbx+16], rax
	ja	SHORT $LN6@push
	mov	rcx, rbx
	call	?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Growmap
	mov	r8, QWORD PTR [rbx+24]
$LN6@push:
	mov	rax, QWORD PTR [rbx+16]
	lea	rcx, QWORD PTR [rax*2-1]
	and	rcx, r8
	mov	QWORD PTR [rbx+24], rcx
	mov	rdi, QWORD PTR [rbx+32]

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rbx+16]

; 1105 : 		_PUSH_BACK_BEGIN;

	add	rdi, rcx

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	dec	rax
	mov	rcx, rdi
	shr	rcx, 1
	and	rcx, rax

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rax, QWORD PTR [rbx+8]
	cmp	QWORD PTR [rax+rcx*8], 0
	lea	rsi, QWORD PTR [rcx*8]
	jne	SHORT $LN7@push
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 2
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rsi+rcx], rax
	mov	rax, QWORD PTR [rbx+8]
$LN7@push:

; 1106 : 		_Alty_traits::construct(this->_Getal(),

	mov	rax, QWORD PTR [rsi+rax]
	and	edi, 1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1106 : 		_Alty_traits::construct(this->_Getal(),

	lea	rdx, QWORD PTR [rax+rdi*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	rcx, QWORD PTR [r14]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 86   : 		}

	mov	rsi, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	QWORD PTR [rax], rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1109 : 		_PUSH_BACK_END;

	inc	QWORD PTR [rbx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 86   : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?push@?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ENDP ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::push
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack
;	COMDAT ??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >, COMDAT

; 31   : 		{	// construct with empty container

$LN64:
	push	rbx
	sub	rsp, 48					; 00000030H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 31   : 		{	// construct with empty container

	movaps	XMMWORD PTR [rsp+32], xmm6
	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rax+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 32   : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	QWORD PTR [rax], rbx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\stack

; 32   : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$stack@PEAVValue@Json@@V?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >::stack<Json::Value *,std::deque<Json::Value *,std::allocator<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T69 = 32
this$ = 64
??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::~deque<Json::Value *,std::allocator<Json::Value *> >, COMDAT

; 1192 : 		{	// destroy the deque

$LN192:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T69[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rsi
	mov	rbx, rcx

; 1377 : 		return (this->_Mysize() == 0);

	mov	rax, QWORD PTR [rcx+32]

; 1871 : 		while (!empty())

	xor	esi, esi
	test	rax, rax
	je	SHORT $LN5@deque
	npad	9
$LL4@deque:

; 1518 : 		if (--this->_Mysize() == 0)

	sub	rax, 1
	mov	QWORD PTR [rcx+32], rax
	jne	SHORT $LN27@deque

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rcx+24], rsi
$LN27@deque:

; 1871 : 		while (!empty())

	test	rax, rax
	jne	SHORT $LL4@deque
$LN5@deque:

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	rdi, QWORD PTR [rcx+16]
	test	rdi, rdi
	je	SHORT $LN7@deque
	npad	4
$LL6@deque:

; 1877 : 			{	// free storage for a block and destroy pointer
; 1878 : 			if (this->_Map()[--_Block] != pointer())

	dec	rdi
	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rax+rdi*8]
	test	rcx, rcx
	je	SHORT $LN106@deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	edx, 16
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
$LN106@deque:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	rdi, rdi
	jne	SHORT $LL6@deque
$LN7@deque:

; 1879 : 				{	// free block and destroy its pointer
; 1880 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1881 : 				_Alpty_traits::destroy(_Almap, _STD addressof(this->_Map()[_Block]));
; 1882 : 				}
; 1883 : 			}
; 1884 : 
; 1885 : 		if (this->_Map() != _Mapptr())

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN10@deque

; 1886 : 			{
; 1887 : 			_Almap.deallocate(this->_Map(), this->_Mapsize());	// free storage for map

	mov	rdx, QWORD PTR [rbx+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [rdx*8]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
$LN10@deque:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1890 : 		this->_Mapsize() = 0;

	mov	QWORD PTR [rbx+16], rsi

; 1891 : 		this->_Map() = _Mapptr();

	mov	QWORD PTR [rbx+8], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rbx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], rsi

; 1193 : 		_Tidy();
; 1194 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??1?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::~deque<Json::Value *,std::allocator<Json::Value *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::clear, COMDAT

; 1689 : 		{	// erase all

$LN5:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 1690 : 		_Tidy();

	call	?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
	npad	1

; 1691 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?clear@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::push_back, COMDAT

; 1485 : 		{	// insert element at end

$LN117:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rsi, rdx

; 1487 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rdi+32]
	inc	rax
	cmp	rcx, rax
	ja	SHORT $LN2@push_back
	mov	rcx, rdi
	call	?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap
	mov	rcx, QWORD PTR [rdi+16]
$LN2@push_back:
	lea	rax, QWORD PTR [rcx-1]
	and	QWORD PTR [rdi+24], rax
	mov	rdx, QWORD PTR [rdi+24]
	add	rdx, QWORD PTR [rdi+32]

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rdi+16]
	dec	rax
	and	rdx, rax

; 1487 : 		_PUSH_BACK_BEGIN;

	lea	rbx, QWORD PTR [rdx*8]
	mov	rdx, QWORD PTR [rdi+8]
	cmp	QWORD PTR [rdx+rbx], 0
	jne	SHORT $LN3@push_back
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 64					; 00000040H
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1487 : 		_PUSH_BACK_BEGIN;

	mov	rdx, QWORD PTR [rdi+8]
	mov	QWORD PTR [rbx+rdx], rax
	mov	rdx, QWORD PTR [rdi+8]
$LN3@push_back:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, QWORD PTR [rbx+rdx]
	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	xmm0, XMMWORD PTR [rsi]
	lea	rdx, QWORD PTR [rsi+24]
	mov	rbx, rax
	movups	XMMWORD PTR [rax], xmm0
	lea	rcx, QWORD PTR [rax+24]
	movsd	xmm1, QWORD PTR [rsi+16]
	movsd	QWORD PTR [rax+16], xmm1
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rcx, QWORD PTR [rsi+56]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1491 : 		}

	mov	rsi, QWORD PTR [rsp+56]
	mov	QWORD PTR [rbx+56], rcx
	inc	QWORD PTR [rdi+32]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?push_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXAEBVErrorInfo@Reader@Json@@@Z ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::size, COMDAT

; 1367 : 		return (this->_Mysize());

	mov	rax, QWORD PTR [rcx+32]

; 1368 : 		}

	ret	0
?size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newsize$ = 56
?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize, COMDAT

; 1340 : 		{	// determine new length, padding as needed

$LN198:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	rsi, rdx

; 1341 : 		while (this->_Mysize() < _Newsize)

	mov	rcx, QWORD PTR [rcx+32]
	cmp	rcx, rdx
	jae	$LN187@resize
$LL2@resize:

; 1136 : 		_PUSH_BACK_BEGIN;

	mov	rdx, QWORD PTR [rbx+16]
	lea	rax, QWORD PTR [rcx+1]
	cmp	rdx, rax
	ja	SHORT $LN14@resize
	mov	rcx, rbx
	call	?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap
	mov	rdx, QWORD PTR [rbx+16]
$LN14@resize:
	lea	rax, QWORD PTR [rdx-1]
	and	QWORD PTR [rbx+24], rax
	mov	rdx, QWORD PTR [rbx+24]
	add	rdx, QWORD PTR [rbx+32]

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rbx+16]
	dec	rax
	and	rdx, rax

; 1136 : 		_PUSH_BACK_BEGIN;

	lea	rdi, QWORD PTR [rdx*8]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	QWORD PTR [rdx+rdi], 0
	jne	SHORT $LN194@resize
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 64					; 00000040H
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1136 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+rcx], rax
	mov	rdx, QWORD PTR [rbx+8]
$LN194@resize:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, QWORD PTR [rdi+rdx]
	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR [rax+8], rcx
	mov	QWORD PTR [rax+16], rcx
	mov	QWORD PTR [rax+24], rcx
	mov	QWORD PTR [rax+32], rcx
	mov	QWORD PTR [rax+40], rcx
	mov	QWORD PTR [rax+48], rcx
	mov	QWORD PTR [rax+56], rcx
	lea	rcx, QWORD PTR [rax+24]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1140 : 		_PUSH_BACK_END;

	mov	rcx, QWORD PTR [rbx+32]
	inc	rcx
	mov	QWORD PTR [rbx+32], rcx

; 1341 : 		while (this->_Mysize() < _Newsize)

	cmp	rcx, rsi
	jb	$LL2@resize
$LN187@resize:

; 1342 : 			{
; 1343 : 			emplace_back();
; 1344 : 			}
; 1345 : 
; 1346 : 		while (_Newsize < this->_Mysize())

	cmp	rsi, rcx
	jae	SHORT $LN5@resize
	xor	edi, edi
$LL4@resize:

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rbx+24]
	dec	rax
	add	rcx, rax
	mov	rax, QWORD PTR [rbx+16]
	dec	rax
	and	rcx, rax

; 1516 : 		_Alty_traits::destroy(this->_Getal(),

	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
	add	rcx, 24
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1517 : 			_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rbx+32], 1
	jne	SHORT $LN195@resize

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rbx+24], rdi
$LN195@resize:

; 1342 : 			{
; 1343 : 			emplace_back();
; 1344 : 			}
; 1345 : 
; 1346 : 		while (_Newsize < this->_Mysize())

	mov	rcx, QWORD PTR [rbx+32]
	cmp	rsi, rcx
	jb	SHORT $LL4@resize
$LN5@resize:

; 1347 : 			{
; 1348 : 			pop_back();
; 1349 : 			}
; 1350 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?resize@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAX_K@Z ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::resize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::emplace_back<>, COMDAT

; 1134 : 		{	// insert element at end

$LN115:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1136 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rbx+32]
	inc	rax
	cmp	rcx, rax
	ja	SHORT $LN2@emplace_ba
	mov	rcx, rbx
	call	?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap
	mov	rcx, QWORD PTR [rbx+16]
$LN2@emplace_ba:
	lea	rax, QWORD PTR [rcx-1]
	and	QWORD PTR [rbx+24], rax
	mov	rdx, QWORD PTR [rbx+24]
	add	rdx, QWORD PTR [rbx+32]

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rbx+16]
	dec	rax
	and	rdx, rax

; 1136 : 		_PUSH_BACK_BEGIN;

	lea	rdi, QWORD PTR [rdx*8]
	mov	rdx, QWORD PTR [rbx+8]
	cmp	QWORD PTR [rdx+rdi], 0
	jne	SHORT $LN3@emplace_ba
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 64					; 00000040H
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1136 : 		_PUSH_BACK_BEGIN;

	mov	rdx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rdi+rdx], rax
	mov	rdx, QWORD PTR [rbx+8]
$LN3@emplace_ba:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, QWORD PTR [rdi+rdx]
	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR [rax+8], rcx
	mov	QWORD PTR [rax+16], rcx
	mov	QWORD PTR [rax+24], rcx
	mov	QWORD PTR [rax+32], rcx
	mov	QWORD PTR [rax+40], rcx
	mov	QWORD PTR [rax+48], rcx
	mov	QWORD PTR [rax+56], rcx
	lea	rcx, QWORD PTR [rax+24]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1140 : 		_PUSH_BACK_END;

	inc	QWORD PTR [rbx+32]

; 1141 : 
; 1142 : #if _HAS_CXX17
; 1143 : 		return (back());
; 1144 : #endif /* _HAS_CXX17 */
; 1145 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$emplace_back@$$V@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::emplace_back<>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T14 = 32
this$ = 64
??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::~deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >, COMDAT

; 1192 : 		{	// destroy the deque

$LN48:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T14[rsp], -2
	mov	rbx, rcx

; 1193 : 		_Tidy();

	call	?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rbx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], 0

; 1194 : 		}

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::~deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >, COMDAT

; 930  : 		{	// construct empty deque

$LN61:
	push	rbx
	sub	rsp, 48					; 00000030H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	movaps	XMMWORD PTR [rsp+32], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 930  : 		{	// construct empty deque

	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rax+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]

; 931  : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	QWORD PTR [rax], rbx

; 931  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_K_K@Z PROC ; std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >::_Getblock, COMDAT

; 689  : 			// NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rcx+16]
	dec	rax
	and	rax, rdx

; 691  : 		}

	ret	0
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_K_K@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mysize, COMDAT

; 883  : 		return (_Get_data()._Mysize);

	lea	rax, QWORD PTR [rcx+32]

; 884  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mysize, COMDAT

; 878  : 		return (_Get_data()._Mysize);

	lea	rax, QWORD PTR [rcx+32]

; 879  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Myoff, COMDAT

; 868  : 		return (_Get_data()._Myoff);

	lea	rax, QWORD PTR [rcx+24]

; 869  : 		}

	ret	0
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Myoff
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mapsize, COMDAT

; 858  : 		return (_Get_data()._Mapsize);

	lea	rax, QWORD PTR [rcx+16]

; 859  : 		}

	ret	0
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Map@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAVErrorInfo@Reader@Json@@XZ
_TEXT	SEGMENT
this$ = 8
?_Map@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAVErrorInfo@Reader@Json@@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Map, COMDAT

; 848  : 		return (_Get_data()._Map);

	lea	rax, QWORD PTR [rcx+8]

; 849  : 		}

	ret	0
?_Map@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAVErrorInfo@Reader@Json@@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Map
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Get_data, COMDAT

; 843  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 844  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getal, COMDAT

; 828  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 829  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Orphan_all, COMDAT

; 818  : 		_Get_data()._Orphan_all();
; 819  : 		}

	ret	0
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T14 = 32
this$ = 64
??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::~_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >, COMDAT

; 744  : 		{	// destroy proxy

$LN45:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T14[rsp], -2
	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rcx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], 0

; 745  : 		_Free_proxy();
; 746  : 		}

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::~_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >, COMDAT

; 730  : 		{	// default construct allocator

$LN58:
	push	rbx
	sub	rsp, 48					; 00000030H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	movaps	XMMWORD PTR [rsp+32], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 730  : 		{	// default construct allocator

	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rax+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]

; 731  : 		_Alloc_proxy();
; 732  : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	QWORD PTR [rax], rbx

; 731  : 		_Alloc_proxy();
; 732  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBA_K_K@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getblock, COMDAT

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rcx+16]
	dec	rax
	and	rax, rdx

; 725  : 		return (_Get_data()._Getblock(_Off));
; 726  : 		}

	ret	0
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBA_K_K@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T14 = 32
this$ = 64
??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::~_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >, COMDAT

; 744  : 		{	// destroy proxy

$LN45:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T14[rsp], -2
	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rcx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], 0

; 745  : 		_Free_proxy();
; 746  : 		}

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::~_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Tidy, COMDAT

; 1869 : 		{	// free all storage

$LN148:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1377 : 		return (this->_Mysize() == 0);

	mov	rax, QWORD PTR [rcx+32]
	xor	esi, esi

; 1869 : 		{	// free all storage

	mov	rbx, rcx

; 1377 : 		return (this->_Mysize() == 0);

	test	rax, rax

; 1870 : 		_Alpty _Almap(this->_Getal());
; 1871 : 		while (!empty())

	je	SHORT $LN3@Tidy
	npad	3
$LL2@Tidy:

; 1518 : 		if (--this->_Mysize() == 0)

	sub	rax, 1
	mov	QWORD PTR [rcx+32], rax
	jne	SHORT $LN25@Tidy

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rcx+24], rsi
$LN25@Tidy:

; 1377 : 		return (this->_Mysize() == 0);

	test	rax, rax

; 1870 : 		_Alpty _Almap(this->_Getal());
; 1871 : 		while (!empty())

	jne	SHORT $LL2@Tidy
$LN3@Tidy:

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	rdi, QWORD PTR [rcx+16]
	test	rdi, rdi
	je	SHORT $LN5@Tidy
	npad	4
$LL4@Tidy:

; 1877 : 			{	// free storage for a block and destroy pointer
; 1878 : 			if (this->_Map()[--_Block] != pointer())

	mov	rax, QWORD PTR [rbx+8]
	dec	rdi
	mov	rcx, QWORD PTR [rax+rdi*8]
	test	rcx, rcx
	je	SHORT $LN104@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	edx, 16
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN104@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	rdi, rdi
	jne	SHORT $LL4@Tidy
$LN5@Tidy:

; 1879 : 				{	// free block and destroy its pointer
; 1880 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1881 : 				_Alpty_traits::destroy(_Almap, _STD addressof(this->_Map()[_Block]));
; 1882 : 				}
; 1883 : 			}
; 1884 : 
; 1885 : 		if (this->_Map() != _Mapptr())

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN145@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR [rbx+16]
	shl	rdx, 3
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN145@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1892 : 		}

	mov	QWORD PTR [rbx+16], rsi
	mov	QWORD PTR [rbx+8], rsi
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Tidy@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAXXZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?pop_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?pop_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAXXZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::pop_back, COMDAT

; 1495 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1496 : 		if (empty())
; 1497 : 			{
; 1498 : 			_STL_REPORT_ERROR("deque empty before pop");
; 1499 : 			}
; 1500 : 		else
; 1501 : 			{	// something to erase, do it
; 1502 : 			size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1503 : 			_Orphan_off(_Newoff);
; 1504 : 			size_type _Block = this->_Getblock(_Newoff);
; 1505 : 			_Alty_traits::destroy(this->_Getal(),
; 1506 : 				_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1507 : 			if (--this->_Mysize() == 0)
; 1508 : 				{
; 1509 : 				this->_Myoff() = 0;
; 1510 : 				}
; 1511 : 			}
; 1512 : 
; 1513 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1514 : 		size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1515 : 		size_type _Block = this->_Getblock(_Newoff);
; 1516 : 		_Alty_traits::destroy(this->_Getal(),
; 1517 : 			_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rcx+32], 1
	jne	SHORT $LN2@pop_back

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rcx+24], 0
$LN2@pop_back:

; 1521 : 			}
; 1522 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1523 : 		}

	ret	0
?pop_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAXXZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ
_TEXT	SEGMENT
this$ = 8
?back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::back, COMDAT

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	r9, QWORD PTR [rcx+32]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	edx, edx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	add	r9, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	ecx, edx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	rax, rax
	je	SHORT $LN53@back

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN53@back

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rcx, QWORD PTR [rax]
$LN53@back:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	dec	r9
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	rax, rdx
	test	rcx, rcx

; 120  : 		if (_Myproxy != _Right._Myproxy)

	je	SHORT $LN74@back

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	r8, QWORD PTR [rcx]

; 148  : 		if (_Parent == nullptr)

	test	r8, r8
	je	SHORT $LN74@back

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r8]
$LN74@back:

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	test	rax, rax
	je	SHORT $LN91@back
	mov	rdx, QWORD PTR [rax]
$LN91@back:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rdx+16]
	mov	rcx, r9
	dec	rax
	shr	rcx, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	r9d, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [rdx+8]
	mov	rax, QWORD PTR [rax+rcx*8]
	lea	rax, QWORD PTR [rax+r9*8]

; 1429 : 		return (*(end() - 1));
; 1430 : 		}

	ret	0
?back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAAEAPEAVValue@Json@@XZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?empty@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_NXZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::empty, COMDAT

; 1377 : 		return (this->_Mysize() == 0);

	cmp	QWORD PTR [rcx+32], 0
	sete	al

; 1378 : 		}

	ret	0
?empty@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_NXZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::push_back, COMDAT

; 1103 : 		{	// insert element at end

$LN113:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	mov	r14, rdx

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rcx+32]
	mov	r8, QWORD PTR [rbx+24]
	lea	eax, DWORD PTR [rcx+r8]
	test	al, 1
	jne	SHORT $LN2@push_back
	lea	rax, QWORD PTR [rcx+2]
	shr	rax, 1
	cmp	QWORD PTR [rbx+16], rax
	ja	SHORT $LN2@push_back
	mov	rcx, rbx
	call	?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Growmap
	mov	r8, QWORD PTR [rbx+24]
$LN2@push_back:
	mov	rax, QWORD PTR [rbx+16]
	lea	rcx, QWORD PTR [rax*2-1]
	and	rcx, r8
	mov	QWORD PTR [rbx+24], rcx
	mov	rdi, QWORD PTR [rbx+32]
	add	rdi, rcx

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rbx+16]
	dec	rcx
	mov	rax, rdi
	shr	rax, 1
	and	rcx, rax

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rax, QWORD PTR [rbx+8]
	cmp	QWORD PTR [rax+rcx*8], 0
	lea	rsi, QWORD PTR [rcx*8]
	jne	SHORT $LN3@push_back
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 2
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1105 : 		_PUSH_BACK_BEGIN;

	mov	rcx, QWORD PTR [rbx+8]
	mov	QWORD PTR [rsi+rcx], rax
	mov	rax, QWORD PTR [rbx+8]
$LN3@push_back:

; 1106 : 		_Alty_traits::construct(this->_Getal(),

	mov	rax, QWORD PTR [rsi+rax]
	and	edi, 1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1106 : 		_Alty_traits::construct(this->_Getal(),

	lea	rdx, QWORD PTR [rax+rdi*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	rcx, QWORD PTR [r14]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1110 : 		}

	mov	rsi, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	QWORD PTR [rax], rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1109 : 		_PUSH_BACK_END;

	inc	QWORD PTR [rbx+32]

; 1110 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?push_back@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAAX$$QEAPEAVValue@Json@@@Z ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::deque<Json::Value *,std::allocator<Json::Value *> >, COMDAT

; 930  : 		{	// construct empty deque

$LN61:
	push	rbx
	sub	rsp, 48					; 00000030H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	movaps	XMMWORD PTR [rsp+32], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 930  : 		{	// construct empty deque

	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rax+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]

; 931  : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	QWORD PTR [rax], rbx

; 931  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA@XZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::deque<Json::Value *,std::allocator<Json::Value *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy, COMDAT

; 1869 : 		{	// free all storage

$LN156:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1377 : 		return (this->_Mysize() == 0);

	xor	esi, esi
	mov	rcx, QWORD PTR [rcx+32]
	test	rcx, rcx

; 1870 : 		_Alpty _Almap(this->_Getal());
; 1871 : 		while (!empty())

	je	SHORT $LN3@Tidy
	npad	3
$LL2@Tidy:

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rbx+24]
	dec	rax
	add	rcx, rax
	mov	rax, QWORD PTR [rbx+16]
	dec	rax
	and	rcx, rax

; 1516 : 		_Alty_traits::destroy(this->_Getal(),

	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
	add	rcx, 24
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1517 : 			_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rbx+32], 1
	jne	SHORT $LN152@Tidy

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rbx+24], rsi
$LN152@Tidy:

; 1377 : 		return (this->_Mysize() == 0);

	mov	rcx, QWORD PTR [rbx+32]
	test	rcx, rcx

; 1870 : 		_Alpty _Almap(this->_Getal());
; 1871 : 		while (!empty())

	jne	SHORT $LL2@Tidy
$LN3@Tidy:

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	mov	rdi, QWORD PTR [rbx+16]
	test	rdi, rdi
	je	SHORT $LN5@Tidy
	npad	14
$LL4@Tidy:

; 1877 : 			{	// free storage for a block and destroy pointer
; 1878 : 			if (this->_Map()[--_Block] != pointer())

	mov	rax, QWORD PTR [rbx+8]
	dec	rdi
	mov	rcx, QWORD PTR [rax+rdi*8]
	test	rcx, rcx
	je	SHORT $LN110@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	edx, 64					; 00000040H
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN110@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1876 : 		for (size_type _Block = this->_Mapsize(); 0 < _Block; )

	test	rdi, rdi
	jne	SHORT $LL4@Tidy
$LN5@Tidy:

; 1879 : 				{	// free block and destroy its pointer
; 1880 : 				this->_Getal().deallocate(this->_Map()[_Block], _DEQUESIZ);
; 1881 : 				_Alpty_traits::destroy(_Almap, _STD addressof(this->_Map()[_Block]));
; 1882 : 				}
; 1883 : 			}
; 1884 : 
; 1885 : 		if (this->_Map() != _Mapptr())

	mov	rcx, QWORD PTR [rbx+8]
	test	rcx, rcx
	je	SHORT $LN153@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR [rbx+16]
	shl	rdx, 3
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN153@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1892 : 		}

	mov	QWORD PTR [rbx+16], rsi
	mov	QWORD PTR [rbx+8], rsi
	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?_Tidy@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAXXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 64
_Count$dead$ = 72
?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap, COMDAT

; 1811 : 		{	// grow map by at least _Count pointers, _Mapsize() a power of 2

$LN281:
	push	rbp
	push	rsi
	sub	rsp, 40					; 00000028H

; 1812 : 		static_assert(1 < _DEQUEMAPSIZ,
; 1813 : 			"The _Xlen() test should always be performed.");
; 1814 : 
; 1815 : 		_Alpty _Almap(this->_Getal());
; 1816 : 		size_type _Newsize = 0 < this->_Mapsize() ? this->_Mapsize() : 1;

	mov	rdx, QWORD PTR [rcx+16]
	mov	rbp, rcx
	test	rdx, rdx
	mov	ecx, 1
	mov	r8, 288230376151711743			; 03ffffffffffffffH
	cmovne	rcx, rdx
$LL2@Growmap:

; 1817 : 		while (_Newsize - this->_Mapsize() < _Count
; 1818 : 			|| _Newsize < _DEQUEMAPSIZ)

	mov	rsi, rcx
	sub	rsi, rdx
	cmp	rsi, 1
	jb	SHORT $LN4@Growmap
	cmp	rcx, 8
	jae	SHORT $LN3@Growmap
$LN4@Growmap:

; 1819 : 			{	// scale _Newsize to 2^N >= _Mapsize() + _Count
; 1820 : 			if (max_size() / _DEQUESIZ - _Newsize < _Newsize)

	mov	rax, r8
	sub	rax, rcx
	cmp	rax, rcx
	jb	$LN272@Growmap

; 1823 : 				}
; 1824 : 
; 1825 : 			_Newsize *= 2;

	add	rcx, rcx

; 1826 : 			}

	jmp	SHORT $LL2@Growmap
$LN3@Growmap:
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rdi
	mov	QWORD PTR [rsp+80], r12

; 1827 : 		_Count = _Newsize - this->_Mapsize();
; 1828 : 
; 1829 : 		size_type _Myboff = this->_Myoff() / _DEQUESIZ;

	mov	r12, QWORD PTR [rbp+24]
	mov	QWORD PTR [rsp+88], r14
	mov	QWORD PTR [rsp+32], r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1833 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	mov	rcx, QWORD PTR [rbp+8]
	lea	r15, QWORD PTR [r12*8]
	mov	rbx, QWORD PTR [rbp+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	r14, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1833 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	shl	rbx, 3
	lea	rdi, QWORD PTR [r15+rax]
	lea	rdx, QWORD PTR [rcx+r15]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 848  : 		return (_Get_data()._Map);

	add	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rdi
	mov	r8, rbx
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1833 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	mov	rdx, QWORD PTR [rbp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	add	rbx, rdi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1836 : 		if (_Myboff <= _Count)

	mov	rcx, rbx
	cmp	r12, rsi
	ja	SHORT $LN6@Growmap
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, r15
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rcx, QWORD PTR [r15+rbx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	sub	r8, r12
	xor	edx, edx
	shl	r8, 3
	call	memset
	mov	r8, r15
	mov	rcx, r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1846 : 		else

	jmp	SHORT $LN278@Growmap
$LN6@Growmap:

; 1847 : 			{	// increment not greater than offset of initial block
; 1848 : 			_Uninitialized_copy(this->_Map(),

	lea	rdi, QWORD PTR [rsi*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rdi
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1851 : 			_Myptr = _Uninitialized_copy(this->_Map() + _Count,

	mov	rbx, QWORD PTR [rbp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1851 : 			_Myptr = _Uninitialized_copy(this->_Map() + _Count,

	lea	rdx, QWORD PTR [rdi+rbx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 848  : 		return (_Get_data()._Map);

	add	rbx, r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rbx
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rcx, QWORD PTR [rbx+r14]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rdi
$LN278@Growmap:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1859 : 		if (this->_Map() != _Mapptr())

	xor	edx, edx
	call	memset
	mov	rcx, QWORD PTR [rbp+8]
	mov	r15, QWORD PTR [rsp+32]
	mov	r12, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
	test	rcx, rcx
	je	SHORT $LN8@Growmap
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR [rbp+16]
	shl	rdx, 3
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN8@Growmap:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1864 : 		this->_Map() = _Newmap;	// point at new

	mov	QWORD PTR [rbp+8], r14

; 1865 : 		this->_Mapsize() += _Count;

	add	QWORD PTR [rbp+16], rsi
	mov	r14, QWORD PTR [rsp+88]

; 1866 : 		}

	add	rsp, 40					; 00000028H
	pop	rsi
	pop	rbp
	ret	0
$LN272@Growmap:

; 1821 : 				{
; 1822 : 				_Xlen();	// result too long

	call	?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Xlen
	int	3
$LN277@Growmap:
?_Growmap@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEAAX_K@Z ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::pop_back, COMDAT

; 1494 : 		{	// erase element at end

$LN58:
	push	rbx
	sub	rsp, 32					; 00000020H

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rdx, QWORD PTR [rcx+24]

; 1494 : 		{	// erase element at end

	mov	rbx, rcx

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rcx, QWORD PTR [rcx+32]
	dec	rdx
	add	rcx, rdx
	mov	rax, QWORD PTR [rbx+16]
	dec	rax
	and	rcx, rax

; 1495 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1496 : 		if (empty())
; 1497 : 			{
; 1498 : 			_STL_REPORT_ERROR("deque empty before pop");
; 1499 : 			}
; 1500 : 		else
; 1501 : 			{	// something to erase, do it
; 1502 : 			size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1503 : 			_Orphan_off(_Newoff);
; 1504 : 			size_type _Block = this->_Getblock(_Newoff);
; 1505 : 			_Alty_traits::destroy(this->_Getal(),
; 1506 : 				_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1507 : 			if (--this->_Mysize() == 0)
; 1508 : 				{
; 1509 : 				this->_Myoff() = 0;
; 1510 : 				}
; 1511 : 			}
; 1512 : 
; 1513 :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1514 : 		size_type _Newoff = this->_Myoff() + this->_Mysize() - 1;
; 1515 : 		size_type _Block = this->_Getblock(_Newoff);
; 1516 : 		_Alty_traits::destroy(this->_Getal(),

	mov	rax, QWORD PTR [rbx+8]
	mov	rcx, QWORD PTR [rax+rcx*8]
	add	rcx, 24
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1517 : 			_Unfancy(this->_Map()[_Block] + _Newoff % _DEQUESIZ));
; 1518 : 		if (--this->_Mysize() == 0)

	sub	QWORD PTR [rbx+32], 1
	jne	SHORT $LN2@pop_back

; 1519 : 			{
; 1520 : 			this->_Myoff() = 0;

	mov	QWORD PTR [rbx+24], 0
$LN2@pop_back:

; 1521 : 			}
; 1522 :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 1523 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?pop_back@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEAAXXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAPEAVErrorInfo@Reader@Json@@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Count$dead$ = 16
?allocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAPEAVErrorInfo@Reader@Json@@_K@Z PROC ; std::allocator<Json::Reader::ErrorInfo>::allocate, COMDAT

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 64					; 00000040H
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAPEAVErrorInfo@Reader@Json@@_K@Z ENDP ; std::allocator<Json::Reader::ErrorInfo>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT
	ret	0
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::~_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$dead$ = 8
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT
	ret	0
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::~_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_second, COMDAT

; 307  : 		return (_Myval2);

	mov	rax, rcx

; 308  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_first, COMDAT

; 292  : 		return (*this);

	mov	rax, rcx

; 293  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z PROC ; std::allocator<Json::Reader::ErrorInfo *>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN4:
	sub	rsp, 40					; 00000028H

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	rcx, rdx
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax

; 998  : 		}

	add	rsp, 40					; 00000028H

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAPEAPEAVErrorInfo@Reader@Json@@_K@Z ENDP ; std::allocator<Json::Reader::ErrorInfo *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAXQEAPEAVErrorInfo@Reader@Json@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?deallocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAXQEAPEAVErrorInfo@Reader@Json@@_K@Z PROC ; std::allocator<Json::Reader::ErrorInfo *>::deallocate, COMDAT

; 990  : 		{	// deallocate object at _Ptr

	mov	rcx, rdx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAAXQEAPEAVErrorInfo@Reader@Json@@_K@Z ENDP ; std::allocator<Json::Reader::ErrorInfo *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Get_data, COMDAT

; 838  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 839  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Free_proxy, COMDAT

; 793  : 		{	// destroy proxy

$LN43:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rcx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], 0

; 799  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 64
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Alloc_proxy, COMDAT

; 785  : 		{	// construct proxy

$LN48:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
	movaps	XMMWORD PTR [rsp+32], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 16
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]

; 790  : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]
	mov	QWORD PTR [rax], rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBA?AV01@_J@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Off$dead$ = 24
??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBA?AV01@_J@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator-, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 120  : 		if (_Myproxy != _Right._Myproxy)

	mov	r8, QWORD PTR [rcx]

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	r9d, r9d
	mov	eax, r9d

; 120  : 		if (_Myproxy != _Right._Myproxy)

	test	r8, r8
	je	SHORT $LN18@operator

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	r8, QWORD PTR [r8]

; 148  : 		if (_Parent == nullptr)

	test	r8, r8
	je	SHORT $LN18@operator

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r8]
$LN18@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 571  : 		this->_Myoff += _Off;

	mov	rcx, QWORD PTR [rcx+16]
	dec	rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	QWORD PTR [rdx], r9
	mov	QWORD PTR [rdx+8], r9

; 120  : 		if (_Myproxy != _Right._Myproxy)

	mov	QWORD PTR [rdx+16], rcx
	test	rax, rax
	je	SHORT $LN53@operator

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN53@operator

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rdx], rax
$LN53@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 590  : 		}

	mov	rax, rdx
	ret	0
??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBA?AV01@_J@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator-
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEAPEAVValue@Json@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEAPEAVValue@Json@@XZ PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator*, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	jne	SHORT $LN7@operator
	xor	r8d, r8d
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	r8, QWORD PTR [rax]
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rdx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [r8+16]
	mov	rcx, rdx
	dec	rax
	shr	rcx, 1
	and	rcx, rax

; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	edx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [r8+8]
	mov	rax, QWORD PTR [rax+rcx*8]
	lea	rax, QWORD PTR [rax+rdx*8]

; 535  : 		return ((reference)**(_Mybase *)this);
; 536  : 		}

	ret	0
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEAPEAVValue@Json@@XZ ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAXQEAPEAPEAVValue@Json@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?deallocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAXQEAPEAPEAVValue@Json@@_K@Z PROC ; std::allocator<Json::Value * *>::deallocate, COMDAT

; 990  : 		{	// deallocate object at _Ptr

	mov	rcx, rdx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAXQEAPEAPEAVValue@Json@@_K@Z ENDP ; std::allocator<Json::Value * *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mysize, COMDAT

; 883  : 		return (_Get_data()._Mysize);

	lea	rax, QWORD PTR [rcx+32]

; 884  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mysize, COMDAT

; 878  : 		return (_Get_data()._Mysize);

	lea	rax, QWORD PTR [rcx+32]

; 879  : 		}

	ret	0
?_Mysize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Myoff, COMDAT

; 868  : 		return (_Get_data()._Myoff);

	lea	rax, QWORD PTR [rcx+24]

; 869  : 		}

	ret	0
?_Myoff@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Myoff
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 8
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mapsize, COMDAT

; 858  : 		return (_Get_data()._Mapsize);

	lea	rax, QWORD PTR [rcx+16]

; 859  : 		}

	ret	0
?_Mapsize@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Mapsize
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Map@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAPEAVValue@Json@@XZ
_TEXT	SEGMENT
this$ = 8
?_Map@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAPEAVValue@Json@@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Map, COMDAT

; 848  : 		return (_Get_data()._Map);

	lea	rax, QWORD PTR [rcx+8]

; 849  : 		}

	ret	0
?_Map@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAPEAPEAVValue@Json@@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Map
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getal, COMDAT

; 828  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 829  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Orphan_all, COMDAT

; 818  : 		_Get_data()._Orphan_all();
; 819  : 		}

	ret	0
?_Orphan_all@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Free_proxy, COMDAT

; 793  : 		{	// destroy proxy

$LN43:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	mov	rcx, QWORD PTR [rcx]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 798  : 		_Myproxy() = nullptr;

	mov	QWORD PTR [rbx], 0

; 799  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Free_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 64
??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >, COMDAT

; 730  : 		{	// default construct allocator

$LN58:
	push	rbx
	sub	rsp, 48					; 00000030H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	movaps	XMMWORD PTR [rsp+32], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 730  : 		{	// default construct allocator

	mov	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	lea	ecx, QWORD PTR [rax+16]
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]

; 731  : 		_Alloc_proxy();
; 732  : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	QWORD PTR [rax], rbx

; 731  : 		_Alloc_proxy();
; 732  : 		}

	mov	rax, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??0?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_K_K@Z PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getblock, COMDAT

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rcx+16]
	dec	rax
	shr	rdx, 1
	and	rax, rdx

; 725  : 		return (_Get_data()._Getblock(_Off));
; 726  : 		}

	ret	0
?_Getblock@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBA_K_K@Z ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
this$ = 64
_Count$dead$ = 72
?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Growmap, COMDAT

; 1811 : 		{	// grow map by at least _Count pointers, _Mapsize() a power of 2

$LN281:
	push	rbp
	push	rsi
	sub	rsp, 40					; 00000028H

; 1812 : 		static_assert(1 < _DEQUEMAPSIZ,
; 1813 : 			"The _Xlen() test should always be performed.");
; 1814 : 
; 1815 : 		_Alpty _Almap(this->_Getal());
; 1816 : 		size_type _Newsize = 0 < this->_Mapsize() ? this->_Mapsize() : 1;

	mov	rdx, QWORD PTR [rcx+16]
	mov	rbp, rcx
	test	rdx, rdx
	mov	ecx, 1
	mov	r8, 1152921504606846975			; 0fffffffffffffffH
	cmovne	rcx, rdx
$LL2@Growmap:

; 1817 : 		while (_Newsize - this->_Mapsize() < _Count
; 1818 : 			|| _Newsize < _DEQUEMAPSIZ)

	mov	rsi, rcx
	sub	rsi, rdx
	cmp	rsi, 1
	jb	SHORT $LN4@Growmap
	cmp	rcx, 8
	jae	SHORT $LN3@Growmap
$LN4@Growmap:

; 1819 : 			{	// scale _Newsize to 2^N >= _Mapsize() + _Count
; 1820 : 			if (max_size() / _DEQUESIZ - _Newsize < _Newsize)

	mov	rax, r8
	sub	rax, rcx
	cmp	rax, rcx
	jb	$LN272@Growmap

; 1823 : 				}
; 1824 : 
; 1825 : 			_Newsize *= 2;

	add	rcx, rcx

; 1826 : 			}

	jmp	SHORT $LL2@Growmap
$LN3@Growmap:
	mov	QWORD PTR [rsp+64], rbx
	mov	QWORD PTR [rsp+72], rdi
	mov	QWORD PTR [rsp+80], r12

; 1827 : 		_Count = _Newsize - this->_Mapsize();
; 1828 : 
; 1829 : 		size_type _Myboff = this->_Myoff() / _DEQUESIZ;

	mov	r12, QWORD PTR [rbp+24]
	mov	QWORD PTR [rsp+88], r14
	shr	r12, 1
	mov	QWORD PTR [rsp+32], r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1833 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	mov	rcx, QWORD PTR [rbp+8]
	lea	r15, QWORD PTR [r12*8]
	mov	rbx, QWORD PTR [rbp+16]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	r14, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1833 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	shl	rbx, 3
	lea	rdi, QWORD PTR [r15+rax]
	lea	rdx, QWORD PTR [rcx+r15]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 848  : 		return (_Get_data()._Map);

	add	rbx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, rdi
	mov	r8, rbx
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1833 : 		_Myptr = _Uninitialized_copy(this->_Map() + _Myboff,

	mov	rdx, QWORD PTR [rbp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	add	rbx, rdi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1836 : 		if (_Myboff <= _Count)

	mov	rcx, rbx
	cmp	r12, rsi
	ja	SHORT $LN6@Growmap
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, r15
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rcx, QWORD PTR [r15+rbx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	sub	r8, r12
	xor	edx, edx
	shl	r8, 3
	call	memset
	mov	r8, r15
	mov	rcx, r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1846 : 		else

	jmp	SHORT $LN278@Growmap
$LN6@Growmap:

; 1847 : 			{	// increment not greater than offset of initial block
; 1848 : 			_Uninitialized_copy(this->_Map(),

	lea	rdi, QWORD PTR [rsi*8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rdi
	call	memmove
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1851 : 			_Myptr = _Uninitialized_copy(this->_Map() + _Count,

	mov	rbx, QWORD PTR [rbp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rcx, r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1851 : 			_Myptr = _Uninitialized_copy(this->_Map() + _Count,

	lea	rdx, QWORD PTR [rdi+rbx]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 848  : 		return (_Get_data()._Map);

	add	rbx, r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, rbx
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rcx, QWORD PTR [rbx+r14]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rdi
$LN278@Growmap:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1859 : 		if (this->_Map() != _Mapptr())

	xor	edx, edx
	call	memset
	mov	rcx, QWORD PTR [rbp+8]
	mov	r15, QWORD PTR [rsp+32]
	mov	r12, QWORD PTR [rsp+80]
	mov	rdi, QWORD PTR [rsp+72]
	mov	rbx, QWORD PTR [rsp+64]
	test	rcx, rcx
	je	SHORT $LN8@Growmap
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rdx, QWORD PTR [rbp+16]
	shl	rdx, 3
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN8@Growmap:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1864 : 		this->_Map() = _Newmap;	// point at new

	mov	QWORD PTR [rbp+8], r14

; 1865 : 		this->_Mapsize() += _Count;

	add	QWORD PTR [rbp+16], rsi
	mov	r14, QWORD PTR [rsp+88]

; 1866 : 		}

	add	rsp, 40					; 00000028H
	pop	rsi
	pop	rbp
	ret	0
$LN272@Growmap:

; 1821 : 				{
; 1822 : 				_Xlen();	// result too long

	call	?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Xlen
	int	3
$LN277@Growmap:
?_Growmap@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEAAX_K@Z ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Growmap
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?end@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
?end@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@2@XZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::end, COMDAT

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rax, QWORD PTR [rcx+32]
	add	rax, QWORD PTR [rcx+24]

; 306  : 		: _Myoff(_Off)

	mov	QWORD PTR [rdx+16], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rcx]
	mov	QWORD PTR [rdx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1244 : 		return (iterator(this->_Myoff() + this->_Mysize(),

	mov	rax, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	QWORD PTR [rdx+8], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 1246 : 		}

	ret	0
?end@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEAA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@2@XZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$dead$ = 56
?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z PROC ; std::allocator<Json::Value *>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN4:
	sub	rsp, 40					; 00000028H

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 2
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax

; 998  : 		}

	add	rsp, 40					; 00000028H

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@PEAVValue@Json@@@std@@QEAAPEAPEAVValue@Json@@_K@Z ENDP ; std::allocator<Json::Value *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@PEAVValue@Json@@@std@@QEAAXQEAPEAVValue@Json@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?deallocate@?$allocator@PEAVValue@Json@@@std@@QEAAXQEAPEAVValue@Json@@_K@Z PROC ; std::allocator<Json::Value *>::deallocate, COMDAT

; 990  : 		{	// deallocate object at _Ptr

	mov	rcx, rdx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	lea	rdx, QWORD PTR [r8*8]
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$allocator@PEAVValue@Json@@@std@@QEAAXQEAPEAVValue@Json@@_K@Z ENDP ; std::allocator<Json::Value *>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Xlen, COMDAT

; 1801 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1802 : 		_Xlength_error("deque<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen:
?_Xlen@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@IEBAXXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?empty@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_NXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::empty, COMDAT

; 1377 : 		return (this->_Mysize() == 0);

	cmp	QWORD PTR [rcx+32], 0
	sete	al

; 1378 : 		}

	ret	0
?empty@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_NXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?max_size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ PROC ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::max_size, COMDAT

; 1372 : 		return (_Alty_traits::max_size(this->_Getal()));

	mov	rax, 288230376151711743			; 03ffffffffffffffH

; 1373 : 		}

	ret	0
?max_size@?$deque@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@QEBA_KXZ ENDP ; std::deque<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAXQEAVErrorInfo@Reader@Json@@_K@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
_Count$ = 24
?deallocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAXQEAVErrorInfo@Reader@Json@@_K@Z PROC ; std::allocator<Json::Reader::ErrorInfo>::deallocate, COMDAT

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	shl	r8, 6
	mov	rcx, rdx
	mov	rdx, r8
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$allocator@VErrorInfo@Reader@Json@@@std@@QEAAXQEAVErrorInfo@Reader@Json@@_K@Z ENDP ; std::allocator<Json::Reader::ErrorInfo>::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 120  : 		if (_Myproxy != _Right._Myproxy)

	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN15@Deque_iter

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN15@Deque_iter

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN15@Deque_iter:
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__that$ = 16
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT

; 113  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 120  : 		if (_Myproxy != _Right._Myproxy)

	mov	rax, QWORD PTR [rdx]
	test	rax, rax
	je	SHORT $LN12@Deque_cons

; 121  : 			{
; 122  : 			if (_Right._Myproxy == nullptr)
; 123  : 				{	// becoming invalid, disown current parent
; 124  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 125  : 				_Lockit _Lock(_LOCK_DEBUG);
; 126  : 				_Orphan_me();
; 127  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 128  : 				}
; 129  : 			else
; 130  : 				{
; 131  : 				_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR [rax]

; 148  : 		if (_Parent == nullptr)

	test	rax, rax
	je	SHORT $LN12@Deque_cons

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN12@Deque_cons:
	mov	rax, QWORD PTR [rdx+16]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, rcx
	ret	0
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_second, COMDAT

; 302  : 		return (_Myval2);

	mov	rax, rcx

; 303  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SA_KAEBV?$allocator@VErrorInfo@Reader@Json@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SA_KAEBV?$allocator@VErrorInfo@Reader@Json@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::max_size, COMDAT

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, 288230376151711743			; 03ffffffffffffffH

; 893  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SA_KAEBV?$allocator@VErrorInfo@Reader@Json@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getal, COMDAT

; 833  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 834  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Myproxy, COMDAT

; 808  : 		return (_Get_data()._Myproxy);

	mov	rax, rcx

; 809  : 		}

	ret	0
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@VErrorInfo@Reader@Json@@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Reader::ErrorInfo,std::allocator<Json::Reader::ErrorInfo> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_first, COMDAT

; 292  : 		return (*this);

	mov	rax, rcx

; 293  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVValue@Json@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBQEAVValue@Json@@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBQEAVValue@Json@@XZ PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator*, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 182  : 		return (_Myproxy == nullptr ? nullptr : _Myproxy->_Mycont);

	mov	rax, QWORD PTR [rcx]
	test	rax, rax
	jne	SHORT $LN5@operator
	xor	r8d, r8d
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	r8, QWORD PTR [rax]
$LN6@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rdx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [r8+16]
	mov	rcx, rdx
	dec	rax
	shr	rcx, 1
	and	rcx, rax

; 313  : 		const auto _Mycont = static_cast<const _Mydeque *>(this->_Getcont());
; 314  :  #if _ITERATOR_DEBUG_LEVEL != 0
; 315  : 		_STL_VERIFY(_Mycont, "cannot dereference value-initialized deque iterator");
; 316  : 		_STL_VERIFY(_Mycont->_Myoff <= this->_Myoff
; 317  : 			&& this->_Myoff < _Mycont->_Myoff + _Mycont->_Mysize,
; 318  : 			"cannot deference out of range deque iterator");
; 319  :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 320  : 
; 321  : 		_Size_type _Block = _Mycont->_Getblock(_Myoff);
; 322  : 		_Size_type _Off = _Myoff % _DEQUESIZ;

	and	edx, 1

; 323  : 		return (_Mycont->_Map[_Block][_Off]);

	mov	rax, QWORD PTR [r8+8]
	mov	rax, QWORD PTR [rax+rcx*8]
	lea	rax, QWORD PTR [rax+rdx*8]

; 324  : 		}

	ret	0
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBQEAVValue@Json@@XZ ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??Z?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$dead$ = 16
??Z?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator-=, COMDAT

; 571  : 		this->_Myoff += _Off;

	dec	QWORD PTR [rcx+16]

; 583  : 		return (*this += -_Off);

	mov	rax, rcx

; 584  : 		}

	ret	0
??Z?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator-=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Pdeque$ = 24
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 306  : 		: _Myoff(_Off)

	mov	QWORD PTR [rcx+16], rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 148  : 		if (_Parent == nullptr)

	test	r8, r8
	je	SHORT $LN13@Deque_iter

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
$LN13@Deque_iter:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 531  : 		}

	mov	rax, rcx
	ret	0
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getblock@?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEBA_K_K@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEBA_K_K@Z PROC ; std::_Deque_val<std::_Deque_simple_types<Json::Value *> >::_Getblock, COMDAT

; 689  : 			// NB: _Mapsize and _DEQUESIZ are guaranteed to be powers of 2
; 690  : 		return ((_Off / _DEQUESIZ) & (_Mapsize - 1));

	mov	rax, QWORD PTR [rcx+16]
	dec	rax
	shr	rdx, 1
	and	rax, rdx

; 691  : 		}

	ret	0
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEBA_K_K@Z ENDP ; std::_Deque_val<std::_Deque_simple_types<Json::Value *> >::_Getblock
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z
_TEXT	SEGMENT
this$dead$ = 48
_Count$ = 56
?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z PROC ; std::allocator<Json::Value * *>::allocate, COMDAT

; 996  : 		{	// allocate array of _Count elements

$LN4:
	sub	rsp, 40					; 00000028H

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	rcx, rdx
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax

; 998  : 		}

	add	rsp, 40					; 00000028H

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@PEAPEAVValue@Json@@@std@@QEAAPEAPEAPEAVValue@Json@@_K@Z ENDP ; std::allocator<Json::Value * *>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Get_data, COMDAT

; 843  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 844  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Get_data, COMDAT

; 838  : 		return (_Mypair._Get_second());

	mov	rax, rcx

; 839  : 		}

	ret	0
?_Get_data@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Myproxy, COMDAT

; 808  : 		return (_Get_data()._Myproxy);

	mov	rax, rcx

; 809  : 		}

	ret	0
?_Myproxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 64
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Alloc_proxy, COMDAT

; 785  : 		{	// construct proxy

$LN48:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
	movaps	XMMWORD PTR [rsp+32], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 16
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	rdx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 787  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

	mov	QWORD PTR [rbx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	xorps	xmm6, xmm6
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	XMMWORD PTR [rax], xmm6
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 789  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

	mov	rax, QWORD PTR [rbx]

; 790  : 		}

	movaps	xmm6, XMMWORD PTR [rsp+32]
	mov	QWORD PTR [rax], rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?_Alloc_proxy@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ
_TEXT	SEGMENT
this$dead$ = 48
?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Xlen, COMDAT

; 1801 : 		{	// report a length_error

$LN4:
	sub	rsp, 40					; 00000028H

; 1802 : 		_Xlength_error("deque<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
	int	3
$LN3@Xlen:
?_Xlen@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@IEBAXXZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?max_size@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$dead$ = 8
?max_size@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_KXZ PROC ; std::deque<Json::Value *,std::allocator<Json::Value *> >::max_size, COMDAT

; 1372 : 		return (_Alty_traits::max_size(this->_Getal()));

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 1373 : 		}

	ret	0
?max_size@?$deque@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@QEBA_KXZ ENDP ; std::deque<Json::Value *,std::allocator<Json::Value *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$dead$ = 8
_Count$dead$ = 16
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

	mov	ecx, 16
	jmp	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_first, COMDAT

; 297  : 		return (*this);

	mov	rax, rcx

; 298  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@VErrorInfo@Reader@Json@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_second, COMDAT

; 307  : 		return (_Myval2);

	mov	rax, rcx

; 308  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_second, COMDAT

; 302  : 		return (_Myval2);

	mov	rax, rcx

; 303  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAAAEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
_Pdeque$ = 24
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	xor	eax, eax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 306  : 		: _Myoff(_Off)

	mov	QWORD PTR [rcx+16], rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 108  : 		: _Myproxy(nullptr), _Mynextiter(nullptr)

	mov	QWORD PTR [rcx], rax
	mov	QWORD PTR [rcx+8], rax

; 148  : 		if (_Parent == nullptr)

	test	r8, r8
	je	SHORT $LN11@Deque_cons

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [r8]
	mov	QWORD PTR [rcx], rax
$LN11@Deque_cons:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 309  : 		}

	mov	rax, rcx
	ret	0
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAA@_KPEBU_Container_base12@1@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$dead$ = 16
??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z PROC ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator+=, COMDAT

; 571  : 		this->_Myoff += _Off;

	dec	QWORD PTR [rcx+16]

; 572  : 		return (*this);

	mov	rax, rcx

; 573  : 		}

	ret	0
??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAAEAV01@_J@Z ENDP ; std::_Deque_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::operator+=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SA_KAEBV?$allocator@PEAVValue@Json@@@2@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SA_KAEBV?$allocator@PEAVValue@Json@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::max_size, COMDAT

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 893  : 		}

	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SA_KAEBV?$allocator@PEAVValue@Json@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ PROC ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getal, COMDAT

; 833  : 		return (_Mypair._Get_first());

	mov	rax, rcx

; 834  : 		}

	ret	0
?_Getal@?$_Deque_alloc@U?$_Deque_base_types@PEAVValue@Json@@V?$allocator@PEAVValue@Json@@@std@@@std@@@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ ENDP ; std::_Deque_alloc<std::_Deque_base_types<Json::Value *,std::allocator<Json::Value *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_first, COMDAT

; 297  : 		return (*this);

	mov	rax, rcx

; 298  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVValue@Json@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAXPEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@@Z
_TEXT	SEGMENT
this$ = 8
_Pdeque$ = 16
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAXPEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@@Z PROC ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Setcont, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 148  : 		if (_Parent == nullptr)

	test	rdx, rdx
	je	SHORT $LN5@Setcont

; 149  : 			{	// no future parent, just disown current parent
; 150  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 151  : 			_Lockit _Lock(_LOCK_DEBUG);
; 152  : 			_Orphan_me();
; 153  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 154  : 			}
; 155  : 		else
; 156  : 			{	// have a parent, do adoption
; 157  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;
; 158  : 
; 159  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 160  : 			if (_Myproxy != _Parent_proxy)
; 161  : 				{	// change parentage
; 162  : 				_Lockit _Lock(_LOCK_DEBUG);
; 163  : 				_Orphan_me();
; 164  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;
; 165  : 				_Parent_proxy->_Myfirstiter = this;
; 166  : 				_Myproxy = _Parent_proxy;
; 167  : 				}
; 168  : 
; 169  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 170  : 			_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR [rcx], rax
$LN5@Setcont:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 459  : 		}

	ret	0
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@QEAAXPEBV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@@Z ENDP ; std::_Deque_const_iterator<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >::_Setcont
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$move@AEAPEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAPEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z PROC ; std::move<Json::Value * &>, COMDAT

; 1589 : 	return (static_cast<remove_reference_t<_Ty>&&>(_Arg));

	mov	rax, rcx

; 1590 : 	}

	ret	0
??$move@AEAPEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z ENDP ; std::move<Json::Value * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@VErrorInfo@Reader@Json@@@std@@YAPEAVErrorInfo@Reader@Json@@PEAV123@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@VErrorInfo@Reader@Json@@@std@@YAPEAVErrorInfo@Reader@Json@@PEAV123@@Z PROC ; std::_Unfancy<Json::Reader::ErrorInfo>, COMDAT

; 346  : 	return (_Ptr);

	mov	rax, rcx

; 347  : 	}

	ret	0
??$_Unfancy@VErrorInfo@Reader@Json@@@std@@YAPEAVErrorInfo@Reader@Json@@PEAV123@@Z ENDP ; std::_Unfancy<Json::Reader::ErrorInfo>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::construct<Json::Reader::ErrorInfo,Json::Reader::ErrorInfo const &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 64					; 00000040H
	mov	rdi, r8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	xmm0, XMMWORD PTR [rdi]
	lea	rdx, QWORD PTR [rdi+24]
	mov	rbx, rax
	movups	XMMWORD PTR [rax], xmm0
	lea	rcx, QWORD PTR [rax+24]
	movsd	xmm1, QWORD PTR [rdi+16]
	movsd	QWORD PTR [rax+16], xmm1
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rcx, QWORD PTR [rdi+56]
	mov	QWORD PTR [rbx+56], rcx

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$construct@VErrorInfo@Reader@Json@@AEBV123@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@AEBV345@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::construct<Json::Reader::ErrorInfo,Json::Reader::ErrorInfo const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::construct<Json::Reader::ErrorInfo>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

$LN8:
	sub	rsp, 40					; 00000028H

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 64					; 00000040H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx
	mov	QWORD PTR [rax+8], rcx
	mov	QWORD PTR [rax+16], rcx
	mov	QWORD PTR [rax+24], rcx
	mov	QWORD PTR [rax+32], rcx
	mov	QWORD PTR [rax+40], rcx
	mov	QWORD PTR [rax+48], rcx
	mov	QWORD PTR [rax+56], rcx
	lea	rcx, QWORD PTR [rax+24]

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	add	rsp, 40					; 00000028H

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	jmp	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
??$construct@VErrorInfo@Reader@Json@@$$V@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::construct<Json::Reader::ErrorInfo>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1><>, COMDAT

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 279  : 		}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@VErrorInfo@Reader@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1>::_Compressed_pair<std::allocator<Json::Reader::ErrorInfo>,std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0PEAVValue@Json@@@?$allocator@PEAPEAVValue@Json@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0PEAVValue@Json@@@?$allocator@PEAPEAVValue@Json@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z PROC ; std::allocator<Json::Value * *>::allocator<Json::Value * *><Json::Value *>, COMDAT

; 987  : 		}

	mov	rax, rcx
	ret	0
??$?0PEAVValue@Json@@@?$allocator@PEAPEAVValue@Json@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z ENDP ; std::allocator<Json::Value * *>::allocator<Json::Value * *><Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@AEAPEAPEAV12@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@AEAPEAPEAV12@@Z PROC ; std::addressof<Json::Value * *>, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@AEAPEAPEAV12@@Z ENDP ; std::addressof<Json::Value * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@PEAPEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAPEAVValue@Json@@@1@QEAPEAPEAVValue@Json@@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
??$destroy@PEAPEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAPEAVValue@Json@@@1@QEAPEAPEAVValue@Json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Value * *> >::destroy<Json::Value * *>, COMDAT

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	ret	0
??$destroy@PEAPEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAPEAVValue@Json@@@1@QEAPEAPEAVValue@Json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Value * *> >::destroy<Json::Value * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@PEAVValue@Json@@@std@@YAPEAPEAVValue@Json@@PEAPEAV12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@PEAVValue@Json@@@std@@YAPEAPEAVValue@Json@@PEAPEAV12@@Z PROC ; std::_Unfancy<Json::Value *>, COMDAT

; 346  : 	return (_Ptr);

	mov	rax, rcx

; 347  : 	}

	ret	0
??$_Unfancy@PEAVValue@Json@@@std@@YAPEAPEAVValue@Json@@PEAPEAV12@@Z ENDP ; std::_Unfancy<Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@PEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
??$destroy@PEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::destroy<Json::Value *>, COMDAT

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	ret	0
??$destroy@PEAVValue@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::destroy<Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::construct<Json::Value *,Json::Value *>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 8
	mov	rbx, r8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	rcx, QWORD PTR [rbx]
	mov	QWORD PTR [rax], rcx

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct@PEAVValue@Json@@PEAV12@@?$_Default_allocator_traits@V?$allocator@PEAVValue@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVValue@Json@@@1@QEAPEAVValue@Json@@$$QEAPEAV34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Value *> >::construct<Json::Value *,Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0VErrorInfo@Reader@Json@@@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0VErrorInfo@Reader@Json@@@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z PROC ; std::allocator<Json::Reader::ErrorInfo *>::allocator<Json::Reader::ErrorInfo *><Json::Reader::ErrorInfo>, COMDAT

; 987  : 		}

	mov	rax, rcx
	ret	0
??$?0VErrorInfo@Reader@Json@@@?$allocator@PEAVErrorInfo@Reader@Json@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z ENDP ; std::allocator<Json::Reader::ErrorInfo *>::allocator<Json::Reader::ErrorInfo *><Json::Reader::ErrorInfo>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@AEAPEAV123@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@AEAPEAV123@@Z PROC ; std::addressof<Json::Reader::ErrorInfo *>, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@AEAPEAV123@@Z ENDP ; std::addressof<Json::Reader::ErrorInfo *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@PEAVErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@1@QEAPEAVErrorInfo@Reader@Json@@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
??$destroy@PEAVErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@1@QEAPEAVErrorInfo@Reader@Json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo *> >::destroy<Json::Reader::ErrorInfo *>, COMDAT

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	ret	0
??$destroy@PEAVErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@1@QEAPEAVErrorInfo@Reader@Json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo *> >::destroy<Json::Reader::ErrorInfo *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z PROC ; std::_Uninitialized_copy<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *,std::allocator<Json::Reader::ErrorInfo *> >, COMDAT

; 209  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 220  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0PEAPEAV123@AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z ENDP ; std::_Uninitialized_copy<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *,std::allocator<Json::Reader::ErrorInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Idl_distance@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0@Z PROC ; std::_Idl_distance<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>, COMDAT

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));
; 976  : 	}

	ret	0
??$_Idl_distance@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0@Z ENDP ; std::_Idl_distance<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<Json::Reader::ErrorInfo * *,unsigned __int64,std::allocator<Json::Reader::ErrorInfo *> >, COMDAT

; 343  : 	{	// value-initialize _Count objects to raw _First, using _Al

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rdx*8]

; 343  : 	{	// value-initialize _Count objects to raw _First, using _Al

	mov	rdi, rcx

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 344  : 	return (_Uninitialized_value_construct_n1(_First, _Count, _Al,
; 345  : 		bool_constant<conjunction_v<_Use_memset_value_construct_t<_FwdIt>,
; 346  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>>{}));
; 347  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<Json::Reader::ErrorInfo * *,unsigned __int64,std::allocator<Json::Reader::ErrorInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Json::Reader::ErrorInfo *> >, COMDAT

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<
; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

	ret	0
??$_Destroy_range@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Json::Reader::ErrorInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@VErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
??$destroy@VErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z PROC ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::destroy<Json::Reader::ErrorInfo>, COMDAT

; 886  : 		{	// destroy object at _Ptr

	lea	rcx, QWORD PTR [rdx+24]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
??$destroy@VErrorInfo@Reader@Json@@@?$_Default_allocator_traits@V?$allocator@VErrorInfo@Reader@Json@@@std@@@std@@SAXAEAV?$allocator@VErrorInfo@Reader@Json@@@1@QEAVErrorInfo@Reader@Json@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Json::Reader::ErrorInfo> >::destroy<Json::Reader::ErrorInfo>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$ = 8
??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<64>, COMDAT

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 25   : 	size_t _Result = _Count * _Ty_size;

	mov	rax, rcx

; 26   : 	if (_Max_possible < _Count)

	mov	rdx, 288230376151711743			; 03ffffffffffffffH
	shl	rax, 6
	mov	r8, -1
	cmp	rcx, rdx
	cmova	rax, r8

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);
; 30   : 		}
; 31   : 
; 32   : 	return (_Result);
; 33   : 	}

	ret	0
??$_Get_size_of_n@$0EA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0VErrorInfo@Reader@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0VErrorInfo@Reader@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Json::Reader::ErrorInfo>, COMDAT

; 987  : 		}

	mov	rax, rcx
	ret	0
??$?0VErrorInfo@Reader@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VErrorInfo@Reader@Json@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Json::Reader::ErrorInfo>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 887  : 		_Ptr->~_Uty();
; 888  : 		}

	ret	0
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 8
_Ptr$ = 16
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>, COMDAT

; 1212 : 	{	// deallocate a plain pointer using an allocator, non-fancy pointers special case

	mov	rcx, rdx

; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	edx, 16
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 346  : 	return (_Ptr);

	mov	rax, rcx

; 347  : 	}

	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z
_TEXT	SEGMENT
__formal$dead$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

	mov	ecx, 16
	mov	rbx, r8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	movups	xmm0, XMMWORD PTR [rbx]
	movups	XMMWORD PTR [rax], xmm0

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@QEAU_Container_proxy@1@$$QEAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> > >, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$?0PEAVValue@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0PEAVValue@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Json::Value *>, COMDAT

; 987  : 		}

	mov	rax, rcx
	ret	0
??$?0PEAVValue@Json@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVValue@Json@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$dead$ = 16
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1><>, COMDAT

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 279  : 		}

	mov	rax, rcx
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVValue@Json@@@std@@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1>::_Compressed_pair<std::allocator<Json::Value *>,std::_Deque_val<std::_Deque_simple_types<Json::Value *> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
_Al$dead$ = 72
??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z PROC ; std::_Uninitialized_copy<Json::Value * * *,Json::Value * * *,std::allocator<Json::Value * *> >, COMDAT

; 209  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN22:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 220  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0PEAPEAPEAV12@AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z ENDP ; std::_Uninitialized_copy<Json::Value * * *,Json::Value * * *,std::allocator<Json::Value * *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
??$_Idl_distance@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0@Z PROC ; std::_Idl_distance<Json::Value * * *,Json::Value * * *>, COMDAT

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));
; 976  : 	}

	ret	0
??$_Idl_distance@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0@Z ENDP ; std::_Idl_distance<Json::Value * * *,Json::Value * * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Al$dead$ = 64
??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<Json::Value * * *,unsigned __int64,std::allocator<Json::Value * *> >, COMDAT

; 343  : 	{	// value-initialize _Count objects to raw _First, using _Al

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rdx*8]

; 343  : 	{	// value-initialize _Count objects to raw _First, using _Al

	mov	rdi, rcx

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 344  : 	return (_Uninitialized_value_construct_n1(_First, _Count, _Al,
; 345  : 		bool_constant<conjunction_v<_Use_memset_value_construct_t<_FwdIt>,
; 346  : 			_Uses_default_construct<_Alloc, decltype(_Unfancy(_First))>>>{}));
; 347  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<Json::Value * * *,unsigned __int64,std::allocator<Json::Value * *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z
_TEXT	SEGMENT
_First$dead$ = 8
_Last$dead$ = 16
_Al$dead$ = 24
??$_Destroy_range@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Json::Value * *> >, COMDAT

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<
; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

	ret	0
??$_Destroy_range@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Json::Value * *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@V?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@@std@@YAPEAV?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Deque_val<std::_Deque_simple_types<Json::Value *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Count$dead$ = 8
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 25   : 	size_t _Result = _Count * _Ty_size;
; 26   : 	if (_Max_possible < _Count)
; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);
; 30   : 		}
; 31   : 
; 32   : 	return (_Result);

	mov	eax, 16

; 33   : 	}

	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z PROC		; Json::Reader::ErrorInfo::ErrorInfo, COMDAT
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	movups	xmm0, XMMWORD PTR [rdx]
	mov	rbx, rdx
	mov	rdi, rcx
	movups	XMMWORD PTR [rcx], xmm0
	movsd	xmm1, QWORD PTR [rdx+16]
	add	rdx, 24
	movsd	QWORD PTR [rcx+16], xmm1
	add	rcx, 24
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR [rbx+56]
	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+56], rax
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0ErrorInfo@Reader@Json@@QEAA@AEBV012@@Z ENDP		; Json::Reader::ErrorInfo::ErrorInfo
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z PROC		; Json::Reader::ErrorInfo::`scalar deleting destructor', COMDAT
$LN10:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	ebx, edx
	add	rcx, 24
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	test	bl, 1
	je	SHORT $LN7@scalar
	mov	edx, 64					; 00000040H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN7@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GErrorInfo@Reader@Json@@QEAAPEAXI@Z ENDP		; Json::Reader::ErrorInfo::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 8
_Ptr$ = 16
_Count$ = 24
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 872  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 873  : 		_Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	shl	r8, 4
	mov	rcx, rdx
	mov	rdx, r8
	jmp	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax

; 685  : 		}

	mov	rax, rcx
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@VErrorInfo@Reader@Json@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >::_Deque_val<std::_Deque_simple_types<Json::Reader::ErrorInfo> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque
;	COMDAT ??0?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEAA@XZ PROC ; std::_Deque_val<std::_Deque_simple_types<Json::Value *> >::_Deque_val<std::_Deque_simple_types<Json::Value *> >, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 80   : 		: _Myproxy(nullptr)

	xor	eax, eax
	mov	QWORD PTR [rcx], rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\deque

; 680  : 		: _Map(),

	mov	QWORD PTR [rcx+8], rax

; 681  : 		_Mapsize(0),

	mov	QWORD PTR [rcx+16], rax

; 682  : 		_Myoff(0),

	mov	QWORD PTR [rcx+24], rax

; 683  : 		_Mysize(0)

	mov	QWORD PTR [rcx+32], rax

; 685  : 		}

	mov	rax, rcx
	ret	0
??0?$_Deque_val@U?$_Deque_simple_types@PEAVValue@Json@@@std@@@std@@QEAA@XZ ENDP ; std::_Deque_val<std::_Deque_simple_types<Json::Value *> >::_Deque_val<std::_Deque_simple_types<Json::Value *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@PEAVValue@Json@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@PEAVValue@Json@@@std@@QEAA@XZ PROC	; std::allocator<Json::Value *>::allocator<Json::Value *>, COMDAT

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@PEAVValue@Json@@@std@@QEAA@XZ ENDP	; std::allocator<Json::Value *>::allocator<Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@VErrorInfo@Reader@Json@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@VErrorInfo@Reader@Json@@@std@@QEAA@XZ PROC ; std::allocator<Json::Reader::ErrorInfo>::allocator<Json::Reader::ErrorInfo>, COMDAT

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

	mov	rax, rcx
	ret	0
??0?$allocator@VErrorInfo@Reader@Json@@@std@@QEAA@XZ ENDP ; std::allocator<Json::Reader::ErrorInfo>::allocator<Json::Reader::ErrorInfo>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@AEBVErrorInfo@Reader@Json@@@std@@YAAEBVErrorInfo@Reader@Json@@AEBV123@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBVErrorInfo@Reader@Json@@@std@@YAAEBVErrorInfo@Reader@Json@@AEBV123@@Z PROC ; std::forward<Json::Reader::ErrorInfo const &>, COMDAT

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1575 : 	}

	ret	0
??$forward@AEBVErrorInfo@Reader@Json@@@std@@YAAEBVErrorInfo@Reader@Json@@AEBV123@@Z ENDP ; std::forward<Json::Reader::ErrorInfo const &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@PEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@PEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z PROC ; std::forward<Json::Value *>, COMDAT

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1575 : 	}

	ret	0
??$forward@PEAVValue@Json@@@std@@YA$$QEAPEAVValue@Json@@AEAPEAV12@@Z ENDP ; std::forward<Json::Value *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Get_unwrapped@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z PROC ; std::_Get_unwrapped<Json::Reader::ErrorInfo *>, COMDAT

; 663  : 	return (_Ptr);

	mov	rax, rcx

; 664  : 	}

	ret	0
??$_Get_unwrapped@PEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z ENDP ; std::_Get_unwrapped<Json::Reader::ErrorInfo *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
__formal$dead$ = 24
??$_Idl_distance1@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>, COMDAT

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 969  : 	}

	ret	0
??$_Idl_distance1@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YA_JAEBQEAPEAVErrorInfo@Reader@Json@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@PEAVErrorInfo@Reader@Json@@_J$0A@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@_J@Z
_TEXT	SEGMENT
_Src$ = 8
__formal$dead$ = 16
??$_Get_unwrapped_n@PEAVErrorInfo@Reader@Json@@_J$0A@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@_J@Z PROC ; std::_Get_unwrapped_n<Json::Reader::ErrorInfo *,__int64,0>, COMDAT

; 809  : 	return (_Src);

	mov	rax, rcx

; 810  : 	}

	ret	0
??$_Get_unwrapped_n@PEAVErrorInfo@Reader@Json@@_J$0A@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@_J@Z ENDP ; std::_Get_unwrapped_n<Json::Reader::ErrorInfo *,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_copy_cat@PEAVErrorInfo@Reader@Json@@PEAV123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVErrorInfo@Reader@Json@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??$_Ptr_copy_cat@PEAVErrorInfo@Reader@Json@@PEAV123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVErrorInfo@Reader@Json@@0@Z PROC ; std::_Ptr_copy_cat<Json::Reader::ErrorInfo *,Json::Reader::ErrorInfo *>, COMDAT

; 1070 : 	return {};

	mov	rax, rcx

; 1071 : 	}

	ret	0
??$_Ptr_copy_cat@PEAVErrorInfo@Reader@Json@@PEAV123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAVErrorInfo@Reader@Json@@0@Z ENDP ; std::_Ptr_copy_cat<Json::Reader::ErrorInfo *,Json::Reader::ErrorInfo *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
__formal$dead$ = 88
??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<Json::Reader::ErrorInfo *,Json::Reader::ErrorInfo *,std::allocator<Json::Reader::ErrorInfo *> >, COMDAT

; 201  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 203  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy_al_unchecked@PEAVErrorInfo@Reader@Json@@PEAV123@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@00AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<Json::Reader::ErrorInfo *,Json::Reader::ErrorInfo *,std::allocator<Json::Reader::ErrorInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@PEAVErrorInfo@Reader@Json@@@std@@YAXAEAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@PEAVErrorInfo@Reader@Json@@@std@@YAXAEAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z PROC ; std::_Seek_wrapped<Json::Reader::ErrorInfo *>, COMDAT

; 872  : 	_It = _UIt;

	mov	QWORD PTR [rcx], rdx

; 873  : 	}

	ret	0
??$_Seek_wrapped@PEAVErrorInfo@Reader@Json@@@std@@YAXAEAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@@Z ENDP ; std::_Seek_wrapped<Json::Reader::ErrorInfo *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
__formal$dead$ = 64
__formal$dead$ = 72
??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_value_construct_n1<Json::Reader::ErrorInfo * *,unsigned __int64,std::allocator<Json::Reader::ErrorInfo *> >, COMDAT

; 335  : 	{	// value-initialize _Count objects to raw _First, using default _Alloc construct, all-bits-zero type

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rdx*8]
	mov	rdi, rcx

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 337  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n1@PEAPEAVErrorInfo@Reader@Json@@_KV?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@_KAEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_value_construct_n1<Json::Reader::ErrorInfo * *,unsigned __int64,std::allocator<Json::Reader::ErrorInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Destroy_range1@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<Json::Reader::ErrorInfo *> >, COMDAT

; 1146 : 		// nothing to do
; 1147 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@PEAVErrorInfo@Reader@Json@@@std@@@std@@YAXPEAPEAVErrorInfo@Reader@Json@@0AEAV?$allocator@PEAVErrorInfo@Reader@Json@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<Json::Reader::ErrorInfo *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, rcx

; 1575 : 	}

	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Get_unwrapped@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z PROC ; std::_Get_unwrapped<Json::Value * *>, COMDAT

; 663  : 	return (_Ptr);

	mov	rax, rcx

; 664  : 	}

	ret	0
??$_Get_unwrapped@PEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z ENDP ; std::_Get_unwrapped<Json::Value * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 8
_Last$ = 16
__formal$dead$ = 24
??$_Idl_distance1@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<Json::Value * * *,Json::Value * * *>, COMDAT

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

	mov	rax, QWORD PTR [rdx]
	sub	rax, QWORD PTR [rcx]
	sar	rax, 3

; 969  : 	}

	ret	0
??$_Idl_distance1@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YA_JAEBQEAPEAPEAVValue@Json@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<Json::Value * * *,Json::Value * * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@PEAPEAVValue@Json@@_J$0A@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@_J@Z
_TEXT	SEGMENT
_Src$ = 8
__formal$dead$ = 16
??$_Get_unwrapped_n@PEAPEAVValue@Json@@_J$0A@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@_J@Z PROC ; std::_Get_unwrapped_n<Json::Value * *,__int64,0>, COMDAT

; 809  : 	return (_Src);

	mov	rax, rcx

; 810  : 	}

	ret	0
??$_Get_unwrapped_n@PEAPEAVValue@Json@@_J$0A@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@_J@Z ENDP ; std::_Get_unwrapped_n<Json::Value * *,__int64,0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_copy_cat@PEAPEAVValue@Json@@PEAPEAV12@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAPEAVValue@Json@@0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
??$_Ptr_copy_cat@PEAPEAVValue@Json@@PEAPEAV12@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAPEAVValue@Json@@0@Z PROC ; std::_Ptr_copy_cat<Json::Value * *,Json::Value * *>, COMDAT

; 1070 : 	return {};

	mov	rax, rcx

; 1071 : 	}

	ret	0
??$_Ptr_copy_cat@PEAPEAVValue@Json@@PEAPEAV12@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAPEAPEAVValue@Json@@0@Z ENDP ; std::_Ptr_copy_cat<Json::Value * *,Json::Value * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$dead$ = 72
__formal$dead$ = 80
__formal$dead$ = 88
??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<Json::Value * *,Json::Value * *,std::allocator<Json::Value * *> >, COMDAT

; 201  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility

; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory

; 203  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_copy_al_unchecked@PEAPEAVValue@Json@@PEAPEAV12@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@00AEAV?$allocator@PEAPEAVValue@Json@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<Json::Value * *,Json::Value * *,std::allocator<Json::Value * *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@PEAPEAVValue@Json@@@std@@YAXAEAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z
_TEXT	SEGMENT
_It$ = 8
_UIt$ = 16
??$_Seek_wrapped@PEAPEAVValue@Json@@@std@@YAXAEAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z PROC ; std::_Seek_wrapped<Json::Value * *>, COMDAT

; 872  : 	_It = _UIt;

	mov	QWORD PTR [rcx], rdx

; 873  : 	}

	ret	0
??$_Seek_wrapped@PEAPEAVValue@Json@@@std@@YAXAEAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@@Z ENDP ; std::_Seek_wrapped<Json::Value * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
__formal$dead$ = 64
__formal$dead$ = 72
??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_value_construct_n1<Json::Value * * *,unsigned __int64,std::allocator<Json::Value * *> >, COMDAT

; 335  : 	{	// value-initialize _Count objects to raw _First, using default _Alloc construct, all-bits-zero type

$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rbx, QWORD PTR [rdx*8]
	mov	rdi, rcx

; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rbx
	xor	edx, edx
	call	memset

; 336  : 	return (_Zero_range(_First, _First + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 337  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Uninitialized_value_construct_n1@PEAPEAPEAVValue@Json@@_KV?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@_KAEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_value_construct_n1<Json::Value * * *,unsigned __int64,std::allocator<Json::Value * *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$dead$ = 8
__formal$dead$ = 16
__formal$dead$ = 24
__formal$dead$ = 32
??$_Destroy_range1@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<Json::Value * *> >, COMDAT

; 1146 : 		// nothing to do
; 1147 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@PEAPEAVValue@Json@@@std@@@std@@YAXPEAPEAPEAVValue@Json@@0AEAV?$allocator@PEAPEAVValue@Json@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<Json::Value * *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z PROC ; std::_Copy_memmove<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>, COMDAT

; 2398 : 	{	// implement copy-like function as memmove

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 2399 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));
; 2400 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));
; 2401 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));
; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 2405 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@@std@@YAPEAPEAVErrorInfo@Reader@Json@@PEAPEAV123@00@Z ENDP ; std::_Copy_memmove<Json::Reader::ErrorInfo * *,Json::Reader::ErrorInfo * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z PROC ; std::_Zero_range<Json::Reader::ErrorInfo * *>, COMDAT

; 310  : 	{	// fill [_First, _Last) with zeroes

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 311  : 	char * const _First_ch = reinterpret_cast<char *>(_First);
; 312  : 	char * const _Last_ch = reinterpret_cast<char *>(_Last);
; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rdx
	mov	rbx, rdx
	sub	r8, rcx
	xor	edx, edx
	call	memset

; 314  : 	return (_Last);

	mov	rax, rbx

; 315  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Zero_range@PEAPEAVErrorInfo@Reader@Json@@@std@@YAPEAPEAVErrorInfo@Reader@Json@@QEAPEAV123@0@Z ENDP ; std::_Zero_range<Json::Reader::ErrorInfo * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z PROC ; std::_Copy_memmove<Json::Value * * *,Json::Value * * *>, COMDAT

; 2398 : 	{	// implement copy-like function as memmove

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, r8

; 2399 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));
; 2400 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));
; 2401 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));
; 2402 : 	const auto _Count = static_cast<size_t>(_Last_ch - _First_ch);

	sub	rbx, rcx

; 2403 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	rdx, rcx
	mov	r8, rbx
	mov	rcx, rdi
	call	memmove

; 2404 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	lea	rax, QWORD PTR [rbx+rdi]

; 2405 : 	}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??$_Copy_memmove@PEAPEAPEAVValue@Json@@PEAPEAPEAV12@@std@@YAPEAPEAPEAVValue@Json@@PEAPEAPEAV12@00@Z ENDP ; std::_Copy_memmove<Json::Value * * *,Json::Value * * *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z PROC ; std::_Zero_range<Json::Value * * *>, COMDAT

; 310  : 	{	// fill [_First, _Last) with zeroes

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 311  : 	char * const _First_ch = reinterpret_cast<char *>(_First);
; 312  : 	char * const _Last_ch = reinterpret_cast<char *>(_Last);
; 313  : 	_CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

	mov	r8, rdx
	mov	rbx, rdx
	sub	r8, rcx
	xor	edx, edx
	call	memset

; 314  : 	return (_Last);

	mov	rax, rbx

; 315  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$_Zero_range@PEAPEAPEAVValue@Json@@@std@@YAPEAPEAPEAVValue@Json@@QEAPEAPEAV12@0@Z ENDP ; std::_Zero_range<Json::Value * * *>
_TEXT	ENDS
END
