; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

include listing.inc


PUBLIC	??_C@_05LAPONLG@false@				; `string'
PUBLIC	??_C@_04LOAJBDKD@true@				; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_C@_06ECBCCLMB@?$CF?$CD?416g@			; `string'
PUBLIC	??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@	; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC@				; `string'
PUBLIC	??_C@_02MCKKLHBJ@?2?$CC@			; `string'
PUBLIC	??_C@_02HDBGODGB@?2?2@				; `string'
PUBLIC	??_C@_02DCNDPIBM@?2b@				; `string'
PUBLIC	??_C@_02FGLPDNBI@?2f@				; `string'
PUBLIC	??_C@_02JOGGLHBA@?2n@				; `string'
PUBLIC	??_C@_02HIBBOKEN@?2r@				; `string'
PUBLIC	??_C@_02COELENML@?2t@				; `string'
PUBLIC	??_C@_02DHFAHMIK@?2u@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_04MLLLIHIP@null@				; `string'
PUBLIC	??_C@_01OHGJGJJP@?$FL@				; `string'
PUBLIC	??_C@_01IHBHIGKO@?0@				; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN@				; `string'
PUBLIC	??_C@_01HCONENDN@?$HL@				; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3@				; `string'
PUBLIC	??_C@_01CELHOKLL@?$HN@				; `string'
PUBLIC	??_C@_02MCILKGOH@?$HL?$HN@			; `string'
PUBLIC	??_C@_03MCPBMLDJ@?5?3?5@			; `string'
PUBLIC	??_C@_02GPECMEKF@?$FL?$FN@			; `string'
PUBLIC	??_C@_02PFNDMDBO@?$FL?5@			; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5@				; `string'
PUBLIC	??_C@_02DHOGEDBE@?5?$FN@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7@				; `string'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R2StyledWriter@Json@@8			; Json::StyledWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FastWriter@Json@@8		; Json::FastWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7Writer@Json@@6B@				; Json::Writer::`vftable'
PUBLIC	??_R2FastWriter@Json@@8				; Json::FastWriter::`RTTI Base Class Array'
PUBLIC	??_R3StyledWriter@Json@@8			; Json::StyledWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4StyledWriter@Json@@6B@			; Json::StyledWriter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFastWriter@Json@@@8			; Json::FastWriter `RTTI Type Descriptor'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7StyledWriter@Json@@6B@			; Json::StyledWriter::`vftable'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3FastWriter@Json@@8				; Json::FastWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_7FastWriter@Json@@6B@			; Json::FastWriter::`vftable'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4FastWriter@Json@@6B@			; Json::FastWriter::`RTTI Complete Object Locator'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3Writer@Json@@8				; Json::Writer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVStyledWriter@Json@@@8			; Json::StyledWriter `RTTI Type Descriptor'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_R2Writer@Json@@8				; Json::Writer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Writer@Json@@8			; Json::Writer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Writer@Json@@6B@				; Json::Writer::`RTTI Complete Object Locator'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVWriter@Json@@@8				; Json::Writer `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@StyledWriter@Json@@8		; Json::StyledWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
EXTRN	__imp_?rdstate@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHH@Z:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHHH@Z:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	__imp_?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	__imp_?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	__imp_?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z:PROC
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	__imp_?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	__imp_?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	__imp_?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	__imp_?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	__imp_?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_strpbrk:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StyledWriter@Json@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StyledWriter@Json@@8 DD imagerel ??_R0?AVStyledWriter@Json@@@8 ; Json::StyledWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3StyledWriter@Json@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVWriter@Json@@@8
data$r	SEGMENT
??_R0?AVWriter@Json@@@8 DQ FLAT:??_7type_info@@6B@	; Json::Writer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVWriter@Json@@', 00H
data$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_R4Writer@Json@@6B@
rdata$r	SEGMENT
??_R4Writer@Json@@6B@ DD 01H				; Json::Writer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVWriter@Json@@@8
	DD	imagerel ??_R3Writer@Json@@8
	DD	imagerel ??_R4Writer@Json@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Writer@Json@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Writer@Json@@8 DD imagerel ??_R0?AVWriter@Json@@@8 ; Json::Writer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Writer@Json@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2Writer@Json@@8
rdata$r	SEGMENT
??_R2Writer@Json@@8 DD imagerel ??_R1A@?0A@EA@Writer@Json@@8 ; Json::Writer::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_R0?AVStyledWriter@Json@@@8
data$r	SEGMENT
??_R0?AVStyledWriter@Json@@@8 DQ FLAT:??_7type_info@@6B@ ; Json::StyledWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVStyledWriter@Json@@', 00H
data$r	ENDS
;	COMDAT ??_R3Writer@Json@@8
rdata$r	SEGMENT
??_R3Writer@Json@@8 DD 00H				; Json::Writer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Writer@Json@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R4FastWriter@Json@@6B@
rdata$r	SEGMENT
??_R4FastWriter@Json@@6B@ DD 01H			; Json::FastWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFastWriter@Json@@@8
	DD	imagerel ??_R3FastWriter@Json@@8
	DD	imagerel ??_R4FastWriter@Json@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7FastWriter@Json@@6B@
CONST	SEGMENT
??_7FastWriter@Json@@6B@ DQ FLAT:??_R4FastWriter@Json@@6B@ ; Json::FastWriter::`vftable'
	DQ	FLAT:??_EFastWriter@Json@@UEAAPEAXI@Z
	DQ	FLAT:?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3FastWriter@Json@@8
rdata$r	SEGMENT
??_R3FastWriter@Json@@8 DD 00H				; Json::FastWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FastWriter@Json@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_7StyledWriter@Json@@6B@
CONST	SEGMENT
??_7StyledWriter@Json@@6B@ DQ FLAT:??_R4StyledWriter@Json@@6B@ ; Json::StyledWriter::`vftable'
	DQ	FLAT:??_EStyledWriter@Json@@UEAAPEAXI@Z
	DQ	FLAT:?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVFastWriter@Json@@@8
data$r	SEGMENT
??_R0?AVFastWriter@Json@@@8 DQ FLAT:??_7type_info@@6B@	; Json::FastWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFastWriter@Json@@', 00H
data$r	ENDS
;	COMDAT ??_R4StyledWriter@Json@@6B@
rdata$r	SEGMENT
??_R4StyledWriter@Json@@6B@ DD 01H			; Json::StyledWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVStyledWriter@Json@@@8
	DD	imagerel ??_R3StyledWriter@Json@@8
	DD	imagerel ??_R4StyledWriter@Json@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R3StyledWriter@Json@@8
rdata$r	SEGMENT
??_R3StyledWriter@Json@@8 DD 00H			; Json::StyledWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2StyledWriter@Json@@8
rdata$r	ENDS
;	COMDAT ??_R2FastWriter@Json@@8
rdata$r	SEGMENT
??_R2FastWriter@Json@@8 DD imagerel ??_R1A@?0A@EA@FastWriter@Json@@8 ; Json::FastWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Writer@Json@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7Writer@Json@@6B@
CONST	SEGMENT
??_7Writer@Json@@6B@ DQ FLAT:??_R4Writer@Json@@6B@	; Json::Writer::`vftable'
	DQ	FLAT:??_EWriter@Json@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@FastWriter@Json@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FastWriter@Json@@8 DD imagerel ??_R0?AVFastWriter@Json@@@8 ; Json::FastWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FastWriter@Json@@8
rdata$r	ENDS
;	COMDAT ??_R2StyledWriter@Json@@8
rdata$r	SEGMENT
??_R2StyledWriter@Json@@8 DD imagerel ??_R1A@?0A@EA@StyledWriter@Json@@8 ; Json::StyledWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Writer@Json@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	088H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHOGEDBE@?5?$FN@
CONST	SEGMENT
??_C@_02DHOGEDBE@?5?$FN@ DB ' ]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PFNDMDBO@?$FL?5@
CONST	SEGMENT
??_C@_02PFNDMDBO@?$FL?5@ DB '[ ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GPECMEKF@?$FL?$FN@
CONST	SEGMENT
??_C@_02GPECMEKF@?$FL?$FN@ DB '[]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCPBMLDJ@?5?3?5@
CONST	SEGMENT
??_C@_03MCPBMLDJ@?5?3?5@ DB ' : ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCILKGOH@?$HL?$HN@
CONST	SEGMENT
??_C@_02MCILKGOH@?$HL?$HN@ DB '{}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN@
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN@ DB '}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HCONENDN@?$HL@
CONST	SEGMENT
??_C@_01HCONENDN@?$HL@ DB '{', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLLIHIP@null@
CONST	SEGMENT
??_C@_04MLLLIHIP@null@ DB 'null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHFAHMIK@?2u@
CONST	SEGMENT
??_C@_02DHFAHMIK@?2u@ DB '\u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02COELENML@?2t@
CONST	SEGMENT
??_C@_02COELENML@?2t@ DB '\t', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIBBOKEN@?2r@
CONST	SEGMENT
??_C@_02HIBBOKEN@?2r@ DB '\r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JOGGLHBA@?2n@
CONST	SEGMENT
??_C@_02JOGGLHBA@?2n@ DB '\n', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGLPDNBI@?2f@
CONST	SEGMENT
??_C@_02FGLPDNBI@?2f@ DB '\f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DCNDPIBM@?2b@
CONST	SEGMENT
??_C@_02DCNDPIBM@?2b@ DB '\b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HDBGODGB@?2?2@
CONST	SEGMENT
??_C@_02HDBGODGB@?2?2@ DB '\\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCKKLHBJ@?2?$CC@
CONST	SEGMENT
??_C@_02MCKKLHBJ@?2?$CC@ DB '\"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@
CONST	SEGMENT
??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@ DB '"\', 08H, 0cH, 0aH, 0dH, 09H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06ECBCCLMB@?$CF?$CD?416g@
CONST	SEGMENT
??_C@_06ECBCCLMB@?$CF?$CD?416g@ DB '%#.16g', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true@
CONST	SEGMENT
??_C@_04LOAJBDKD@true@ DB 'true', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false@
CONST	SEGMENT
??_C@_05LAPONLG@false@ DB 'false', 00H			; `string'
CONST	ENDS
PUBLIC	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
PUBLIC	??0?$_Fillobj@D@std@@QEAA@D@Z			; std::_Fillobj<char>::_Fillobj<char>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z	; std::_Max_value<char *>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
PUBLIC	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
PUBLIC	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z	; std::setfill<char>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
PUBLIC	?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
PUBLIC	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
PUBLIC	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
PUBLIC	?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
PUBLIC	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
PUBLIC	?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::hasCommentForValue
PUBLIC	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine
PUBLIC	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue
PUBLIC	?unindent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::unindent
PUBLIC	?indent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::indent
PUBLIC	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
PUBLIC	?writeIndent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::writeIndent
PUBLIC	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
PUBLIC	?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::isMultineArray
PUBLIC	?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeArrayValue
PUBLIC	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
PUBLIC	?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ; Json::StyledWriter::write
PUBLIC	??0StyledWriter@Json@@QEAA@XZ			; Json::StyledWriter::StyledWriter
PUBLIC	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue
PUBLIC	?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ; Json::FastWriter::write
PUBLIC	??0Writer@Json@@QEAA@XZ				; Json::Writer::Writer
PUBLIC	??0FastWriter@Json@@QEAA@XZ			; Json::FastWriter::FastWriter
PUBLIC	??_GWriter@Json@@UEAAPEAXI@Z			; Json::Writer::`scalar deleting destructor'
PUBLIC	??1Writer@Json@@UEAA@XZ				; Json::Writer::~Writer
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Json::valueToString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
PUBLIC	??_GStyledWriter@Json@@UEAAPEAXI@Z		; Json::StyledWriter::`scalar deleting destructor'
PUBLIC	??1StyledWriter@Json@@UEAA@XZ			; Json::StyledWriter::~StyledWriter
PUBLIC	??_GFastWriter@Json@@UEAAPEAXI@Z		; Json::FastWriter::`scalar deleting destructor'
PUBLIC	??1FastWriter@Json@@UEAA@XZ			; Json::FastWriter::~FastWriter
PUBLIC	?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z	; std::uppercase
PUBLIC	?hex@std@@YAAEAVios_base@1@AEAV21@@Z		; std::hex
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?not_eof@?$char_traits@D@std@@SAHAEBH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHAEBD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?to_char_type@?$char_traits@D@std@@SADAEBH@Z	; std::char_traits<char>::to_char_type
PUBLIC	sprintf_s
PUBLIC	_vsprintf_s_l
PUBLIC	__local_stdio_printf_options
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_EFastWriter@Json@@UEAAPEAXI@Z:PROC		; Json::FastWriter::`vector deleting destructor'
EXTRN	??_EWriter@Json@@UEAAPEAXI@Z:PROC		; Json::Writer::`vector deleting destructor'
EXTRN	??_EStyledWriter@Json@@UEAAPEAXI@Z:PROC		; Json::StyledWriter::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel $LN108
	DD	imagerel $LN108+466
	DD	imagerel $unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD imagerel ?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	imagerel ?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+56
	DD	imagerel $unwind$?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z DD imagerel $LN7
	DD	imagerel $LN7+53
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD imagerel $LN4
	DD	imagerel $LN4+38
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN106
	DD	imagerel $LN106+451
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+56
	DD	imagerel $unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN10
	DD	imagerel $LN10+44
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN10
	DD	imagerel $LN10+45
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+29
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN12
	DD	imagerel $LN12+58
	DD	imagerel $unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN27
	DD	imagerel $LN27+159
	DD	imagerel $unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD imagerel $LN26
	DD	imagerel $LN26+128
	DD	imagerel $unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN28
	DD	imagerel $LN28+126
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN15
	DD	imagerel $LN15+71
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN10
	DD	imagerel $LN10+141
	DD	imagerel $unwind$?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+29
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+52
	DD	imagerel $unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+146
	DD	imagerel $unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN28
	DD	imagerel $LN28+157
	DD	imagerel $unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN60
	DD	imagerel $LN60+179
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN60+179
	DD	imagerel $LN60+191
	DD	imagerel $chain$0$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN60+191
	DD	imagerel $LN60+347
	DD	imagerel $chain$1$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN60+347
	DD	imagerel $LN60+407
	DD	imagerel $chain$2$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN60+407
	DD	imagerel $LN60+429
	DD	imagerel $chain$3$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN38
	DD	imagerel $LN38+132
	DD	imagerel $unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN45
	DD	imagerel $LN45+326
	DD	imagerel $unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN32
	DD	imagerel $LN32+232
	DD	imagerel $unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN19
	DD	imagerel $LN19+193
	DD	imagerel $unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN31
	DD	imagerel $LN31+175
	DD	imagerel $unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN8
	DD	imagerel $LN8+67
	DD	imagerel $unwind$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+103
	DD	imagerel $unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD imagerel $LN11
	DD	imagerel $LN11+73
	DD	imagerel $unwind$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD imagerel $LN11
	DD	imagerel $LN11+73
	DD	imagerel $unwind$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+49
	DD	imagerel $unwind$?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+30
	DD	imagerel $unwind$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD imagerel $LN16
	DD	imagerel $LN16+188
	DD	imagerel $unwind$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
	DD	imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN49
	DD	imagerel $LN49+358
	DD	imagerel $unwind$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN24
	DD	imagerel $LN24+146
	DD	imagerel $unwind$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unindent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$?unindent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?indent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+93
	DD	imagerel $unwind$?indent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN9
	DD	imagerel $LN9+120
	DD	imagerel $unwind$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeIndent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+96
	DD	imagerel $unwind$?writeIndent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD imagerel $LN167
	DD	imagerel $LN167+492
	DD	imagerel $unwind$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN96
	DD	imagerel $LN96+876
	DD	imagerel $unwind$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN106
	DD	imagerel $LN106+1180
	DD	imagerel $unwind$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0StyledWriter@Json@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+69
	DD	imagerel $unwind$??0StyledWriter@Json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN127
	DD	imagerel $LN127+984
	DD	imagerel $unwind$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+108
	DD	imagerel $unwind$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FastWriter@Json@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+41
	DD	imagerel $unwind$??0FastWriter@Json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GWriter@Json@@UEAAPEAXI@Z DD imagerel $LN9
	DD	imagerel $LN9+43
	DD	imagerel $unwind$??_GWriter@Json@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+95
	DD	imagerel $unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel $LN111
	DD	imagerel $LN111+1177
	DD	imagerel $unwind$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+41
	DD	imagerel $unwind$?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD imagerel $LN7
	DD	imagerel $LN7+49
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD imagerel $LN28
	DD	imagerel $LN28+211
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel $LN15
	DD	imagerel $LN15+123
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD imagerel $LN17
	DD	imagerel $LN17+150
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GStyledWriter@Json@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+94
	DD	imagerel $unwind$??_GStyledWriter@Json@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1StyledWriter@Json@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+62
	DD	imagerel $unwind$??1StyledWriter@Json@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GFastWriter@Json@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+76
	DD	imagerel $unwind$??_GFastWriter@Json@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1FastWriter@Json@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+44
	DD	imagerel $unwind$??1FastWriter@Json@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN6
	DD	imagerel $LN6+88
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$_vsprintf_s_l
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1FastWriter@Json@@UEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GFastWriter@Json@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1StyledWriter@Json@@UEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GStyledWriter@Json@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+141
	DD	0ffffffffH
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+157
	DD	00H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+176
	DD	01H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+241
	DD	02H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+341
	DD	00H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+354
	DD	02H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+525
	DD	03H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+558
	DD	04H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+632
	DD	05H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+740
	DD	06H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+855
	DD	05H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+866
	DD	07H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+952
	DD	02H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+1005
	DD	0ffffffffH
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+1060
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	02H
	DD	imagerel ?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	03H
	DD	imagerel ?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	02H
	DD	imagerel ?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	05H
	DD	imagerel ?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	05H
	DD	imagerel ?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 019930522H
	DD	08H
	DD	imagerel $stateUnwindMap$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	00H
	DD	00H
	DD	0fH
	DD	imagerel $ip2state$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	0130H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 0b3c19H
	DD	03e342bH
	DD	034011bH
	DD	0e00af00cH
	DD	0c006d008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	019aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GWriter@Json@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FastWriter@Json@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+104
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+134
	DD	00H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+147
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+181
	DD	01H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+194
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+229
	DD	02H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+242
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+269
	DD	03H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+282
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+334
	DD	04H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+348
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+546
	DD	06H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+750
	DD	07H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+763
	DD	06H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+903
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+952
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	08H
	DD	imagerel $stateUnwindMap$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	010H
	DD	imagerel $ip2state$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	040H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 0b3619H
	DD	01c3428H
	DD	0120118H
	DD	0e00af00cH
	DD	0c006d008H
	DD	060037004H
	DD	05002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0StyledWriter@Json@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+98
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+118
	DD	00H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+135
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+169
	DD	01H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+199
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+233
	DD	02H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+263
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+298
	DD	03H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+328
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+355
	DD	04H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+385
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+437
	DD	05H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+468
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+511
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+557
	DD	07H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+588
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+606
	DD	08H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+619
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+734
	DD	09H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+746
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+933
	DD	09H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+945
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1079
	DD	0aH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1092
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1118
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	019H
	DD	imagerel $ip2state$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 083019H
	DD	0183422H
	DD	0f008f212H
	DD	07004e006H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+81
	DD	0ffffffffH
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+102
	DD	00H
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+119
	DD	0ffffffffH
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+171
	DD	01H
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+258
	DD	0ffffffffH
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+638
	DD	03H
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+725
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0a3019H
	DD	0183421H
	DD	0f00cd210H
	DD	0d008e00aH
	DD	07004c006H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	062H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD imagerel ?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z+279
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD 0a2111H
	DD	0113421H
	DD	0f00c7210H
	DD	0d008e00aH
	DD	07004c006H
	DD	050026003H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeIndent@StyledWriter@Json@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?indent@StyledWriter@Json@@AEAAXXZ DD imagerel ?indent@StyledWriter@Json@@AEAAXXZ+45
	DD	0ffffffffH
	DD	imagerel ?indent@StyledWriter@Json@@AEAAXXZ+58
	DD	00H
	DD	imagerel ?indent@StyledWriter@Json@@AEAAXXZ+82
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?indent@StyledWriter@Json@@AEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?indent@StyledWriter@Json@@AEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?indent@StyledWriter@Json@@AEAAXXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?indent@StyledWriter@Json@@AEAAXXZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?indent@StyledWriter@Json@@AEAAXXZ DD 021e19H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?indent@StyledWriter@Json@@AEAAXXZ
	DD	04aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unindent@StyledWriter@Json@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+55
	DD	0ffffffffH
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+71
	DD	00H
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+84
	DD	01H
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+122
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 021e19H
	DD	03002d206H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+77
	DD	0ffffffffH
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+93
	DD	00H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+111
	DD	01H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+150
	DD	02H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+220
	DD	0ffffffffH
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+261
	DD	03H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+277
	DD	04H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+289
	DD	03H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+320
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	05H
	DD	imagerel $stateUnwindMap$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 052c19H
	DD	016341aH
	DD	0120109H
	DD	07002H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD imagerel ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z+73
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 082011H
	DD	0c5420H
	DD	0b341bH
	DD	0e009520dH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ DD imagerel ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ+23
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ DD 041419H
	DD	083414H
	DD	070025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ+155
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	030H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 041411H
	DD	0c3414H
	DD	070027206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z+57
	DD	0ffffffffH
	DD	imagerel ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z+88
	DD	00H
	DD	imagerel ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z+138
	DD	01H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 041d11H
	DD	09341dH
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 081401H
	DD	04e414H
	DD	03740fH
	DD	02640aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 0a1801H
	DD	067418H
	DD	056418H
	DD	045418H
	DD	033418H
	DD	0e016f018H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 021H
	DD	imagerel $LN60
	DD	imagerel $LN60+179
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 021H
	DD	imagerel $LN60+179
	DD	imagerel $LN60+191
	DD	imagerel $chain$0$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 020521H
	DD	0be405H
	DD	imagerel $LN60+179
	DD	imagerel $LN60+191
	DD	imagerel $chain$0$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 020521H
	DD	0ac405H
	DD	imagerel $LN60
	DD	imagerel $LN60+179
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 081001H
	DD	0c3410H
	DD	0f00c3210H
	DD	07008d00aH
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ+86
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+31
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+61
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 020f19H
	DD	030025206H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+53
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+88
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 041811H
	DD	093418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ+139
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	028H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 041811H
	DD	083418H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	05H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010d19H
	DD	06204H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+113
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+158
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+235
	DD	02H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+346
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+387
	DD	04H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+406
	DD	05H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+430
	DD	0ffffffffH
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+35
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	04H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 081f19H
	DD	0f341fH
	DD	0f00d7211H
	DD	0c009e00bH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+105
	DD	0ffffffffH
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+150
	DD	00H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+230
	DD	02H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+315
	DD	01H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+340
	DD	02H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+395
	DD	01H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+414
	DD	04H
	DD	imagerel ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z+441
	DD	05H
	DD	imagerel ?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA+35
	DD	03H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	imagerel __imp___std_terminate
	DD	04H
	DD	imagerel __imp___std_terminate
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	01H
	DD	imagerel $tryMap$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	09H
	DD	imagerel $ip2state$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z DD 081f19H
	DD	0f341fH
	DD	0f00d7211H
	DD	0c009e00bH
	DD	060067007H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
xdata	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$dead$ = 88
_ArgList$ = 96
_vsprintf_s_l PROC					; COMDAT

; 1493 : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r8
	mov	rdi, rdx
	mov	rsi, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

	call	__local_stdio_printf_options
	mov	r9, QWORD PTR _ArgList$[rsp]
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r9
	mov	rdx, rsi
	mov	r9, rbx
	mov	QWORD PTR [rsp+32], 0
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;
; 1499 : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	ecx, -1
	mov	rsi, QWORD PTR [rsp+72]
	test	eax, eax
	cmovs	eax, ecx
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
sprintf_s PROC						; COMDAT

; 1834 :     {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rsi, r8

; 1835 :         int _Result;
; 1836 :         va_list _ArgList;
; 1837 :         __crt_va_start(_ArgList, _Format);

	lea	rbp, QWORD PTR _Format$[rsp+8]
	mov	rbx, rdx
	mov	rdi, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

	call	__local_stdio_printf_options
	mov	QWORD PTR [rsp+40], rbp
	mov	r9, rsi
	mov	r8, rbx
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;

	test	eax, eax
	mov	ecx, -1
	cmovs	eax, ecx

; 1838 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1839 :         __crt_va_end(_ArgList);
; 1840 :         return _Result;
; 1841 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADAEBH@Z
_TEXT	SEGMENT
_Meta$ = 8
?to_char_type@?$char_traits@D@std@@SADAEBH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT

; 521  : 		return (static_cast<char>(_Meta));

	movzx	eax, BYTE PTR [rcx]

; 522  : 		}

	ret	0
?to_char_type@?$char_traits@D@std@@SADAEBH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z PROC	; std::char_traits<char>::to_int_type, COMDAT

; 526  : 		return (static_cast<unsigned char>(_Ch));

	movzx	eax, BYTE PTR [rcx]

; 527  : 		}

	ret	0
?to_int_type@?$char_traits@D@std@@SAHAEBD@Z ENDP	; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT

; 531  : 		return (_Left == _Right);

	mov	eax, DWORD PTR [rdx]
	cmp	DWORD PTR [rcx], eax
	sete	al

; 532  : 		}

	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHAEBH@Z
_TEXT	SEGMENT
_Meta$ = 8
?not_eof@?$char_traits@D@std@@SAHAEBH@Z PROC		; std::char_traits<char>::not_eof, COMDAT

; 535  : 		{	// return anything but EOF

	mov	eax, DWORD PTR [rcx]

; 536  : 		return (_Meta != eof() ? _Meta : !eof());

	xor	ecx, ecx
	cmp	eax, -1
	cmove	eax, ecx

; 537  : 		}

	ret	0
?not_eof@?$char_traits@D@std@@SAHAEBH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT

; 541  : 		return (EOF);

	mov	eax, -1

; 542  : 		}

	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
;	COMDAT ?hex@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?hex@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::hex, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 410  : 		_Fmtfl = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

	and	DWORD PTR [rcx+24], -1537		; fffffffffffff9ffH
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 233  : 	return (_Iosbase);

	mov	rax, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 410  : 		_Fmtfl = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

	or	DWORD PTR [rcx+24], 2048		; 00000800H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 234  : 	}

	ret	0
?hex@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::hex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
;	COMDAT ?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::uppercase, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 403  : 		_Fmtfl |= _Newfmtflags & _Fmtmask;

	or	DWORD PTR [rcx+24], 4
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 347  : 	return (_Iosbase);

	mov	rax, rcx

; 348  : 	}

	ret	0
?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::uppercase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h
;	COMDAT ??1FastWriter@Json@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1FastWriter@Json@@UEAA@XZ PROC			; Json::FastWriter::~FastWriter, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7FastWriter@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 8
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rbx], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1FastWriter@Json@@UEAA@XZ ENDP			; Json::FastWriter::~FastWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??_GFastWriter@Json@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GFastWriter@Json@@UEAAPEAXI@Z PROC			; Json::FastWriter::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h

	lea	rax, OFFSET FLAT:??_7FastWriter@Json@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
	add	rcx, 8
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rdi], rax
	test	bl, 1
	je	SHORT $LN9@scalar
	mov	edx, 48					; 00000030H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN9@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GFastWriter@Json@@UEAAPEAXI@Z ENDP			; Json::FastWriter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h
;	COMDAT ??1StyledWriter@Json@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1StyledWriter@Json@@UEAA@XZ PROC			; Json::StyledWriter::~StyledWriter, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7StyledWriter@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 64					; 00000040H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx+32]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx+8]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rbx], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??1StyledWriter@Json@@UEAA@XZ ENDP			; Json::StyledWriter::~StyledWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??_GStyledWriter@Json@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GStyledWriter@Json@@UEAAPEAXI@Z PROC			; Json::StyledWriter::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File d:\code\libshared\jsoncpp-src-0.5.0\include\json\writer.h

	lea	rax, OFFSET FLAT:??_7StyledWriter@Json@@6B@
	mov	rdi, rcx
	mov	QWORD PTR [rcx], rax
	mov	ebx, edx
	add	rcx, 64					; 00000040H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rdi+32]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rdi+8]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rdi], rax
	test	bl, 1
	je	SHORT $LN9@scalar
	mov	edx, 112				; 00000070H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN9@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GStyledWriter@Json@@UEAAPEAXI@Z ENDP			; Json::StyledWriter::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?isControlCharacter@Json@@YA_ND@Z
_TEXT	SEGMENT
ch$ = 8
?isControlCharacter@Json@@YA_ND@Z PROC			; Json::isControlCharacter, COMDAT

	dec	cl
	cmp	cl, 30
	setbe	al

	ret	0
?isControlCharacter@Json@@YA_ND@Z ENDP			; Json::isControlCharacter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?containsControlCharacter@Json@@YA_NPEBD@Z
_TEXT	SEGMENT
str$ = 8
?containsControlCharacter@Json@@YA_NPEBD@Z PROC		; Json::containsControlCharacter, COMDAT

	movzx	eax, BYTE PTR [rcx]
	test	al, al
	je	SHORT $LN3@containsCo
	npad	9
$LL2@containsCo:

	dec	al

	lea	rcx, QWORD PTR [rcx+1]
	cmp	al, 30
	jbe	SHORT $LN11@containsCo

	movzx	eax, BYTE PTR [rcx]
	test	al, al
	jne	SHORT $LL2@containsCo
$LN3@containsCo:

	xor	al, al

	ret	0
$LN11@containsCo:

	mov	al, 1

	ret	0
?containsControlCharacter@Json@@YA_NPEBD@Z ENDP		; Json::containsControlCharacter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?uintToString@Json@@YAXIAEAPEAD@Z
_TEXT	SEGMENT
value$ = 8
current$ = 16
?uintToString@Json@@YAXIAEAPEAD@Z PROC			; Json::uintToString, COMDAT

	mov	r9, QWORD PTR [rdx]
	mov	r10, rdx
	dec	r9
	mov	BYTE PTR [r9], 0
	npad	3
$LL4@uintToStri:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	ecx
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	r8d, DWORD PTR [rax+rdx]
	add	r8b, r8b
	sub	cl, r8b
	add	cl, 48					; 00000030H
	mov	BYTE PTR [r9], cl

	mov	ecx, edx

	test	edx, edx
	jne	SHORT $LL4@uintToStri

	mov	QWORD PTR [r10], r9
	ret	0
?uintToString@Json@@YAXIAEAPEAD@Z ENDP			; Json::uintToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 32
buffer$ = 40
__$ArrayPad$ = 72
__$ReturnUdt$ = 96
value$ = 104
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; Json::valueToString, COMDAT

$LN17:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx

	mov	ecx, edx

	mov	BYTE PTR buffer$[rsp+31], 0

	neg	ecx

	lea	r9, QWORD PTR buffer$[rsp+31]

	mov	r10d, edx
	shr	r10d, 31

	test	r10b, r10b
	cmove	ecx, edx
	npad	8
$LL10@valueToStr:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	ecx
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	r8d, DWORD PTR [rax+rdx]
	add	r8b, r8b
	sub	cl, r8b
	add	cl, 48					; 00000030H
	mov	BYTE PTR [r9], cl

	mov	ecx, edx

	test	edx, edx
	jne	SHORT $LL10@valueToStr

	test	r10b, r10b
	je	SHORT $LN3@valueToStr

	dec	r9
	mov	BYTE PTR [r9], 45			; 0000002dH
$LN3@valueToStr:

	mov	rdx, r9
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 32
buffer$ = 40
__$ArrayPad$ = 72
__$ReturnUdt$ = 96
value$ = 104
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Json::valueToString, COMDAT

$LN15:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r8d, edx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	rbx, rcx

	mov	BYTE PTR buffer$[rsp+31], 0
	lea	r9, QWORD PTR buffer$[rsp+31]
	npad	6
$LL8@valueToStr:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	r8d
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	ecx, DWORD PTR [rax+rdx]
	add	cl, cl
	sub	r8b, cl
	add	r8b, 48					; 00000030H
	mov	BYTE PTR [r9], r8b

	mov	r8d, edx

	test	edx, edx
	jne	SHORT $LL8@valueToStr

	mov	rdx, r9
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 32
buffer$ = 40
__$ArrayPad$ = 72
__$ReturnUdt$ = 96
value$ = 104
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z PROC ; Json::valueToString, COMDAT

$LN28:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

	movaps	xmm3, xmm1
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	rbx, rcx
	lea	r8, OFFSET FLAT:??_C@_06ECBCCLMB@?$CF?$CD?416g@
	movq	r9, xmm3
	lea	rcx, QWORD PTR buffer$[rsp]
	mov	edx, 32					; 00000020H
	call	sprintf_s

	lea	rax, QWORD PTR buffer$[rsp]
	mov	rcx, -1
$LL24@valueToStr:
	inc	rcx
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL24@valueToStr
	lea	rax, QWORD PTR buffer$[rsp]
	dec	rax
	add	rcx, rax

	cmp	BYTE PTR [rcx], 48			; 00000030H
	jne	SHORT $LN5@valueToStr

	lea	rax, QWORD PTR buffer$[rsp]
	cmp	rcx, rax
	jbe	SHORT $LN25@valueToStr
	npad	6
$LL2@valueToStr:
	cmp	BYTE PTR [rcx], 48			; 00000030H
	jne	SHORT $LN25@valueToStr

	dec	rcx
	lea	rax, QWORD PTR buffer$[rsp]
	cmp	rcx, rax
	ja	SHORT $LL2@valueToStr
$LN25@valueToStr:

	lea	rax, QWORD PTR buffer$[rsp]
	mov	rdx, rcx
	cmp	rcx, rax
	jb	SHORT $LN5@valueToStr
	npad	1
$LL4@valueToStr:

	movzx	eax, BYTE PTR [rcx]
	cmp	al, 46					; 0000002eH
	je	SHORT $LN10@valueToStr
	sub	al, 48					; 00000030H
	cmp	al, 9
	ja	SHORT $LN5@valueToStr

	dec	rcx
	lea	rax, QWORD PTR buffer$[rsp]
	cmp	rcx, rax
	jae	SHORT $LL4@valueToStr

	jmp	SHORT $LN5@valueToStr
$LN10@valueToStr:

	mov	BYTE PTR [rdx+2], 0
$LN5@valueToStr:

	lea	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
value$ = 56
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z PROC ; Json::valueToString, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	movzx	eax, dl
	mov	rbx, rcx

	test	al, al
	lea	rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	cmovne	rdx, rcx
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z PROC ; Json::valueToQuotedString, COMDAT

$LN111:
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-160]
	sub	rsp, 416				; 000001a0H
	mov	QWORD PTR $T16[rbp-256], -2
	mov	QWORD PTR [rsp+496], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rdi, rdx
	mov	r14, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rsp], rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	xor	esi, esi
	mov	DWORD PTR $T1[rsp], esi

	lea	rdx, OFFSET FLAT:??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@
	mov	rcx, rdi
	call	QWORD PTR __imp_strpbrk
	test	rax, rax
	jne	SHORT $LN7@valueToQuo
	mov	rcx, rdi

	movzx	eax, BYTE PTR [rdi]
	test	al, al
	je	SHORT $LN28@valueToQuo
$LL27@valueToQuo:

	dec	al

	lea	rcx, QWORD PTR [rcx+1]
	cmp	al, 30
	jbe	SHORT $LN7@valueToQuo

	movzx	eax, BYTE PTR [rcx]
	test	al, al
	jne	SHORT $LL27@valueToQuo
$LN28@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	lea	rcx, QWORD PTR $T4[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r8, rdi
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	mov	rdx, rax
	mov	rcx, r14
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T5[rbp-256]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T4[rbp-256]
	jmp	$LN107@valueToQuo
$LN7@valueToQuo:

	mov	rax, -1
$LL106@valueToQuo:
	lea	rax, QWORD PTR [rax+1]
	cmp	BYTE PTR [rdi+rax], sil
	jne	SHORT $LL106@valueToQuo
	lea	ebx, DWORD PTR [rax*2+3]

	lea	rcx, QWORD PTR result$[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	mov	edx, ebx
	lea	rcx, QWORD PTR result$[rbp-256]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	movzx	edx, BYTE PTR [rdi]
	test	dl, dl
	je	$LN3@valueToQuo
	lea	r12, OFFSET FLAT:__ImageBase
	lea	r13, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	lea	r14, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	npad	10
$LL4@valueToQuo:

	movsx	eax, dl
	add	eax, -8
	cmp	eax, 84					; 00000054H
	ja	$LN15@valueToQuo
	cdqe
	movzx	eax, BYTE PTR $LN104@valueToQuo[r12+rax]
	mov	ecx, DWORD PTR $LN105@valueToQuo[r12+rax*4]
	add	rcx, r12
	jmp	rcx
$LN8@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02MCKKLHBJ@?2?$CC@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN9@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02HDBGODGB@?2?2@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN10@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02DCNDPIBM@?2b@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN11@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02FGLPDNBI@?2f@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN12@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02JOGGLHBA@?2n@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN13@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02HIBBOKEN@?2r@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN14@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02COELENML@?2t@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN15@valueToQuo:

	lea	eax, DWORD PTR [rdx-1]

	cmp	al, 30
	ja	$LN16@valueToQuo
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 570  : 		{	// construct empty writable character buffer

	lea	rax, QWORD PTR ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@[r12]
	mov	QWORD PTR oss$15[rsp], rax
	lea	rcx, QWORD PTR oss$15[rbp-120]
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	or	esi, 2
	mov	DWORD PTR $T1[rsp], esi
	mov	r15d, esi

; 109  : 		}
; 110  : 
; 111  : 	void str(const _Mystr& _Newstr)
; 112  : 		{	// replace character array from string
; 113  : 		_Tidy();
; 114  : 		_Init(_Newstr.c_str(), _Newstr.size(), _Mystate);
; 115  : 		}
; 116  : 
; 117  : protected:
; 118  : 	virtual int_type overflow(int_type _Meta = _Traits::eof())
; 119  : 		{	// put an element to stream
; 120  : 		if (_Mystate & _Constant)
; 121  : 			{
; 122  : 			return (_Traits::eof());	// array nonmutable, fail
; 123  : 			}
; 124  : 
; 125  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))
; 126  : 			{
; 127  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code
; 128  : 			}
; 129  : 
; 130  : 		const auto _Pptr = _Mysb::pptr();
; 131  : 		const auto _Epptr = _Mysb::epptr();
; 132  : 		if (_Pptr != nullptr && _Pptr < _Epptr)
; 133  : 			{	// room in buffer, store it
; 134  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);
; 135  : 			_Seekhigh = _Pptr + 1;
; 136  : 			return (_Meta);
; 137  : 			}
; 138  : 
; 139  : 		// grow buffer and store element
; 140  : 		size_t _Oldsize = 0;
; 141  : 		const auto _Oldptr = _Mysb::eback();
; 142  : 		if (_Pptr != nullptr)
; 143  : 			{
; 144  : 			_Oldsize = static_cast<size_t>(_Epptr - _Oldptr);
; 145  : 			}
; 146  : 
; 147  : 		size_t _Newsize;
; 148  : 		if (_Oldsize < _MINSIZE)
; 149  : 			{
; 150  : 			_Newsize = _MINSIZE;
; 151  : 			}
; 152  : 		else if (_Oldsize < INT_MAX / 2)
; 153  : 			{	// grow by 50 percent
; 154  : 			_Newsize = _Oldsize << 1;
; 155  : 			}
; 156  : 		else if (_Oldsize < INT_MAX)
; 157  : 			{
; 158  : 			_Newsize = INT_MAX;
; 159  : 			}
; 160  : 		else
; 161  : 			{	// buffer can't grow, fail
; 162  : 			return (_Traits::eof());
; 163  : 			}
; 164  : 
; 165  : 		const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));
; 166  : 		_Traits::copy(_Newptr, _Oldptr, _Oldsize);
; 167  : 
; 168  : 		const auto _New_pnext = _Newptr + _Oldsize;
; 169  : 		_Seekhigh = _New_pnext + 1; // to include _Meta
; 170  : 
; 171  : 		_Mysb::setp(_Newptr, _New_pnext, _Newptr + _Newsize);
; 172  : 		if (_Mystate & _Noread)
; 173  : 			{	// maintain eback() == allocated pointer invariant
; 174  : 			_Mysb::setg(_Newptr, nullptr, _Newptr);
; 175  : 			}
; 176  : 		else
; 177  : 			{	// if readable, set the get area to initialized region
; 178  : 			_Mysb::setg(_Newptr,
; 179  : 				_Newptr + (_Mysb::gptr() - _Oldptr),
; 180  : 				_Seekhigh);
; 181  : 			}
; 182  : 
; 183  : 		if (_Mystate & _Allocated)
; 184  : 			{
; 185  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);
; 186  : 			}
; 187  : 
; 188  : 		_Mystate |= _Allocated;
; 189  : 		*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);
; 190  : 		return (_Meta);
; 191  : 		}
; 192  : 
; 193  : 	virtual int_type pbackfail(int_type _Meta = _Traits::eof())
; 194  : 		{	// put an element back to stream
; 195  : 		const auto _Gptr = _Mysb::gptr();
; 196  : 		if (_Gptr == nullptr
; 197  : 			|| _Gptr <= _Mysb::eback()
; 198  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)
; 199  : 				&& !_Traits::eq(_Traits::to_char_type(_Meta), _Gptr[-1])
; 200  : 				&& (_Mystate & _Constant)))
; 201  : 			{	// can't put back, fail
; 202  : 			return (_Traits::eof());
; 203  : 			}
; 204  : 
; 205  : 		// back up one position and store put-back character
; 206  : 		_Mysb::gbump(-1);
; 207  : 		if (!_Traits::eq_int_type(_Traits::eof(), _Meta))
; 208  : 			{
; 209  : 			*_Mysb::gptr() = _Traits::to_char_type(_Meta);
; 210  : 			}
; 211  : 
; 212  : 		return (_Traits::not_eof(_Meta));
; 213  : 		}
; 214  : 
; 215  : 	virtual int_type underflow()
; 216  : 		{	// get an element from stream, but don't point past it
; 217  : 		const auto _Gptr = _Mysb::gptr();
; 218  : 		if (_Gptr == nullptr)
; 219  : 			{	// no character buffer, fail
; 220  : 			return (_Traits::eof());
; 221  : 			}
; 222  : 
; 223  : 		if (_Gptr < _Mysb::egptr())
; 224  : 			{	// return buffered
; 225  : 			return (_Traits::to_int_type(*_Gptr));
; 226  : 			}
; 227  : 
; 228  : 		// try to add initialized characters from the put area into the get area
; 229  : 		const auto _Pptr = _Mysb::pptr();
; 230  : 		if (!_Pptr || (_Mystate & _Noread))
; 231  : 			{	// no put area or read disallowed
; 232  : 			return (_Traits::eof());
; 233  : 			}
; 234  : 
; 235  : 		const auto _Local_highwater = _Max_value(_Seekhigh, _Pptr);
; 236  : 		if (_Local_highwater <= _Gptr)
; 237  : 			{	// nothing in the put area to take
; 238  : 			return (_Traits::eof());
; 239  : 			}
; 240  : 
; 241  : 		_Seekhigh = _Local_highwater;
; 242  : 		_Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Local_highwater);
; 243  : 		return (_Traits::to_int_type(*_Mysb::gptr()));
; 244  : 		}
; 245  : 
; 246  : 	virtual pos_type seekoff(off_type _Off,
; 247  : 		ios_base::seekdir _Way,
; 248  : 		ios_base::openmode _Mode = ios_base::in | ios_base::out)
; 249  : 		{	// change position by _Off, according to _Way, _Mode
; 250  : 		const auto _Gptr_old = _Mysb::gptr();
; 251  : 		const auto _Pptr_old = _Mysb::pptr();
; 252  : 		if (_Pptr_old != nullptr && _Seekhigh < _Pptr_old)
; 253  : 			{	// update high-water pointer
; 254  : 			_Seekhigh = _Pptr_old;
; 255  : 			}
; 256  : 
; 257  : 		const auto _Seeklow = _Mysb::eback();
; 258  : 		const auto _Seekdist = _Seekhigh - _Seeklow;
; 259  : 		off_type _Newoff;
; 260  : 		switch (_Way)
; 261  : 			{
; 262  : 			case ios_base::beg:
; 263  : 				_Newoff = 0;
; 264  : 				break;
; 265  : 			case ios_base::end:
; 266  : 				_Newoff = _Seekdist;
; 267  : 				break;
; 268  : 			case ios_base::cur:
; 269  : 				{
; 270  : 				constexpr auto _Both = ios_base::in | ios_base::out;
; 271  : 				if ((_Mode & _Both) != _Both)
; 272  : 					{	// prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"
; 273  : 					if (_Mode & ios_base::in)
; 274  : 						{
; 275  : 						if (_Gptr_old != nullptr || _Seeklow == nullptr)
; 276  : 							{
; 277  : 							_Newoff = _Gptr_old - _Seeklow;
; 278  : 							break;
; 279  : 							}
; 280  : 						}
; 281  : 					else if ((_Mode & ios_base::out) && (_Pptr_old != nullptr || _Seeklow == nullptr))
; 282  : 						{
; 283  : 						_Newoff = _Pptr_old - _Seeklow;
; 284  : 						break;
; 285  : 						}
; 286  : 					}
; 287  : 				}
; 288  : 
; 289  : 				// fallthrough
; 290  : 			default:
; 291  : 				return (pos_type(off_type(-1)));
; 292  : 			}
; 293  : 
; 294  : 		if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist))
; 295  : 			{
; 296  : 			return (pos_type(off_type(-1)));
; 297  : 			}
; 298  : 
; 299  : 		_Off += _Newoff;
; 300  : 		if (_Off != 0
; 301  : 			&& (((_Mode & ios_base::in) && _Gptr_old == nullptr)
; 302  : 				|| ((_Mode & ios_base::out) && _Pptr_old == nullptr)))
; 303  : 			{
; 304  : 			return (pos_type(off_type(-1)));
; 305  : 			}
; 306  : 
; 307  : 		const auto _Newptr = _Seeklow + _Off;	// may perform nullptr + 0
; 308  : 		if ((_Mode & ios_base::in) && _Gptr_old != nullptr)
; 309  : 			{
; 310  : 			_Mysb::setg(_Seeklow, _Newptr, _Seekhigh);
; 311  : 			}
; 312  : 
; 313  : 		if ((_Mode & ios_base::out) && _Pptr_old != nullptr)
; 314  : 			{
; 315  : 			_Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());
; 316  : 			}
; 317  : 
; 318  : 		return (pos_type(_Off));
; 319  : 		}
; 320  : 
; 321  : 	virtual pos_type seekpos(pos_type _Pos,
; 322  : 		ios_base::openmode _Mode = ios_base::in | ios_base::out)
; 323  : 		{	// change position to _Pos, according to _Mode
; 324  : 		const auto _Off = static_cast<streamoff>(_Pos);
; 325  : 		const auto _Gptr_old = _Mysb::gptr();
; 326  : 		const auto _Pptr_old = _Mysb::pptr();
; 327  : 		if (_Pptr_old != nullptr && _Seekhigh < _Pptr_old)
; 328  : 			{	// update high-water pointer
; 329  : 			_Seekhigh = _Pptr_old;
; 330  : 			}
; 331  : 
; 332  : 		const auto _Seeklow = _Mysb::eback();
; 333  : 		const auto _Seekdist = _Seekhigh - _Seeklow;
; 334  : 		if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist))
; 335  : 			{
; 336  : 			return (pos_type(off_type(-1)));
; 337  : 			}
; 338  : 
; 339  : 		if (_Off != 0
; 340  : 			&& (((_Mode & ios_base::in) && _Gptr_old == nullptr)
; 341  : 				|| ((_Mode & ios_base::out) && _Pptr_old == nullptr)))
; 342  : 			{
; 343  : 			return (pos_type(off_type(-1)));
; 344  : 			}
; 345  : 
; 346  : 		const auto _Newptr = _Seeklow + _Off;	// may perform nullptr + 0
; 347  : 		if ((_Mode & ios_base::in) && _Gptr_old != nullptr)
; 348  : 			{
; 349  : 			_Mysb::setg(_Seeklow, _Newptr, _Seekhigh);
; 350  : 			}
; 351  : 
; 352  : 		if ((_Mode & ios_base::out) && _Pptr_old != nullptr)
; 353  : 			{
; 354  : 			_Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());
; 355  : 			}
; 356  : 
; 357  : 		return (pos_type(_Off));
; 358  : 		}
; 359  : 
; 360  : 	void _Init(const _Elem * _Ptr, _Mysize_type _Count, int _State)
; 361  : 		{	// initialize buffer to [_Ptr, _Ptr + _Count), set state
; 362  : 		if (_Count > INT_MAX)
; 363  : 			{	// TRANSITION, VSO#485517
; 364  : 			_Xbad_alloc();
; 365  : 			}
; 366  : 
; 367  : 		if (_Count != 0 && (_State & (_Noread | _Constant)) != (_Noread | _Constant))
; 368  : 			{	// finite buffer that can be read or written, set it up
; 369  : 			const auto _Pnew = _Unfancy(_Al.allocate(_Count));
; 370  : 			_Traits::copy(_Pnew, _Ptr, _Count);
; 371  : 			_Seekhigh = _Pnew + _Count;
; 372  : 
; 373  : 			if (!(_State & _Noread))
; 374  : 				{
; 375  : 				_Mysb::setg(_Pnew, _Pnew, _Seekhigh);	// setup read buffer
; 376  : 				}
; 377  : 
; 378  : 			if (!(_State & _Constant))
; 379  : 				{	// setup write buffer, and maybe read buffer
; 380  : 				_Mysb::setp(_Pnew,
; 381  : 					(_State & (_Atend | _Append)) ? _Seekhigh : _Pnew,
; 382  : 					_Seekhigh);
; 383  : 
; 384  : 				if (_State & _Noread)
; 385  : 					{	// maintain "_Allocated == eback() points to buffer base" invariant
; 386  : 					_Mysb::setg(_Pnew, nullptr, _Pnew);
; 387  : 					}
; 388  : 				}
; 389  : 
; 390  : 			_State |= _Allocated;
; 391  : 			}
; 392  : 		else
; 393  : 			{
; 394  : 			_Seekhigh = nullptr;
; 395  : 			}
; 396  : 
; 397  : 		_Mystate = _State;
; 398  : 		}
; 399  : 
; 400  : 	void _Tidy()
; 401  : 		{	// discard any allocated buffer and clear pointers
; 402  : 		if (_Mystate & _Allocated)
; 403  : 			{
; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),
; 405  : 				static_cast<typename allocator_traits<allocator_type>::size_type>(
; 406  : 					(_Mysb::pptr() != nullptr ? _Mysb::epptr() : _Mysb::egptr()) - _Mysb::eback()));
; 407  : 			}
; 408  : 
; 409  : 		_Mysb::setg(nullptr, nullptr, nullptr);
; 410  : 		_Mysb::setp(nullptr, nullptr);
; 411  : 		_Seekhigh = nullptr;
; 412  : 		_Mystate &= ~_Allocated;
; 413  : 		}
; 414  : 
; 415  : private:
; 416  : 	using _Ptr_traits = pointer_traits<typename allocator_traits<allocator_type>::pointer>;
; 417  : 
; 418  : 	enum
; 419  : 		{	// constant for minimum buffer size
; 420  : 		_MINSIZE = 32
; 421  : 		};
; 422  : 
; 423  : 	static int _Getstate(ios_base::openmode _Mode)
; 424  : 		{	// convert open mode to stream state bits
; 425  : 		int _State = 0;
; 426  : 		if (!(_Mode & ios_base::in))
; 427  : 			{
; 428  : 			_State |= _Noread;
; 429  : 			}
; 430  : 
; 431  : 		if (!(_Mode & ios_base::out))
; 432  : 			{
; 433  : 			_State |= _Constant;
; 434  : 			}
; 435  : 
; 436  : 		if (_Mode & ios_base::app)
; 437  : 			{
; 438  : 			_State |= _Append;
; 439  : 			}
; 440  : 
; 441  : 		if (_Mode & ios_base::ate)
; 442  : 			{
; 443  : 			_State |= _Atend;
; 444  : 			}
; 445  : 
; 446  : 		return (_State);
; 447  : 		}
; 448  : 
; 449  : 	_Elem * _Seekhigh;	// the high-water pointer in character array
; 450  : 	int _Mystate;	// the stream state
; 451  : 	allocator_type _Al;	// the allocator object
; 452  : 	};
; 453  : 
; 454  : template<class _Elem,
; 455  : 	class _Traits,
; 456  : 	class _Alloc> inline
; 457  : 	void swap(basic_stringbuf<_Elem, _Traits, _Alloc>& _Left,
; 458  : 		basic_stringbuf<_Elem, _Traits, _Alloc>& _Right)
; 459  : 	{	// swap _Left and _Right basic_stringbufs
; 460  : 	_Left.swap(_Right);
; 461  : 	}
; 462  : 
; 463  : 		// CLASS TEMPLATE basic_istringstream
; 464  : template<class _Elem,
; 465  : 	class _Traits,
; 466  : 	class _Alloc>
; 467  : 	class basic_istringstream
; 468  : 		: public basic_istream<_Elem, _Traits>
; 469  : 	{	// input stream associated with a character array
; 470  : public:
; 471  : 	typedef basic_istream<_Elem, _Traits> _Mybase;
; 472  : 	typedef _Alloc allocator_type;
; 473  : 	typedef basic_stringbuf<_Elem, _Traits, _Alloc> _Mysb;
; 474  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 475  : 
; 476  : 	explicit basic_istringstream(ios_base::openmode _Mode = ios_base::in)
; 477  : 		: _Mybase(&_Stringbuffer),
; 478  : 			_Stringbuffer(_Mode | ios_base::in)
; 479  : 		{	// construct empty readable character buffer
; 480  : 		}
; 481  : 
; 482  : 	explicit basic_istringstream(const _Mystr& _Str,
; 483  : 		ios_base::openmode _Mode = ios_base::in)
; 484  : 		: _Mybase(&_Stringbuffer),
; 485  : 			_Stringbuffer(_Str, _Mode | ios_base::in)
; 486  : 		{	// construct readable character buffer from NTCS
; 487  : 		}
; 488  : 
; 489  : 	basic_istringstream(basic_istringstream&& _Right)
; 490  : 		: _Mybase(&_Stringbuffer)
; 491  : 		{	// construct by moving _Right
; 492  : 		_Assign_rv(_STD move(_Right));
; 493  : 		}
; 494  : 
; 495  : 	basic_istringstream& operator=(basic_istringstream&& _Right)
; 496  : 		{	// move from _Right
; 497  : 		_Assign_rv(_STD move(_Right));
; 498  : 		return (*this);
; 499  : 		}
; 500  : 
; 501  : 	void _Assign_rv(basic_istringstream&& _Right)
; 502  : 		{	// assign by moving _Right
; 503  : 		if (this != _STD addressof(_Right))
; 504  : 			{	// different, worth moving
; 505  : 			_Stringbuffer.str(_Mystr());
; 506  : 			this->swap(_Right);
; 507  : 			}
; 508  : 		}
; 509  : 
; 510  : 	void swap(basic_istringstream& _Right)
; 511  : 		{	// swap with _Right
; 512  : 		if (this != _STD addressof(_Right))
; 513  : 			{	// different, swap base and buffer
; 514  : 			_Mybase::swap(_Right);
; 515  : 			_Stringbuffer.swap(_Right._Stringbuffer);
; 516  : 			}
; 517  : 		}
; 518  : 
; 519  : 	basic_istringstream(const basic_istringstream&) = delete;
; 520  : 	basic_istringstream& operator=(const basic_istringstream&) = delete;
; 521  : 
; 522  : 	virtual ~basic_istringstream() noexcept
; 523  : 		{	// destroy the object
; 524  : 		}
; 525  : 
; 526  : 	_NODISCARD _Mysb *rdbuf() const
; 527  : 		{	// return pointer to file buffer
; 528  : 		return ((_Mysb *)&_Stringbuffer);
; 529  : 		}
; 530  : 
; 531  : 	_NODISCARD _Mystr str() const
; 532  : 		{	// return string copy of character array
; 533  : 		return (_Stringbuffer.str());
; 534  : 		}
; 535  : 
; 536  : 	void str(const _Mystr& _Newstr)
; 537  : 		{	// replace character array from string
; 538  : 		_Stringbuffer.str(_Newstr);
; 539  : 		}
; 540  : 
; 541  : private:
; 542  : 	_Mysb _Stringbuffer;	// the string buffer
; 543  : 	};
; 544  : 
; 545  : template<class _Elem,
; 546  : 	class _Traits,
; 547  : 	class _Alloc> inline
; 548  : 	void swap(basic_istringstream<_Elem, _Traits, _Alloc>& _Left,
; 549  : 		basic_istringstream<_Elem, _Traits, _Alloc>& _Right)
; 550  : 	{	// swap _Left and _Right basic_istringstreams
; 551  : 	_Left.swap(_Right);
; 552  : 	}
; 553  : 
; 554  : 		// CLASS TEMPLATE basic_ostringstream
; 555  : template<class _Elem,
; 556  : 	class _Traits,
; 557  : 	class _Alloc>
; 558  : 	class basic_ostringstream
; 559  : 		: public basic_ostream<_Elem, _Traits>
; 560  : 	{	// output stream associated with a character array
; 561  : public:
; 562  : 	typedef basic_ostream<_Elem, _Traits> _Mybase;
; 563  : 	typedef _Alloc allocator_type;
; 564  : 	typedef basic_stringbuf<_Elem, _Traits, _Alloc> _Mysb;
; 565  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 566  : 
; 567  : 	explicit basic_ostringstream(ios_base::openmode _Mode = ios_base::out)
; 568  : 		: _Mybase(&_Stringbuffer),

	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR oss$15[rsp+8]
	lea	rcx, QWORD PTR oss$15[rsp]
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1

; 570  : 		{	// construct empty writable character buffer

	mov	rax, QWORD PTR oss$15[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR oss$15[rsp+rcx], r13
	mov	rax, QWORD PTR oss$15[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR oss$15[rsp+rcx-4], edx

; 33   : 		{	// construct empty character buffer from mode

	lea	rcx, QWORD PTR oss$15[rsp+8]
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	mov	QWORD PTR oss$15[rsp+8], r14

; 30   : 		: _Seekhigh(nullptr),

	mov	QWORD PTR oss$15[rbp-144], 0

; 31   : 		_Mystate(_Getstate(_Mode)),

	mov	DWORD PTR oss$15[rbp-136], 4

; 32   : 		_Al()

	lea	rcx, QWORD PTR oss$15[rbp-132]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, OFFSET FLAT:??_C@_02DHFAHMIK@?2u@
	lea	rcx, QWORD PTR oss$15[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:?hex@std@@YAAEAVios_base@1@AEAV21@@Z ; std::hex
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z ; std::uppercase
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rbx, rax
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip

; 64   : 	_Ostr.fill(_Manip._Fill);

	mov	rcx, QWORD PTR [rax]
	movsxd	rdx, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 114  : 		_Fillch = _Newfill;

	mov	BYTE PTR [rdx+rax+88], 48		; 00000030H
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	edx, 4
	lea	rcx, QWORD PTR $T7[rbp-256]
	call	QWORD PTR __imp_?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip

; 531  : 	(*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	mov	rcx, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rbx
	mov	rdx, QWORD PTR [rax+8]
	call	QWORD PTR [rax]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	movsx	edx, BYTE PTR [rdi]
	mov	rcx, rbx
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 96   : 		_Mystr _Result(_Al);

	lea	rdx, QWORD PTR oss$15[rbp-132]
	lea	rcx, QWORD PTR $T8[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 106  : 			}
; 107  : 
; 108  : 		return (_Result);

	or	esi, 8
	mov	DWORD PTR $T1[rsp], esi

; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)

	mov	ecx, DWORD PTR oss$15[rbp-136]
	test	cl, 2
	jne	SHORT $LN70@valueToQuo
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR oss$15[rbp-184]
	mov	r8, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)

	test	r8, r8
	je	SHORT $LN70@valueToQuo
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 230  : 		return (*_IPfirst);

	mov	rax, QWORD PTR oss$15[rsp+40]
	mov	rdx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 100  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	cmp	r8, QWORD PTR oss$15[rbp-144]
	cmovb	r8, QWORD PTR oss$15[rbp-144]
	sub	r8, rdx
	jmp	SHORT $LN108@valueToQuo
$LN70@valueToQuo:

; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)

	test	cl, 4
	jne	SHORT $LN72@valueToQuo
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR oss$15[rbp-192]
	mov	rcx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)

	test	rcx, rcx
	je	SHORT $LN72@valueToQuo
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR oss$15[rsp+32]
	mov	rdx, QWORD PTR [rax]

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR oss$15[rbp-168]
	movsxd	r8, DWORD PTR [rax]
	sub	r8, rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 105  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

	add	r8, rcx
$LN108@valueToQuo:

; 624  : 		return (_Stringbuffer.str());

	lea	rcx, QWORD PTR $T8[rbp-256]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN72@valueToQuo:
	mov	esi, r15d
	and	esi, -9
	or	esi, 4
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, QWORD PTR $T8[rbp-256]
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T8[rbp-256]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 614  : 		{	// destroy the object

	mov	rax, QWORD PTR oss$15[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR oss$15[rsp+rcx], r13
	mov	rax, QWORD PTR oss$15[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR oss$15[rsp+rcx-4], edx

; 615  : 		}

	lea	rcx, QWORD PTR oss$15[rsp+8]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR oss$15[rsp+16]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR oss$15[rbp-120]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	jmp	SHORT $LN2@valueToQuo
$LN16@valueToQuo:

	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN2@valueToQuo:

	inc	rdi
	movzx	edx, BYTE PTR [rdi]
	test	dl, dl
	jne	$LL4@valueToQuo
	mov	r14, QWORD PTR __$ReturnUdt$GSCopy$1$[rsp]
$LN3@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR result$[rbp-256]
	mov	rcx, r14
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR result$[rbp-256]
$LN107@valueToQuo:

	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, r14
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+496]
	add	rsp, 416				; 000001a0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
	npad	1
$LN105@valueToQuo:
	DD	$LN10@valueToQuo
	DD	$LN14@valueToQuo
	DD	$LN12@valueToQuo
	DD	$LN11@valueToQuo
	DD	$LN13@valueToQuo
	DD	$LN8@valueToQuo
	DD	$LN9@valueToQuo
	DD	$LN15@valueToQuo
$LN104@valueToQuo:
	DB	0
	DB	1
	DB	2
	DB	7
	DB	3
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ENDP ; Json::valueToQuotedString
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$0
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$1
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$3
	lea	rcx, QWORD PTR result$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$3
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN43@dtor$6
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR oss$15[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN43@dtor$6:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$6
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$7
	lea	rcx, QWORD PTR oss$15[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$7
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$4
	lea	rcx, QWORD PTR oss$15[rdx]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$4
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$11
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN75@dtor$11
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN75@dtor$11:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$11
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$5
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$3
	lea	rcx, QWORD PTR result$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN43@dtor$6
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR oss$15[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN43@dtor$6:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$7
	lea	rcx, QWORD PTR oss$15[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$4
	lea	rcx, QWORD PTR oss$15[rdx]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$11
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN75@dtor$11
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN75@dtor$11:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$GSCopy$1$ = 40
__$ReturnUdt$GSCopy$ = 48
oss$15 = 64
$T16 = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$5
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H

; 614  : 		{	// destroy the object

	mov	rax, QWORD PTR [rcx]
	lea	rbx, QWORD PTR [rcx+136]

; 615  : 		}

	lea	rcx, QWORD PTR [rbx-128]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rbx-136], rax
	mov	rax, QWORD PTR [rbx-136]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-136]
	mov	DWORD PTR [rdx+rbx-140], r8d
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx-120]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??1Writer@Json@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Writer@Json@@UEAA@XZ PROC				; Json::Writer::~Writer, COMDAT

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rcx], rax

	ret	0
??1Writer@Json@@UEAA@XZ ENDP				; Json::Writer::~Writer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??_GWriter@Json@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GWriter@Json@@UEAAPEAXI@Z PROC			; Json::Writer::`scalar deleting destructor', COMDAT
$LN9:
	push	rbx
	sub	rsp, 32					; 00000020H

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN6@scalar
	mov	edx, 8
	call	??3@YAXPEAX_K@Z				; operator delete
$LN6@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GWriter@Json@@UEAAPEAXI@Z ENDP			; Json::Writer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??0FastWriter@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0FastWriter@Json@@QEAA@XZ PROC			; Json::FastWriter::FastWriter, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7FastWriter@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 8
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rax, rbx
	mov	BYTE PTR [rbx+40], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0FastWriter@Json@@QEAA@XZ ENDP			; Json::FastWriter::FastWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0Writer@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Writer@Json@@QEAA@XZ PROC				; Json::Writer::Writer, COMDAT
	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0Writer@Json@@QEAA@XZ ENDP				; Json::Writer::Writer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
root$ = 64
?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z PROC ; Json::FastWriter::write, COMDAT

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rbx, rcx

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	add	rcx, 8
	mov	rdi, r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	lea	rcx, QWORD PTR [rbx+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR [rbx+8]
	mov	rcx, rbp
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ENDP ; Json::FastWriter::write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z PROC	; Json::FastWriter::writeValue, COMDAT

$LN127:
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-39]
	sub	rsp, 144				; 00000090H
	mov	QWORD PTR $T28[rbp-105], -2
	mov	QWORD PTR [rsp+224], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-105], rax
	mov	rsi, rdx
	mov	r14, rcx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 530  :    allocated_ = other.allocated_;

	movsx	rax, BYTE PTR [rdx+8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	cmp	eax, 7
	ja	$LN2@writeValue
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR $LN124@writeValue[rcx+rax*4]
	add	rdx, rcx
	jmp	rdx
$LN10@writeValue:

	lea	rcx, QWORD PTR [r14+8]
	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null@
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@writeValue
$LN11@writeValue:

	mov	rcx, rsi
	call	?asInt@Value@Json@@QEBAHXZ		; Json::Value::asInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T2[rbp-105]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
	npad	1
	lea	rcx, QWORD PTR [r14+8]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T2[rbp-105]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN12@writeValue:

	mov	rcx, rsi
	call	?asUInt@Value@Json@@QEBAIXZ		; Json::Value::asUInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T3[rbp-105]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
	npad	1
	lea	rcx, QWORD PTR [r14+8]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T3[rbp-105]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN13@writeValue:

	mov	rcx, rsi
	call	?asDouble@Value@Json@@QEBANXZ		; Json::Value::asDouble
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T4[rbp-105]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
	npad	1
	lea	rcx, QWORD PTR [r14+8]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T4[rbp-105]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN14@writeValue:

	mov	rdx, QWORD PTR [rsi]
	lea	rcx, QWORD PTR $T6[rbp-105]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1
	lea	rcx, QWORD PTR [r14+8]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T6[rbp-105]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN15@writeValue:

	mov	rcx, rsi
	call	?asBool@Value@Json@@QEBA_NXZ		; Json::Value::asBool

	lea	rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	test	al, al
	cmovne	rdx, rcx
	lea	rcx, QWORD PTR $T7[rbp-105]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [r14+8]
	lea	rdx, QWORD PTR $T7[rbp-105]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T7[rbp-105]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN16@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01OHGJGJJP@?$FL@
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rcx, rsi
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	mov	r12d, eax

	xor	edi, edi
	test	eax, eax
	jle	SHORT $LN5@writeValue
	lea	r13, OFFSET FLAT:?null@Value@Json@@2V12@B ; Json::Value::null
$LL6@writeValue:

	test	edi, edi
	jle	SHORT $LN17@writeValue

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN17@writeValue:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 999  : }

	cmp	BYTE PTR [rsi+8], 0
	jne	SHORT $LN37@writeValue

; 1000 : 

	mov	rdx, r13
	jmp	SHORT $LN36@writeValue
$LN37@writeValue:

; 175  : // //////////////////////////////////////////////////////////////////

	mov	QWORD PTR key$26[rbp-105], 0

; 176  : # ifndef JSON_VALUE_USE_INTERNAL_MAP

	mov	DWORD PTR key$26[rbp-97], edi

; 1003 : Value::operator[]( UInt index ) const

	lea	r8, QWORD PTR key$26[rbp-105]
	lea	rdx, QWORD PTR $T9[rbp-105]
	mov	rcx, QWORD PTR [rsi]
	call	?find@?$_Tree@V?$_Tmap_traits@VCZString@Value@Json@@V23@U?$less@VCZString@Value@Json@@@std@@V?$allocator@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@5@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@@2@AEBVCZString@Value@Json@@@Z ; std::_Tree<std::_Tmap_traits<Json::Value::CZString,Json::Value,std::less<Json::Value::CZString>,std::allocator<std::pair<Json::Value::CZString const ,Json::Value> >,0> >::find
	mov	rbx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree

; 1015 : 		return (_Mypair._Get_second()._Get_second());

	mov	rdx, QWORD PTR [rsi]

; 42   : 		: _Ptr(_Pnode)

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR $T13[rbp-105], rax

; 43   : 		{	// construct with node pointer _Pnode
; 44   : 		this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T13[rbp-105]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 278  : 		return (this->_Ptr == _Right._Ptr);

	cmp	rbx, QWORD PTR $T13[rbp-105]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1004 : {

	jne	SHORT $LN38@writeValue

; 1005 :    JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );

	mov	rdx, r13
	jmp	SHORT $LN36@writeValue
$LN38@writeValue:

; 1006 :    if ( type_ == nullValue )

	lea	rdx, QWORD PTR [rbx+48]
$LN36@writeValue:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rcx, r14
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

	inc	edi
	cmp	edi, r12d
	jl	SHORT $LL6@writeValue
$LN5@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@writeValue
$LN18@writeValue:

	lea	rdx, QWORD PTR members$29[rbp-105]
	mov	rcx, rsi
	call	?getMemberNames@Value@Json@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Json::Value::getMemberNames
	npad	1

	lea	rdx, OFFSET FLAT:??_C@_01HCONENDN@?$HL@
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1619 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst

; 41   : 		: _Ptr(_Parg)

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR it$27[rbp-105], rcx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR it$27[rbp-105]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 1629 : 		return (iterator(this->_Mylast(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast

; 41   : 		: _Ptr(_Parg)

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR $T19[rbp-105], rcx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T19[rbp-105]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 165  : 		return (_Ptr == _Right._Ptr);

	mov	r15, QWORD PTR it$27[rbp-105]
	cmp	r15, QWORD PTR $T19[rbp-105]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	je	$LN8@writeValue
	lea	r12, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
$LL9@writeValue:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1619 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst

; 41   : 		: _Ptr(_Parg)

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR $T23[rbp-105], rcx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T23[rbp-105]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 165  : 		return (_Ptr == _Right._Ptr);

	mov	rax, QWORD PTR $T23[rbp-105]
	cmp	QWORD PTR it$27[rbp-105], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	je	SHORT $LN19@writeValue

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN19@writeValue:

	mov	rcx, r15
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	lea	rcx, QWORD PTR $T25[rbp-105]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T25[rbp-105]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3@
	cmp	BYTE PTR [r14+40], 0
	cmovne	rdx, r12
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1091 :    return (*this)[ key.c_str() ];

	mov	rcx, r15
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	mov	rcx, rsi
	call	??AValue@Json@@QEBAAEBV01@PEBD@Z	; Json::Value::operator[]
	mov	rdx, rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rcx, r14
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 78   : 		++_Ptr;

	add	QWORD PTR it$27[rbp-105], 32		; 00000020H

; 1629 : 		return (iterator(this->_Mylast(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$29[rbp-105]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast

; 41   : 		: _Ptr(_Parg)

	mov	rdx, QWORD PTR [rax]
	mov	QWORD PTR $T19[rbp-105], rdx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T19[rbp-105]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 165  : 		return (_Ptr == _Right._Ptr);

	mov	r15, QWORD PTR it$27[rbp-105]
	cmp	r15, QWORD PTR $T19[rbp-105]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	jne	$LL9@writeValue
$LN8@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01CELHOKLL@?$HN@
	lea	rcx, QWORD PTR [r14+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR members$29[rbp-105]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN2@writeValue:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-105]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+224]
	add	rsp, 144				; 00000090H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
	npad	1
$LN124@writeValue:
	DD	$LN10@writeValue
	DD	$LN11@writeValue
	DD	$LN12@writeValue
	DD	$LN13@writeValue
	DD	$LN14@writeValue
	DD	$LN15@writeValue
	DD	$LN16@writeValue
	DD	$LN18@writeValue
?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ENDP	; Json::FastWriter::writeValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$0
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$1
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$2
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$3
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$4
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR members$29[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$5
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR members$29[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T13 = 32
$T19 = 32
key$26 = 40
it$27 = 40
$T9 = 56
$T23 = 56
$T28 = 64
members$29 = 72
$T7 = 72
$T6 = 72
$T4 = 72
$T3 = 72
$T2 = 72
$T25 = 104
__$ArrayPad$ = 136
this$ = 208
value$ = 216
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR $T25[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??0StyledWriter@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0StyledWriter@Json@@QEAA@XZ PROC			; Json::StyledWriter::StyledWriter, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7StyledWriter@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 8
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	lea	rcx, QWORD PTR [rbx+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx+64]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rax, rbx
	mov	DWORD PTR [rbx+96], 74			; 0000004aH
	mov	DWORD PTR [rbx+100], 3
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0StyledWriter@Json@@QEAA@XZ ENDP			; Json::StyledWriter::StyledWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
root$ = 64
?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z PROC ; Json::StyledWriter::write, COMDAT

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rbx, rcx

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	add	rcx, 32					; 00000020H
	mov	rdi, r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	lea	rcx, QWORD PTR [rbx+64]
	mov	BYTE PTR [rbx+104], 0
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	lea	rcx, QWORD PTR [rbx+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR [rbx+32]
	mov	rcx, rbp
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ENDP ; Json::StyledWriter::write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC	; Json::StyledWriter::writeValue, COMDAT

$LN106:
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	QWORD PTR $T25[rbp-128], -2
	mov	QWORD PTR [rsp+192], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	rsi, rdx
	mov	rdi, rcx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 530  :    allocated_ = other.allocated_;

	movsx	rax, BYTE PTR [rdx+8]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	cmp	eax, 7
	ja	$LN2@writeValue
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN102@writeValue[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN6@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null@
	lea	rcx, QWORD PTR $T2[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T2[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN32@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN33@writeValue
$LN32@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN33@writeValue:

	lea	rcx, QWORD PTR $T2[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN7@writeValue:

	mov	rcx, rsi
	call	?asInt@Value@Json@@QEBAHXZ		; Json::Value::asInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T3[rbp-128]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
	npad	1

	mov	rdx, rax
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN36@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN37@writeValue
$LN36@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN37@writeValue:

	lea	rcx, QWORD PTR $T3[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN8@writeValue:

	mov	rcx, rsi
	call	?asUInt@Value@Json@@QEBAIXZ		; Json::Value::asUInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T5[rbp-128]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
	npad	1

	mov	rdx, rax
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN40@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN41@writeValue
$LN40@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN41@writeValue:

	lea	rcx, QWORD PTR $T5[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN9@writeValue:

	mov	rcx, rsi
	call	?asDouble@Value@Json@@QEBANXZ		; Json::Value::asDouble
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T7[rbp-128]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
	npad	1

	mov	rdx, rax
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN44@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN45@writeValue
$LN44@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN45@writeValue:

	lea	rcx, QWORD PTR $T7[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN10@writeValue:

	mov	rdx, QWORD PTR [rsi]
	lea	rcx, QWORD PTR $T10[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1

	mov	rdx, rax
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN50@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN51@writeValue
$LN50@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN51@writeValue:

	lea	rcx, QWORD PTR $T10[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN11@writeValue:

	mov	rcx, rsi
	call	?asBool@Value@Json@@QEBA_NXZ		; Json::Value::asBool

	lea	rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	test	al, al
	cmovne	rdx, rcx
	lea	rcx, QWORD PTR $T12[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T12[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN58@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN59@writeValue
$LN58@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN59@writeValue:

	lea	rcx, QWORD PTR $T12[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN12@writeValue:

	mov	rdx, rsi
	mov	rcx, rdi
	call	?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeArrayValue

	jmp	$LN2@writeValue
$LN13@writeValue:

	lea	rdx, QWORD PTR members$26[rbp-128]
	mov	rcx, rsi
	call	?getMemberNames@Value@Json@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Json::Value::getMemberNames
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1699 : 		return (this->_Myfirst() == this->_Mylast());

	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	rbx, rax
	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rcx, QWORD PTR [rax]
	cmp	QWORD PTR [rbx], rcx
	lea	rcx, QWORD PTR $T15[rbp-128]
	jne	SHORT $LN14@writeValue

	lea	rdx, OFFSET FLAT:??_C@_02MCILKGOH@?$HL?$HN@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T15[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN64@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN65@writeValue
$LN64@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN65@writeValue:

	jmp	$LN103@writeValue
$LN14@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01HCONENDN@?$HL@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rdx, QWORD PTR $T16[rbp-128]
	mov	rcx, rdi
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T16[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rcx, rdi
	call	?indent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::indent
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1619 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst

; 41   : 		: _Ptr(_Parg)

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR it$24[rbp-128], rcx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR it$24[rbp-128]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rbx, QWORD PTR it$24[rbp-128]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1091 :    return (*this)[ key.c_str() ];

	mov	rcx, rbx
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	mov	rcx, rsi
	call	??AValue@Json@@QEBAAEBV01@PEBD@Z	; Json::Value::operator[]
	mov	r14, rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rdx, rax
	mov	rcx, rdi
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	mov	rcx, rbx
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	lea	rcx, QWORD PTR $T19[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1
	mov	rdx, rax
	mov	rcx, rdi
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T19[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_03MCPBMLDJ@?5?3?5@
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, r14
	mov	rcx, rdi
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1629 : 		return (iterator(this->_Mylast(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast

; 41   : 		: _Ptr(_Parg)

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR $T21[rbp-128], rcx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T21[rbp-128]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 78   : 		++_Ptr;

	mov	rax, QWORD PTR it$24[rbp-128]
	add	rax, 32					; 00000020H
	mov	QWORD PTR it$24[rbp-128], rax

; 165  : 		return (_Ptr == _Right._Ptr);

	cmp	rax, QWORD PTR $T21[rbp-128]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	je	$LN98@writeValue
	npad	4
$LL4@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, r14
	mov	rcx, rdi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	mov	rbx, QWORD PTR it$24[rbp-128]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1091 :    return (*this)[ key.c_str() ];

	mov	rcx, rbx
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	mov	rcx, rsi
	call	??AValue@Json@@QEBAAEBV01@PEBD@Z	; Json::Value::operator[]
	mov	r14, rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rdx, rax
	mov	rcx, rdi
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	mov	rcx, rbx
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	lea	rcx, QWORD PTR $T19[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1
	mov	rdx, rax
	mov	rcx, rdi
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T19[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_03MCPBMLDJ@?5?3?5@
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, r14
	mov	rcx, rdi
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1629 : 		return (iterator(this->_Mylast(), _STD addressof(this->_Get_data())));

	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rbx, rax
	lea	rcx, QWORD PTR members$26[rbp-128]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast

; 41   : 		: _Ptr(_Parg)

	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR $T21[rbp-128], rcx

; 42   : 		{	// construct with pointer _Parg
; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T21[rbp-128]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 78   : 		++_Ptr;

	mov	rax, QWORD PTR it$24[rbp-128]
	add	rax, 32					; 00000020H
	mov	QWORD PTR it$24[rbp-128], rax

; 165  : 		return (_Ptr == _Right._Ptr);

	cmp	rax, QWORD PTR $T21[rbp-128]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	jne	$LL4@writeValue
$LN98@writeValue:

	mov	rdx, r14
	mov	rcx, rdi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	mov	rcx, rdi
	call	?unindent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::unindent

	lea	rdx, OFFSET FLAT:??_C@_01CELHOKLL@?$HN@
	lea	rcx, QWORD PTR $T23[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rdx, QWORD PTR $T23[rbp-128]
	mov	rcx, rdi
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
$LN103@writeValue:

	lea	rcx, QWORD PTR $T23[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR members$26[rbp-128]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN2@writeValue:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+192]
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
	npad	2
$LN102@writeValue:
	DD	$LN6@writeValue
	DD	$LN7@writeValue
	DD	$LN8@writeValue
	DD	$LN9@writeValue
	DD	$LN10@writeValue
	DD	$LN11@writeValue
	DD	$LN12@writeValue
	DD	$LN13@writeValue
?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP	; Json::StyledWriter::writeValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$0
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$1
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$2
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$3
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$4
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$5
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR members$26[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$6
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$7
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$7
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$8
	lea	rcx, QWORD PTR $T16[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$8
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$9
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$9
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$10
	lea	rcx, QWORD PTR $T23[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T10[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR members$26[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$7
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$8
	lea	rcx, QWORD PTR $T16[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$9
	lea	rcx, QWORD PTR $T19[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$24 = 32
$T21 = 40
$T25 = 48
$T23 = 56
$T19 = 56
$T16 = 56
$T15 = 56
$T10 = 56
$T7 = 56
$T5 = 56
$T3 = 56
members$26 = 88
$T12 = 88
$T2 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$10
	lea	rcx, QWORD PTR $T23[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeArrayValue, COMDAT

$LN96:
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 112				; 00000070H
	mov	QWORD PTR $T13[rsp], -2
	mov	QWORD PTR [rsp+192], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r15, rdx
	mov	rsi, rcx

	mov	rcx, rdx
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	mov	r12d, eax

	test	eax, eax
	jne	SHORT $LN7@writeArray

	lea	rdx, OFFSET FLAT:??_C@_02GPECMEKF@?$FL?$FN@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T1[rsp]
	cmp	BYTE PTR [rsi+104], r12b
	je	SHORT $LN20@writeArray

	lea	rcx, QWORD PTR [rsi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

	jmp	SHORT $LN21@writeArray
$LN20@writeArray:

	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN21@writeArray:

	lea	rcx, QWORD PTR $T1[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN10@writeArray
$LN7@writeArray:

	mov	rdx, r15
	mov	rcx, rsi
	call	?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::isMultineArray

	test	al, al
	je	$LN9@writeArray

	lea	rdx, OFFSET FLAT:??_C@_01OHGJGJJP@?$FL@
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rsi+32]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN28@writeArray

	lea	rcx, QWORD PTR [rsi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rsi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN25@writeArray

	cmp	cl, 10
	je	SHORT $LN28@writeArray

	mov	dl, 10
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN28@writeArray:

	lea	rdx, QWORD PTR [rsi+64]
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN25@writeArray:

	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR $T2[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rcx, rsi
	call	?indent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::indent
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1699 : 		return (this->_Myfirst() == this->_Mylast());

	lea	rcx, QWORD PTR [rsi+8]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	rbx, rax
	lea	rcx, QWORD PTR [rsi+8]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	r13, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv598[rsp], rax
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	xor	ebp, ebp
	mov	r14d, ebp
	npad	7
$LL2@writeArray:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 999  : }

	cmp	BYTE PTR [r15+8], 0
	jne	SHORT $LN33@writeArray

; 1000 : 

	lea	rbx, OFFSET FLAT:?null@Value@Json@@2V12@B ; Json::Value::null
	jmp	SHORT $LN32@writeArray
$LN33@writeArray:

; 175  : // //////////////////////////////////////////////////////////////////

	mov	QWORD PTR key$14[rsp], rbp

; 176  : # ifndef JSON_VALUE_USE_INTERNAL_MAP

	mov	DWORD PTR key$14[rsp+8], r14d

; 1003 : Value::operator[]( UInt index ) const

	lea	r8, QWORD PTR key$14[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR [r15]
	call	?find@?$_Tree@V?$_Tmap_traits@VCZString@Value@Json@@V23@U?$less@VCZString@Value@Json@@@std@@V?$allocator@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@5@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@@2@AEBVCZString@Value@Json@@@Z ; std::_Tree<std::_Tmap_traits<Json::Value::CZString,Json::Value,std::less<Json::Value::CZString>,std::allocator<std::pair<Json::Value::CZString const ,Json::Value> >,0> >::find
	mov	rbx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree

; 1015 : 		return (_Mypair._Get_second()._Get_second());

	mov	rdx, QWORD PTR [r15]

; 42   : 		: _Ptr(_Pnode)

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR $T8[rsp], rax

; 43   : 		{	// construct with node pointer _Pnode
; 44   : 		this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T8[rsp]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 278  : 		return (this->_Ptr == _Right._Ptr);

	cmp	rbx, QWORD PTR $T8[rsp]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1004 : {

	jne	SHORT $LN34@writeArray

; 1005 :    JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );

	lea	rbx, OFFSET FLAT:?null@Value@Json@@2V12@B ; Json::Value::null
	jmp	SHORT $LN32@writeArray
$LN34@writeArray:

; 1006 :    if ( type_ == nullValue )

	add	rbx, 48					; 00000030H
$LN32@writeArray:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rdx, rbx
	mov	rcx, rsi
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	cmp	r13, QWORD PTR tv598[rsp]
	je	SHORT $LN11@writeArray
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1736 : 		return (this->_Myfirst()[_Pos]);

	lea	rcx, QWORD PTR [rsi+8]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	edx, r14d
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1736 : 		return (this->_Myfirst()[_Pos]);

	shl	rdx, 5
	add	rdx, QWORD PTR [rax]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rcx, rsi
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent

	jmp	SHORT $LN12@writeArray
$LN11@writeArray:

	lea	rcx, QWORD PTR [rsi+32]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN71@writeArray

	lea	rcx, QWORD PTR [rsi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rsi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN93@writeArray

	cmp	cl, 10
	je	SHORT $LN71@writeArray

	mov	dl, 10
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN71@writeArray:

	lea	rdx, QWORD PTR [rsi+64]
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN93@writeArray:

	mov	rdx, rbx
	mov	rcx, rsi
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
$LN12@writeArray:

	inc	r14d
	cmp	r14d, r12d
	je	SHORT $LN86@writeArray

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, rbx
	mov	rcx, rsi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	jmp	$LL2@writeArray
$LN86@writeArray:

	mov	rdx, rbx
	mov	rcx, rsi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	lea	rcx, QWORD PTR [rsi+64]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	movsxd	rcx, DWORD PTR [rsi+100]
	sub	rax, rcx
	xor	r8d, r8d
	mov	rdx, rax
	lea	rcx, QWORD PTR [rsi+64]
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	lea	rcx, QWORD PTR $T12[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rsi+32]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN80@writeArray

	lea	rcx, QWORD PTR [rsi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rsi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN77@writeArray

	cmp	cl, 10
	je	SHORT $LN80@writeArray

	mov	dl, 10
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN80@writeArray:

	lea	rdx, QWORD PTR [rsi+64]
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN77@writeArray:

	lea	rdx, QWORD PTR $T12[rsp]
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR $T12[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	SHORT $LN10@writeArray
$LN9@writeArray:

	lea	rdx, OFFSET FLAT:??_C@_02PFNDMDBO@?$FL?5@
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	xor	ebp, ebp

	test	r12d, r12d
	je	SHORT $LN5@writeArray

	mov	edi, ebp
	npad	6
$LL6@writeArray:

	test	ebp, ebp
	je	SHORT $LN14@writeArray

	lea	rdx, OFFSET FLAT:??_C@_02KEGNLNML@?0?5@
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN14@writeArray:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1736 : 		return (this->_Myfirst()[_Pos]);

	lea	rcx, QWORD PTR [rsi+8]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	rdx, QWORD PTR [rax]
	add	rdx, rdi
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	inc	ebp
	add	rdi, 32					; 00000020H
	cmp	ebp, r12d
	jb	SHORT $LL6@writeArray
$LN5@writeArray:

	lea	rdx, OFFSET FLAT:??_C@_02DHOGEDBE@?5?$FN@
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN10@writeArray:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+192]
	add	rsp, 112				; 00000070H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeArrayValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
tv598 = 40
$T13 = 48
$T4 = 56
key$14 = 64
$T12 = 64
$T2 = 64
$T1 = 64
__$ArrayPad$ = 96
this$ = 176
value$ = 184
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T12[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
_TEXT	SEGMENT
$T28 = 32
key$29 = 40
key$30 = 40
$T14 = 128
$T5 = 128
this$ = 128
value$ = 136
$T10 = 144
$T1 = 144
?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z PROC ; Json::StyledWriter::isMultineArray, COMDAT

$LN167:
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T28[rsp], -2
	mov	QWORD PTR [rsp+136], rbx
	mov	rsi, rdx
	mov	r15, rcx

	mov	rcx, rdx
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	movsxd	r14, eax

	lea	r8d, DWORD PTR [r14+r14*2]
	cmp	r8d, DWORD PTR [r15+96]
	setge	bl

	lea	rcx, QWORD PTR [r15+8]
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear

	xor	edi, edi
	lea	r13, OFFSET FLAT:?null@Value@Json@@2V12@B ; Json::Value::null
	test	r14d, r14d
	jle	$LN3@isMultineA
$LL4@isMultineA:
	test	bl, bl
	jne	$LN16@isMultineA
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 999  : }

	cmp	BYTE PTR [rsi+8], bl
	jne	SHORT $LN19@isMultineA

; 1000 : 

	mov	rcx, r13
	jmp	SHORT $LN160@isMultineA
$LN19@isMultineA:

; 175  : // //////////////////////////////////////////////////////////////////

	mov	QWORD PTR key$30[rsp], 0

; 176  : # ifndef JSON_VALUE_USE_INTERNAL_MAP

	mov	DWORD PTR key$30[rsp+8], edi

; 1003 : Value::operator[]( UInt index ) const

	lea	r8, QWORD PTR key$30[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR [rsi]
	call	?find@?$_Tree@V?$_Tmap_traits@VCZString@Value@Json@@V23@U?$less@VCZString@Value@Json@@@std@@V?$allocator@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@5@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@@2@AEBVCZString@Value@Json@@@Z ; std::_Tree<std::_Tmap_traits<Json::Value::CZString,Json::Value,std::less<Json::Value::CZString>,std::allocator<std::pair<Json::Value::CZString const ,Json::Value> >,0> >::find
	mov	rbx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree

; 1015 : 		return (_Mypair._Get_second()._Get_second());

	mov	rdx, QWORD PTR [rsi]

; 42   : 		: _Ptr(_Pnode)

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR $T5[rsp], rax

; 43   : 		{	// construct with node pointer _Pnode
; 44   : 		this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T5[rsp]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 278  : 		return (this->_Ptr == _Right._Ptr);

	cmp	rbx, QWORD PTR $T5[rsp]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1004 : {

	jne	SHORT $LN20@isMultineA

; 1005 :    JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );

	mov	rcx, r13
	jmp	SHORT $LN160@isMultineA
$LN20@isMultineA:

; 1006 :    if ( type_ == nullValue )

	lea	rcx, QWORD PTR [rbx+48]
$LN160@isMultineA:

; 1315 :    return type_ == stringValue;

	movzx	eax, BYTE PTR [rcx+8]
	test	al, al
	je	SHORT $LN58@isMultineA
	sub	al, 6
	cmp	al, 1
	ja	SHORT $LN11@isMultineA
$LN58@isMultineA:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	test	eax, eax
	jne	SHORT $LN12@isMultineA
$LN11@isMultineA:
	xor	bl, bl
	jmp	SHORT $LN13@isMultineA
$LN12@isMultineA:
	mov	bl, 1
$LN13@isMultineA:

	inc	edi
	cmp	edi, r14d
	jl	$LL4@isMultineA
$LN3@isMultineA:

	test	bl, bl
	jne	$LN16@isMultineA

	mov	rbx, r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1515 : 		if (_Newcapacity > capacity())

	lea	rcx, QWORD PTR [r15+8]
	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	r14, rax
	jbe	SHORT $LN61@isMultineA

; 1516 : 			{	// something to do (reserve() never shrinks)
; 1517 : 			if (_Newcapacity > max_size())

	lea	rcx, QWORD PTR [r15+8]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	rbx, rax
	ja	$LN165@isMultineA

; 1520 : 				}
; 1521 : 
; 1522 : 			_Reallocate_exactly(_Newcapacity);

	mov	rdx, rbx
	lea	rcx, QWORD PTR [r15+8]
	call	?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
$LN61@isMultineA:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	BYTE PTR [r15+104], 1

	lea	ebp, DWORD PTR [r14*2+2]

	xor	edi, edi
	test	r14d, r14d
	jle	$LN6@isMultineA
$LL7@isMultineA:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 999  : }

	cmp	BYTE PTR [rsi+8], 0
	jne	SHORT $LN66@isMultineA

; 1000 : 

	mov	rdx, r13
	jmp	SHORT $LN65@isMultineA
$LN66@isMultineA:

; 175  : // //////////////////////////////////////////////////////////////////

	mov	QWORD PTR key$29[rsp], 0

; 176  : # ifndef JSON_VALUE_USE_INTERNAL_MAP

	mov	DWORD PTR key$29[rsp+8], edi

; 1003 : Value::operator[]( UInt index ) const

	lea	r8, QWORD PTR key$29[rsp]
	lea	rdx, QWORD PTR $T10[rsp]
	mov	rcx, QWORD PTR [rsi]
	call	?find@?$_Tree@V?$_Tmap_traits@VCZString@Value@Json@@V23@U?$less@VCZString@Value@Json@@@std@@V?$allocator@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@5@$0A@@std@@@std@@QEAA?AV?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@@2@AEBVCZString@Value@Json@@@Z ; std::_Tree<std::_Tmap_traits<Json::Value::CZString,Json::Value,std::less<Json::Value::CZString>,std::allocator<std::pair<Json::Value::CZString const ,Json::Value> >,0> >::find
	mov	rbx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xtree

; 1015 : 		return (_Mypair._Get_second()._Get_second());

	mov	rdx, QWORD PTR [rsi]

; 42   : 		: _Ptr(_Pnode)

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR $T14[rsp], rax

; 43   : 		{	// construct with node pointer _Pnode
; 44   : 		this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T14[rsp]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 278  : 		return (this->_Ptr == _Right._Ptr);

	cmp	rbx, QWORD PTR $T14[rsp]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1004 : {

	jne	SHORT $LN67@isMultineA

; 1005 :    JSON_ASSERT( type_ == nullValue  ||  type_ == arrayValue );

	mov	rdx, r13
	jmp	SHORT $LN65@isMultineA
$LN67@isMultineA:

; 1006 :    if ( type_ == nullValue )

	lea	rdx, QWORD PTR [rbx+48]
$LN65@isMultineA:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rcx, r15
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1736 : 		return (this->_Myfirst()[_Pos]);

	lea	rcx, QWORD PTR [r15+8]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	movsxd	rcx, edi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1736 : 		return (this->_Myfirst()[_Pos]);

	shl	rcx, 5
	add	rcx, QWORD PTR [rax]
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	add	ebp, eax

	inc	edi
	cmp	edi, r14d
	jl	$LL7@isMultineA
$LN6@isMultineA:

	mov	BYTE PTR [r15+104], 0

	cmp	ebp, DWORD PTR [r15+96]
	setge	bl
$LN16@isMultineA:

	movzx	eax, bl

	mov	rbx, QWORD PTR [rsp+136]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN165@isMultineA:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector

; 1519 : 				_Xlength();

	call	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
	int	3
$LN163@isMultineA:
?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ENDP ; Json::StyledWriter::isMultineArray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 8
value$ = 16
?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::StyledWriter::pushValue, COMDAT

	cmp	BYTE PTR [rcx+104], 0
	je	SHORT $LN2@pushValue

	add	rcx, 8
	jmp	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
$LN2@pushValue:

	add	rcx, 32					; 00000020H
	jmp	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::StyledWriter::pushValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeIndent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?writeIndent@StyledWriter@Json@@AEAAXXZ PROC		; Json::StyledWriter::writeIndent, COMDAT

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

	add	rcx, 32					; 00000020H
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN4@writeInden

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rax-1]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN1@writeInden

	cmp	cl, 10
	je	SHORT $LN4@writeInden

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN4@writeInden:

	lea	rdx, QWORD PTR [rdi+64]
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN1@writeInden:

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?writeIndent@StyledWriter@Json@@AEAAXXZ ENDP		; Json::StyledWriter::writeIndent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::StyledWriter::writeWithIndent, COMDAT

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rsi, rdx

	add	rcx, 32					; 00000020H
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN6@writeWithI

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rax-1]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN3@writeWithI

	cmp	cl, 10
	je	SHORT $LN6@writeWithI

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN6@writeWithI:

	lea	rdx, QWORD PTR [rdi+64]
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN3@writeWithI:

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rdi+32]

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi

	jmp	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::StyledWriter::writeWithIndent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?indent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
$T2 = 32
$T1 = 40
__$ArrayPad$ = 72
this$ = 96
?indent@StyledWriter@Json@@AEAAXXZ PROC			; Json::StyledWriter::indent, COMDAT

$LN6:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	QWORD PTR $T2[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

	movsxd	rdx, DWORD PTR [rcx+100]
	mov	r8b, 32					; 00000020H
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+64]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?indent@StyledWriter@Json@@AEAAXXZ ENDP			; Json::StyledWriter::indent
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T2 = 32
$T1 = 40
__$ArrayPad$ = 72
this$ = 96
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA PROC	; `Json::StyledWriter::indent'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA ENDP	; `Json::StyledWriter::indent'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 32
$T1 = 40
__$ArrayPad$ = 72
this$ = 96
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA PROC	; `Json::StyledWriter::indent'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA ENDP	; `Json::StyledWriter::indent'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?unindent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?unindent@StyledWriter@Json@@AEAAXXZ PROC		; Json::StyledWriter::unindent, COMDAT

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

	add	rcx, 64					; 00000040H
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	movsxd	rdx, DWORD PTR [rbx+100]
	lea	rcx, QWORD PTR [rbx+64]
	sub	rax, rdx
	xor	r8d, r8d
	mov	rdx, rax

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

	jmp	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
?unindent@StyledWriter@Json@@AEAAXXZ ENDP		; Json::StyledWriter::unindent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T5 = 32
$T2 = 40
$T4 = 72
__$ArrayPad$ = 104
this$ = 128
root$ = 136
?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeCommentBeforeValue, COMDAT

$LN24:
	push	rbx
	sub	rsp, 112				; 00000070H
	mov	QWORD PTR $T5[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rdx, QWORD PTR [rdx+16]
	test	rdx, rdx
	je	SHORT $LN1@writeComme
	mov	rdx, QWORD PTR [rdx]
	test	rdx, rdx
	je	SHORT $LN1@writeComme
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR [rbx+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T4[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T2[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	lea	rcx, QWORD PTR [rbx+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN1@writeComme:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rbx
	ret	0
?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeCommentBeforeValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 40
$T4 = 72
__$ArrayPad$ = 104
this$ = 128
root$ = 136
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
$T5 = 32
$T2 = 40
$T4 = 72
__$ArrayPad$ = 104
this$ = 128
root$ = 136
?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 40
$T4 = 72
__$ArrayPad$ = 104
this$ = 128
root$ = 136
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T5 = 32
$T2 = 40
$T4 = 72
__$ArrayPad$ = 104
this$ = 128
root$ = 136
?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeCommentAfterValueOnSameLine, COMDAT

$LN49:
	push	rdi
	sub	rsp, 144				; 00000090H
	mov	QWORD PTR $T10[rsp], -2
	mov	QWORD PTR [rsp+176], rbx
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rdi, rdx
	mov	rbx, rcx
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rax, QWORD PTR [rdx+16]
	test	rax, rax
	je	$LN12@writeComme
	mov	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	SHORT $LN12@writeComme
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring

; 4158 : 	return (_STD move(_Right.insert(0, _Left)));

	lea	r8, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
	xor	edx, edx
	mov	rcx, rax
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	mov	rcx, rax
	call	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	mov	rdx, rax
	lea	rcx, QWORD PTR $T6[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	add	rbx, 32					; 00000020H
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T6[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T4[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T2[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR [rdi+16]
	jmp	SHORT $LN2@writeComme
$LN12@writeComme:
	add	rbx, 32					; 00000020H
$LN2@writeComme:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	test	rax, rax
	je	SHORT $LN3@writeComme
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN3@writeComme
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rdx, QWORD PTR [rdi+16]
	test	rdx, rdx
	je	SHORT $LN32@writeComme
	mov	rdx, QWORD PTR [rdx+16]
	test	rdx, rdx
	jne	SHORT $LN46@writeComme
$LN32@writeComme:

; 1355 : }

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN46@writeComme:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR $T7[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rdx, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR $T9[rsp]
	call	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
	npad	1
	mov	rdx, rax
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN3@writeComme:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+176]
	add	rsp, 144				; 00000090H
	pop	rdi
	ret	0
?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeCommentAfterValueOnSameLine
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$1
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$4
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$1
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T10 = 32
$T7 = 40
$T2 = 40
$T9 = 72
$T4 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 160
root$ = 168
?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$4
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
value$ = 16
?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z PROC ; Json::StyledWriter::hasCommentForValue, COMDAT
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rax, QWORD PTR [rdx+16]
	test	rax, rax
	je	SHORT $LN15@hasComment
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN3@hasComment
	test	rax, rax
	je	SHORT $LN15@hasComment
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN3@hasComment
	test	rax, rax
	je	SHORT $LN15@hasComment
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN15@hasComment
$LN3@hasComment:
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	al, 1

	ret	0
$LN15@hasComment:

	xor	al, al

	ret	0
?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ENDP ; Json::StyledWriter::hasCommentForValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File d:\code\libshared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 80
text$ = 88
?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z PROC ; Json::StyledWriter::normalizeEOL, COMDAT

$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r14
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+88], rbx
	mov	QWORD PTR [rsp+96], rbp
	mov	rdi, rdx
	mov	rbp, rcx
	mov	DWORD PTR $T1[rsp], 0

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	DWORD PTR $T1[rsp], 1

	mov	rcx, rdi
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	rdx, rax
	mov	rcx, rbp
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	mov	rcx, rdi
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rbx, rax

	mov	rcx, rdi
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	r14, QWORD PTR [rbx+rax]

	cmp	rbx, r14
	je	SHORT $LN13@normalizeE
	npad	6
$LL2@normalizeE:

	mov	rsi, rbx
	movzx	edx, BYTE PTR [rbx]
	inc	rbx

	mov	rcx, rbp
	cmp	dl, 13
	jne	SHORT $LN4@normalizeE

	movzx	edi, BYTE PTR [rbx]

	mov	dl, 10
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	cmp	dil, 10
	cmovne	rbx, rsi

	jmp	SHORT $LN5@normalizeE
$LN4@normalizeE:

	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	mov	rbx, rsi
$LN5@normalizeE:

	inc	rbx
	cmp	rbx, r14
	jne	SHORT $LL2@normalizeE
$LN13@normalizeE:

	mov	rax, rbp
	mov	rbx, QWORD PTR [rsp+88]
	mov	rbp, QWORD PTR [rsp+96]
	add	rsp, 48					; 00000030H
	pop	r14
	pop	rdi
	pop	rsi
	ret	0
	int	3
?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ENDP ; Json::StyledWriter::normalizeEOL
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 80
text$ = 88
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA PROC ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA ENDP ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 80
text$ = 88
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA PROC ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA ENDP ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=, COMDAT

; 170  : 		return (!(*this == _Right));

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	setne	al

; 171  : 		}

	ret	0
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==, COMDAT

; 164  : 		_Compat(_Right);
; 165  : 		return (_Ptr == _Right._Ptr);

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 166  : 		}

	ret	0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT

; 78   : 		++_Ptr;

	add	QWORD PTR [rcx], 32			; 00000020H

; 268  : 		++*(_Mybase *)this;
; 269  : 		return (*this);

	mov	rax, rcx

; 270  : 		}

	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT

; 258  : 		return (const_cast<reference>(_Mybase::operator*()));

	mov	rax, QWORD PTR [rcx]

; 259  : 		}

	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
_TEXT	SEGMENT
this$ = 48
_Pos$ = 56
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT

; 1731 : 		{	// subscript mutable sequence

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx

; 1732 :  #if _ITERATOR_DEBUG_LEVEL != 0
; 1733 : 		_STL_VERIFY(_Pos < size(), "vector subscript out of range");
; 1734 :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1735 : 
; 1736 : 		return (this->_Myfirst()[_Pos]);

	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	shl	rbx, 5
	add	rbx, QWORD PTR [rax]
	mov	rax, rbx

; 1737 : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 48
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty, COMDAT

; 1698 : 		{	// test if sequence is empty

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 1699 : 		return (this->_Myfirst() == this->_Mylast());

	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	rcx, rbx
	mov	rdi, rax
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast

; 1700 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rcx, QWORD PTR [rax]
	cmp	QWORD PTR [rdi], rcx
	sete	al
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end, COMDAT

; 1628 : 		{	// return iterator for end of mutable sequence

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rbx, rcx

; 1629 : 		return (iterator(this->_Mylast(), _STD addressof(this->_Get_data())));

	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rcx, rbx
	mov	rdi, rax
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast

; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [rsi], rcx
	mov	rcx, rsi
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 1630 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin, COMDAT

; 1618 : 		{	// return iterator for beginning of mutable sequence

$LN11:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rbx, rcx

; 1619 : 		return (iterator(this->_Myfirst(), _STD addressof(this->_Get_data())));

	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Get_data
	mov	rcx, rbx
	mov	rdi, rax
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst

; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	mov	QWORD PTR [rsi], rcx
	mov	rcx, rsi
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 1620 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rsi
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT

; 1589 : 		{	// erase all

$LN5:
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T1[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	rdi, rcx

; 1590 : 		this->_Orphan_all();

	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Orphan_all
	npad	1

; 1591 : 		_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, rdi
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	npad	1
	mov	rbx, QWORD PTR [rax]
	mov	rcx, rdi
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	npad	1
	mov	r8, rbx
	mov	rdx, QWORD PTR [rax]
	mov	rcx, rdi
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
	npad	1

; 1592 : 		this->_Mylast() = this->_Myfirst();

	mov	rcx, rdi
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	npad	1
	mov	rbx, rax
	mov	rcx, rdi
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	npad	1
	mov	rcx, QWORD PTR [rbx]
	mov	QWORD PTR [rax], rcx

; 1593 : 		}

	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve, COMDAT

; 1514 : 		{	// increase capacity to _Newcapacity (without geometric growth), provide strong guarantee

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 1515 : 		if (_Newcapacity > capacity())

	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	rbx, rax
	jbe	SHORT $LN2@reserve

; 1516 : 			{	// something to do (reserve() never shrinks)
; 1517 : 			if (_Newcapacity > max_size())

	mov	rcx, rdi
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	rbx, rax
	ja	SHORT $LN7@reserve

; 1520 : 				}
; 1521 : 
; 1522 : 			_Reallocate_exactly(_Newcapacity);

	mov	rdx, rbx
	mov	rcx, rdi
	call	?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
$LN2@reserve:

; 1523 : 			}
; 1524 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@reserve:

; 1518 : 				{
; 1519 : 				_Xlength();

	call	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
	int	3
$LN5@reserve:
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
$T4 = 40
$T8 = 48
__$ReturnUdt$GSCopy$ = 56
this$ = 80
__$ReturnUdt$ = 88
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 623  : 		{	// return string copy of character array

$LN31:
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T8[rsp], -2
	mov	QWORD PTR [rsp+96], rbx
	mov	rbx, rdx
	mov	rdi, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rdx
	mov	DWORD PTR $T1[rsp], 0

; 96   : 		_Mystr _Result(_Al);

	lea	rdx, QWORD PTR [rcx+124]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 103  : 			{	// readable, make string from read buffer
; 104  : 			const auto _Base = _Mysb::eback();
; 105  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));
; 106  : 			}
; 107  : 
; 108  : 		return (_Result);

	mov	DWORD PTR $T1[rsp], 2

; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)

	mov	ecx, DWORD PTR [rdi+120]
	test	cl, 2
	jne	SHORT $LN6@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rdi+72]
	mov	r9, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)

	test	r9, r9
	je	SHORT $LN6@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 230  : 		return (*_IPfirst);

	mov	rax, QWORD PTR [rdi+40]
	mov	rdx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 100  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	mov	QWORD PTR $T4[rsp], r9
	lea	rcx, QWORD PTR [rdi+112]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 33   : 	return (_Left < _Right ? _Right : _Left);

	lea	r8, QWORD PTR $T4[rsp]
	cmp	r9, QWORD PTR [rcx]
	cmovb	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 100  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	mov	r8, QWORD PTR [r8]
	sub	r8, rdx
	jmp	SHORT $LN28@str
$LN6@str:

; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)

	test	cl, 4
	jne	SHORT $LN26@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rdi+64]
	mov	rcx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)

	test	rcx, rcx
	je	SHORT $LN26@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rdi+32]
	mov	rdx, QWORD PTR [rax]

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [rdi+88]
	movsxd	r8, DWORD PTR [rax]
	sub	r8, rdx
	add	r8, rcx
$LN28@str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 625  : 		}

	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1
$LN26@str:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T4 = 40
$T8 = 48
__$ReturnUdt$GSCopy$ = 56
this$ = 80
__$ReturnUdt$ = 88
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN11@dtor$1
	and	DWORD PTR $T1[rbp], -3
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T4 = 40
$T8 = 48
__$ReturnUdt$GSCopy$ = 56
this$ = 80
__$ReturnUdt$ = 88
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN11@dtor$1
	and	DWORD PTR $T1[rbp], -3
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 614  : 		{	// destroy the object

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR [rcx-136]
	mov	rbx, rcx
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rcx-136], rax
	mov	rax, QWORD PTR [rcx-136]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-136]
	mov	DWORD PTR [rdx+rcx-140], r8d

; 615  : 		}

	add	rcx, -128				; ffffffffffffff80H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx-120]
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
$T2 = 32
this$ = 64
_Mode$dead$ = 72
$initVBases$dead$ = 80
$T1 = 80
this$ = 88
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 570  : 		{	// construct empty writable character buffer

$LN19:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T2[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0
	lea	rax, OFFSET FLAT:??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rsp], 1

; 34   : 		}
; 35   : 
; 36   : 	explicit basic_stringbuf(const _Mystr& _Str, ios_base::openmode _Mode = ios_base::in | ios_base::out)
; 37   : 		: _Al(_Str.get_allocator())
; 38   : 		{	// construct character buffer from string, mode
; 39   : 		_Init(_Str.c_str(), _Str.size(), _Getstate(_Mode));
; 40   : 		}
; 41   : 
; 42   : 	basic_stringbuf(basic_stringbuf&& _Right)
; 43   : 		{	// construct by moving _Right
; 44   : 		_Assign_rv(_STD move(_Right));
; 45   : 		}
; 46   : 
; 47   : 	basic_stringbuf& operator=(basic_stringbuf&& _Right)
; 48   : 		{	// assign from _Right
; 49   : 		_Assign_rv(_STD move(_Right));
; 50   : 		return (*this);
; 51   : 		}
; 52   : 
; 53   : 	void _Assign_rv(basic_stringbuf&& _Right)
; 54   : 		{	// assign by moving _Right
; 55   : 		if (this != _STD addressof(_Right))
; 56   : 			{	// different, worth moving
; 57   : 			_Tidy();
; 58   : 			this->swap(_Right);
; 59   : 			}
; 60   : 		}
; 61   : 
; 62   : 	void swap(basic_stringbuf& _Right)
; 63   : 		{	// swap with _Right
; 64   : 		if (this != _STD addressof(_Right))
; 65   : 			{	// different, worth swapping
; 66   : 			_Mysb::swap(_Right);
; 67   : 			_STD swap(_Seekhigh, _Right._Seekhigh);
; 68   : 			_STD swap(_Mystate, _Right._Mystate);
; 69   : 			_Swap_adl(_Al, _Right._Al);
; 70   : 			}
; 71   : 		}
; 72   : 
; 73   : 	basic_stringbuf(const basic_stringbuf&) = delete;
; 74   : 	basic_stringbuf& operator=(const basic_stringbuf&) = delete;
; 75   : 
; 76   : 	virtual ~basic_stringbuf() noexcept
; 77   : 		{	// destroy the object
; 78   : 		_Tidy();
; 79   : 		}
; 80   : 
; 81   : 	enum
; 82   : 		{	// constants for bits in stream state
; 83   : 		_Allocated = 1,	// set if character array storage has been allocated, eback() points to allocated storage
; 84   : 		_Constant = 2,	// set if character array nonmutable
; 85   : 		_Noread = 4,	// set if character array cannot be read
; 86   : 		_Append = 8,	// set if all writes are appends
; 87   : 		_Atend = 16		// set if initial writes are appends
; 88   : 		};
; 89   : 
; 90   : 	using int_type = typename _Traits::int_type;
; 91   : 	using pos_type = typename _Traits::pos_type;
; 92   : 	using off_type = typename _Traits::off_type;
; 93   : 
; 94   : 	_NODISCARD _Mystr str() const
; 95   : 		{	// return string copy of character array
; 96   : 		_Mystr _Result(_Al);
; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)
; 98   : 			{	// writable, make string from write buffer
; 99   : 			const auto _Base = _Mysb::pbase();
; 100  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));
; 101  : 			}
; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)
; 103  : 			{	// readable, make string from read buffer
; 104  : 			const auto _Base = _Mysb::eback();
; 105  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));
; 106  : 			}
; 107  : 
; 108  : 		return (_Result);
; 109  : 		}
; 110  : 
; 111  : 	void str(const _Mystr& _Newstr)
; 112  : 		{	// replace character array from string
; 113  : 		_Tidy();
; 114  : 		_Init(_Newstr.c_str(), _Newstr.size(), _Mystate);
; 115  : 		}
; 116  : 
; 117  : protected:
; 118  : 	virtual int_type overflow(int_type _Meta = _Traits::eof())
; 119  : 		{	// put an element to stream
; 120  : 		if (_Mystate & _Constant)
; 121  : 			{
; 122  : 			return (_Traits::eof());	// array nonmutable, fail
; 123  : 			}
; 124  : 
; 125  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))
; 126  : 			{
; 127  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code
; 128  : 			}
; 129  : 
; 130  : 		const auto _Pptr = _Mysb::pptr();
; 131  : 		const auto _Epptr = _Mysb::epptr();
; 132  : 		if (_Pptr != nullptr && _Pptr < _Epptr)
; 133  : 			{	// room in buffer, store it
; 134  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);
; 135  : 			_Seekhigh = _Pptr + 1;
; 136  : 			return (_Meta);
; 137  : 			}
; 138  : 
; 139  : 		// grow buffer and store element
; 140  : 		size_t _Oldsize = 0;
; 141  : 		const auto _Oldptr = _Mysb::eback();
; 142  : 		if (_Pptr != nullptr)
; 143  : 			{
; 144  : 			_Oldsize = static_cast<size_t>(_Epptr - _Oldptr);
; 145  : 			}
; 146  : 
; 147  : 		size_t _Newsize;
; 148  : 		if (_Oldsize < _MINSIZE)
; 149  : 			{
; 150  : 			_Newsize = _MINSIZE;
; 151  : 			}
; 152  : 		else if (_Oldsize < INT_MAX / 2)
; 153  : 			{	// grow by 50 percent
; 154  : 			_Newsize = _Oldsize << 1;
; 155  : 			}
; 156  : 		else if (_Oldsize < INT_MAX)
; 157  : 			{
; 158  : 			_Newsize = INT_MAX;
; 159  : 			}
; 160  : 		else
; 161  : 			{	// buffer can't grow, fail
; 162  : 			return (_Traits::eof());
; 163  : 			}
; 164  : 
; 165  : 		const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));
; 166  : 		_Traits::copy(_Newptr, _Oldptr, _Oldsize);
; 167  : 
; 168  : 		const auto _New_pnext = _Newptr + _Oldsize;
; 169  : 		_Seekhigh = _New_pnext + 1; // to include _Meta
; 170  : 
; 171  : 		_Mysb::setp(_Newptr, _New_pnext, _Newptr + _Newsize);
; 172  : 		if (_Mystate & _Noread)
; 173  : 			{	// maintain eback() == allocated pointer invariant
; 174  : 			_Mysb::setg(_Newptr, nullptr, _Newptr);
; 175  : 			}
; 176  : 		else
; 177  : 			{	// if readable, set the get area to initialized region
; 178  : 			_Mysb::setg(_Newptr,
; 179  : 				_Newptr + (_Mysb::gptr() - _Oldptr),
; 180  : 				_Seekhigh);
; 181  : 			}
; 182  : 
; 183  : 		if (_Mystate & _Allocated)
; 184  : 			{
; 185  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);
; 186  : 			}
; 187  : 
; 188  : 		_Mystate |= _Allocated;
; 189  : 		*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);
; 190  : 		return (_Meta);
; 191  : 		}
; 192  : 
; 193  : 	virtual int_type pbackfail(int_type _Meta = _Traits::eof())
; 194  : 		{	// put an element back to stream
; 195  : 		const auto _Gptr = _Mysb::gptr();
; 196  : 		if (_Gptr == nullptr
; 197  : 			|| _Gptr <= _Mysb::eback()
; 198  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)
; 199  : 				&& !_Traits::eq(_Traits::to_char_type(_Meta), _Gptr[-1])
; 200  : 				&& (_Mystate & _Constant)))
; 201  : 			{	// can't put back, fail
; 202  : 			return (_Traits::eof());
; 203  : 			}
; 204  : 
; 205  : 		// back up one position and store put-back character
; 206  : 		_Mysb::gbump(-1);
; 207  : 		if (!_Traits::eq_int_type(_Traits::eof(), _Meta))
; 208  : 			{
; 209  : 			*_Mysb::gptr() = _Traits::to_char_type(_Meta);
; 210  : 			}
; 211  : 
; 212  : 		return (_Traits::not_eof(_Meta));
; 213  : 		}
; 214  : 
; 215  : 	virtual int_type underflow()
; 216  : 		{	// get an element from stream, but don't point past it
; 217  : 		const auto _Gptr = _Mysb::gptr();
; 218  : 		if (_Gptr == nullptr)
; 219  : 			{	// no character buffer, fail
; 220  : 			return (_Traits::eof());
; 221  : 			}
; 222  : 
; 223  : 		if (_Gptr < _Mysb::egptr())
; 224  : 			{	// return buffered
; 225  : 			return (_Traits::to_int_type(*_Gptr));
; 226  : 			}
; 227  : 
; 228  : 		// try to add initialized characters from the put area into the get area
; 229  : 		const auto _Pptr = _Mysb::pptr();
; 230  : 		if (!_Pptr || (_Mystate & _Noread))
; 231  : 			{	// no put area or read disallowed
; 232  : 			return (_Traits::eof());
; 233  : 			}
; 234  : 
; 235  : 		const auto _Local_highwater = _Max_value(_Seekhigh, _Pptr);
; 236  : 		if (_Local_highwater <= _Gptr)
; 237  : 			{	// nothing in the put area to take
; 238  : 			return (_Traits::eof());
; 239  : 			}
; 240  : 
; 241  : 		_Seekhigh = _Local_highwater;
; 242  : 		_Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Local_highwater);
; 243  : 		return (_Traits::to_int_type(*_Mysb::gptr()));
; 244  : 		}
; 245  : 
; 246  : 	virtual pos_type seekoff(off_type _Off,
; 247  : 		ios_base::seekdir _Way,
; 248  : 		ios_base::openmode _Mode = ios_base::in | ios_base::out)
; 249  : 		{	// change position by _Off, according to _Way, _Mode
; 250  : 		const auto _Gptr_old = _Mysb::gptr();
; 251  : 		const auto _Pptr_old = _Mysb::pptr();
; 252  : 		if (_Pptr_old != nullptr && _Seekhigh < _Pptr_old)
; 253  : 			{	// update high-water pointer
; 254  : 			_Seekhigh = _Pptr_old;
; 255  : 			}
; 256  : 
; 257  : 		const auto _Seeklow = _Mysb::eback();
; 258  : 		const auto _Seekdist = _Seekhigh - _Seeklow;
; 259  : 		off_type _Newoff;
; 260  : 		switch (_Way)
; 261  : 			{
; 262  : 			case ios_base::beg:
; 263  : 				_Newoff = 0;
; 264  : 				break;
; 265  : 			case ios_base::end:
; 266  : 				_Newoff = _Seekdist;
; 267  : 				break;
; 268  : 			case ios_base::cur:
; 269  : 				{
; 270  : 				constexpr auto _Both = ios_base::in | ios_base::out;
; 271  : 				if ((_Mode & _Both) != _Both)
; 272  : 					{	// prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"
; 273  : 					if (_Mode & ios_base::in)
; 274  : 						{
; 275  : 						if (_Gptr_old != nullptr || _Seeklow == nullptr)
; 276  : 							{
; 277  : 							_Newoff = _Gptr_old - _Seeklow;
; 278  : 							break;
; 279  : 							}
; 280  : 						}
; 281  : 					else if ((_Mode & ios_base::out) && (_Pptr_old != nullptr || _Seeklow == nullptr))
; 282  : 						{
; 283  : 						_Newoff = _Pptr_old - _Seeklow;
; 284  : 						break;
; 285  : 						}
; 286  : 					}
; 287  : 				}
; 288  : 
; 289  : 				// fallthrough
; 290  : 			default:
; 291  : 				return (pos_type(off_type(-1)));
; 292  : 			}
; 293  : 
; 294  : 		if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist))
; 295  : 			{
; 296  : 			return (pos_type(off_type(-1)));
; 297  : 			}
; 298  : 
; 299  : 		_Off += _Newoff;
; 300  : 		if (_Off != 0
; 301  : 			&& (((_Mode & ios_base::in) && _Gptr_old == nullptr)
; 302  : 				|| ((_Mode & ios_base::out) && _Pptr_old == nullptr)))
; 303  : 			{
; 304  : 			return (pos_type(off_type(-1)));
; 305  : 			}
; 306  : 
; 307  : 		const auto _Newptr = _Seeklow + _Off;	// may perform nullptr + 0
; 308  : 		if ((_Mode & ios_base::in) && _Gptr_old != nullptr)
; 309  : 			{
; 310  : 			_Mysb::setg(_Seeklow, _Newptr, _Seekhigh);
; 311  : 			}
; 312  : 
; 313  : 		if ((_Mode & ios_base::out) && _Pptr_old != nullptr)
; 314  : 			{
; 315  : 			_Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());
; 316  : 			}
; 317  : 
; 318  : 		return (pos_type(_Off));
; 319  : 		}
; 320  : 
; 321  : 	virtual pos_type seekpos(pos_type _Pos,
; 322  : 		ios_base::openmode _Mode = ios_base::in | ios_base::out)
; 323  : 		{	// change position to _Pos, according to _Mode
; 324  : 		const auto _Off = static_cast<streamoff>(_Pos);
; 325  : 		const auto _Gptr_old = _Mysb::gptr();
; 326  : 		const auto _Pptr_old = _Mysb::pptr();
; 327  : 		if (_Pptr_old != nullptr && _Seekhigh < _Pptr_old)
; 328  : 			{	// update high-water pointer
; 329  : 			_Seekhigh = _Pptr_old;
; 330  : 			}
; 331  : 
; 332  : 		const auto _Seeklow = _Mysb::eback();
; 333  : 		const auto _Seekdist = _Seekhigh - _Seeklow;
; 334  : 		if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist))
; 335  : 			{
; 336  : 			return (pos_type(off_type(-1)));
; 337  : 			}
; 338  : 
; 339  : 		if (_Off != 0
; 340  : 			&& (((_Mode & ios_base::in) && _Gptr_old == nullptr)
; 341  : 				|| ((_Mode & ios_base::out) && _Pptr_old == nullptr)))
; 342  : 			{
; 343  : 			return (pos_type(off_type(-1)));
; 344  : 			}
; 345  : 
; 346  : 		const auto _Newptr = _Seeklow + _Off;	// may perform nullptr + 0
; 347  : 		if ((_Mode & ios_base::in) && _Gptr_old != nullptr)
; 348  : 			{
; 349  : 			_Mysb::setg(_Seeklow, _Newptr, _Seekhigh);
; 350  : 			}
; 351  : 
; 352  : 		if ((_Mode & ios_base::out) && _Pptr_old != nullptr)
; 353  : 			{
; 354  : 			_Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());
; 355  : 			}
; 356  : 
; 357  : 		return (pos_type(_Off));
; 358  : 		}
; 359  : 
; 360  : 	void _Init(const _Elem * _Ptr, _Mysize_type _Count, int _State)
; 361  : 		{	// initialize buffer to [_Ptr, _Ptr + _Count), set state
; 362  : 		if (_Count > INT_MAX)
; 363  : 			{	// TRANSITION, VSO#485517
; 364  : 			_Xbad_alloc();
; 365  : 			}
; 366  : 
; 367  : 		if (_Count != 0 && (_State & (_Noread | _Constant)) != (_Noread | _Constant))
; 368  : 			{	// finite buffer that can be read or written, set it up
; 369  : 			const auto _Pnew = _Unfancy(_Al.allocate(_Count));
; 370  : 			_Traits::copy(_Pnew, _Ptr, _Count);
; 371  : 			_Seekhigh = _Pnew + _Count;
; 372  : 
; 373  : 			if (!(_State & _Noread))
; 374  : 				{
; 375  : 				_Mysb::setg(_Pnew, _Pnew, _Seekhigh);	// setup read buffer
; 376  : 				}
; 377  : 
; 378  : 			if (!(_State & _Constant))
; 379  : 				{	// setup write buffer, and maybe read buffer
; 380  : 				_Mysb::setp(_Pnew,
; 381  : 					(_State & (_Atend | _Append)) ? _Seekhigh : _Pnew,
; 382  : 					_Seekhigh);
; 383  : 
; 384  : 				if (_State & _Noread)
; 385  : 					{	// maintain "_Allocated == eback() points to buffer base" invariant
; 386  : 					_Mysb::setg(_Pnew, nullptr, _Pnew);
; 387  : 					}
; 388  : 				}
; 389  : 
; 390  : 			_State |= _Allocated;
; 391  : 			}
; 392  : 		else
; 393  : 			{
; 394  : 			_Seekhigh = nullptr;
; 395  : 			}
; 396  : 
; 397  : 		_Mystate = _State;
; 398  : 		}
; 399  : 
; 400  : 	void _Tidy()
; 401  : 		{	// discard any allocated buffer and clear pointers
; 402  : 		if (_Mystate & _Allocated)
; 403  : 			{
; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),
; 405  : 				static_cast<typename allocator_traits<allocator_type>::size_type>(
; 406  : 					(_Mysb::pptr() != nullptr ? _Mysb::epptr() : _Mysb::egptr()) - _Mysb::eback()));
; 407  : 			}
; 408  : 
; 409  : 		_Mysb::setg(nullptr, nullptr, nullptr);
; 410  : 		_Mysb::setp(nullptr, nullptr);
; 411  : 		_Seekhigh = nullptr;
; 412  : 		_Mystate &= ~_Allocated;
; 413  : 		}
; 414  : 
; 415  : private:
; 416  : 	using _Ptr_traits = pointer_traits<typename allocator_traits<allocator_type>::pointer>;
; 417  : 
; 418  : 	enum
; 419  : 		{	// constant for minimum buffer size
; 420  : 		_MINSIZE = 32
; 421  : 		};
; 422  : 
; 423  : 	static int _Getstate(ios_base::openmode _Mode)
; 424  : 		{	// convert open mode to stream state bits
; 425  : 		int _State = 0;
; 426  : 		if (!(_Mode & ios_base::in))
; 427  : 			{
; 428  : 			_State |= _Noread;
; 429  : 			}
; 430  : 
; 431  : 		if (!(_Mode & ios_base::out))
; 432  : 			{
; 433  : 			_State |= _Constant;
; 434  : 			}
; 435  : 
; 436  : 		if (_Mode & ios_base::app)
; 437  : 			{
; 438  : 			_State |= _Append;
; 439  : 			}
; 440  : 
; 441  : 		if (_Mode & ios_base::ate)
; 442  : 			{
; 443  : 			_State |= _Atend;
; 444  : 			}
; 445  : 
; 446  : 		return (_State);
; 447  : 		}
; 448  : 
; 449  : 	_Elem * _Seekhigh;	// the high-water pointer in character array
; 450  : 	int _Mystate;	// the stream state
; 451  : 	allocator_type _Al;	// the allocator object
; 452  : 	};
; 453  : 
; 454  : template<class _Elem,
; 455  : 	class _Traits,
; 456  : 	class _Alloc> inline
; 457  : 	void swap(basic_stringbuf<_Elem, _Traits, _Alloc>& _Left,
; 458  : 		basic_stringbuf<_Elem, _Traits, _Alloc>& _Right)
; 459  : 	{	// swap _Left and _Right basic_stringbufs
; 460  : 	_Left.swap(_Right);
; 461  : 	}
; 462  : 
; 463  : 		// CLASS TEMPLATE basic_istringstream
; 464  : template<class _Elem,
; 465  : 	class _Traits,
; 466  : 	class _Alloc>
; 467  : 	class basic_istringstream
; 468  : 		: public basic_istream<_Elem, _Traits>
; 469  : 	{	// input stream associated with a character array
; 470  : public:
; 471  : 	typedef basic_istream<_Elem, _Traits> _Mybase;
; 472  : 	typedef _Alloc allocator_type;
; 473  : 	typedef basic_stringbuf<_Elem, _Traits, _Alloc> _Mysb;
; 474  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 475  : 
; 476  : 	explicit basic_istringstream(ios_base::openmode _Mode = ios_base::in)
; 477  : 		: _Mybase(&_Stringbuffer),
; 478  : 			_Stringbuffer(_Mode | ios_base::in)
; 479  : 		{	// construct empty readable character buffer
; 480  : 		}
; 481  : 
; 482  : 	explicit basic_istringstream(const _Mystr& _Str,
; 483  : 		ios_base::openmode _Mode = ios_base::in)
; 484  : 		: _Mybase(&_Stringbuffer),
; 485  : 			_Stringbuffer(_Str, _Mode | ios_base::in)
; 486  : 		{	// construct readable character buffer from NTCS
; 487  : 		}
; 488  : 
; 489  : 	basic_istringstream(basic_istringstream&& _Right)
; 490  : 		: _Mybase(&_Stringbuffer)
; 491  : 		{	// construct by moving _Right
; 492  : 		_Assign_rv(_STD move(_Right));
; 493  : 		}
; 494  : 
; 495  : 	basic_istringstream& operator=(basic_istringstream&& _Right)
; 496  : 		{	// move from _Right
; 497  : 		_Assign_rv(_STD move(_Right));
; 498  : 		return (*this);
; 499  : 		}
; 500  : 
; 501  : 	void _Assign_rv(basic_istringstream&& _Right)
; 502  : 		{	// assign by moving _Right
; 503  : 		if (this != _STD addressof(_Right))
; 504  : 			{	// different, worth moving
; 505  : 			_Stringbuffer.str(_Mystr());
; 506  : 			this->swap(_Right);
; 507  : 			}
; 508  : 		}
; 509  : 
; 510  : 	void swap(basic_istringstream& _Right)
; 511  : 		{	// swap with _Right
; 512  : 		if (this != _STD addressof(_Right))
; 513  : 			{	// different, swap base and buffer
; 514  : 			_Mybase::swap(_Right);
; 515  : 			_Stringbuffer.swap(_Right._Stringbuffer);
; 516  : 			}
; 517  : 		}
; 518  : 
; 519  : 	basic_istringstream(const basic_istringstream&) = delete;
; 520  : 	basic_istringstream& operator=(const basic_istringstream&) = delete;
; 521  : 
; 522  : 	virtual ~basic_istringstream() noexcept
; 523  : 		{	// destroy the object
; 524  : 		}
; 525  : 
; 526  : 	_NODISCARD _Mysb *rdbuf() const
; 527  : 		{	// return pointer to file buffer
; 528  : 		return ((_Mysb *)&_Stringbuffer);
; 529  : 		}
; 530  : 
; 531  : 	_NODISCARD _Mystr str() const
; 532  : 		{	// return string copy of character array
; 533  : 		return (_Stringbuffer.str());
; 534  : 		}
; 535  : 
; 536  : 	void str(const _Mystr& _Newstr)
; 537  : 		{	// replace character array from string
; 538  : 		_Stringbuffer.str(_Newstr);
; 539  : 		}
; 540  : 
; 541  : private:
; 542  : 	_Mysb _Stringbuffer;	// the string buffer
; 543  : 	};
; 544  : 
; 545  : template<class _Elem,
; 546  : 	class _Traits,
; 547  : 	class _Alloc> inline
; 548  : 	void swap(basic_istringstream<_Elem, _Traits, _Alloc>& _Left,
; 549  : 		basic_istringstream<_Elem, _Traits, _Alloc>& _Right)
; 550  : 	{	// swap _Left and _Right basic_istringstreams
; 551  : 	_Left.swap(_Right);
; 552  : 	}
; 553  : 
; 554  : 		// CLASS TEMPLATE basic_ostringstream
; 555  : template<class _Elem,
; 556  : 	class _Traits,
; 557  : 	class _Alloc>
; 558  : 	class basic_ostringstream
; 559  : 		: public basic_ostream<_Elem, _Traits>
; 560  : 	{	// output stream associated with a character array
; 561  : public:
; 562  : 	typedef basic_ostream<_Elem, _Traits> _Mybase;
; 563  : 	typedef _Alloc allocator_type;
; 564  : 	typedef basic_stringbuf<_Elem, _Traits, _Alloc> _Mysb;
; 565  : 	typedef basic_string<_Elem, _Traits, _Alloc> _Mystr;
; 566  : 
; 567  : 	explicit basic_ostringstream(ios_base::openmode _Mode = ios_base::out)
; 568  : 		: _Mybase(&_Stringbuffer),

	lea	rbx, QWORD PTR [rdi+8]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rdx, rbx
	mov	rcx, rdi
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1

; 570  : 		{	// construct empty writable character buffer

	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx+rdi], rax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR [rcx+rdi-4], edx

; 569  : 			_Stringbuffer(_Mode | ios_base::out)

	mov	QWORD PTR this$[rsp], rbx

; 33   : 		{	// construct empty character buffer from mode

	mov	rcx, rbx
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rbx], rax

; 30   : 		: _Seekhigh(nullptr),

	mov	QWORD PTR [rbx+104], 0

; 31   : 		_Mystate(_Getstate(_Mode)),

	mov	DWORD PTR [rbx+112], 4

; 32   : 		_Al()

	lea	rcx, QWORD PTR [rbx+116]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	npad	1

; 571  : 		}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T2 = 32
this$ = 64
_Mode$dead$ = 72
$initVBases$dead$ = 80
$T1 = 80
this$ = 88
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
$T2 = 32
this$ = 64
_Mode$dead$ = 72
$initVBases$dead$ = 80
$T1 = 80
this$ = 88
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 32
this$ = 64
_Mode$dead$ = 72
$initVBases$dead$ = 80
$T1 = 80
this$ = 88
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T2 = 32
this$ = 64
_Mode$dead$ = 72
$initVBases$dead$ = 80
$T1 = 80
this$ = 88
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
this$ = 8
__$ReturnUdt$ = 16
_Pos$ = 24
_Mode$ = 32
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT

; 323  : 		{	// change position to _Pos, according to _Mode

$LN32:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	mov	QWORD PTR [rsp+32], r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 55   : 		return (_Myoff + _Fpos);

	mov	r11, QWORD PTR [r8+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 323  : 		{	// change position to _Pos, according to _Mode

	mov	ebx, r9d
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 55   : 		return (_Myoff + _Fpos);

	add	r11, QWORD PTR [r8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 323  : 		{	// change position to _Pos, according to _Mode

	mov	r10, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rcx+64]

; 225  : 		return (*_IGnext);

	mov	r14, QWORD PTR [rcx+56]

; 235  : 		return (*_IPnext);

	mov	r8, QWORD PTR [rax]

; 225  : 		return (*_IGnext);

	mov	rsi, QWORD PTR [r14]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 327  : 		if (_Pptr_old != nullptr && _Seekhigh < _Pptr_old)

	test	r8, r8
	je	SHORT $LN2@seekpos
	cmp	QWORD PTR [rcx+104], r8
	jae	SHORT $LN2@seekpos

; 328  : 			{	// update high-water pointer
; 329  : 			_Seekhigh = _Pptr_old;

	mov	QWORD PTR [rcx+104], r8
$LN2@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 333  : 		const auto _Seekdist = _Seekhigh - _Seeklow;

	mov	rcx, QWORD PTR [rcx+104]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rdi, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 333  : 		const auto _Seekdist = _Seekhigh - _Seeklow;

	mov	rax, rcx
	sub	rax, rdi

; 334  : 		if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist))

	cmp	r11, rax
	jbe	SHORT $LN3@seekpos
$LN5@seekpos:

; 358  : 		}

	mov	QWORD PTR [rdx], -1
	jmp	SHORT $LN30@seekpos
$LN3@seekpos:

; 335  : 			{
; 336  : 			return (pos_type(off_type(-1)));
; 337  : 			}
; 338  : 
; 339  : 		if (_Off != 0
; 340  : 			&& (((_Mode & ios_base::in) && _Gptr_old == nullptr)

	test	r11, r11
	je	SHORT $LN4@seekpos
	test	bl, 1
	je	SHORT $LN6@seekpos
	test	rsi, rsi
	je	SHORT $LN5@seekpos
$LN6@seekpos:
	test	bl, 2
	je	SHORT $LN4@seekpos
	test	r8, r8
	je	SHORT $LN5@seekpos
$LN4@seekpos:

; 341  : 				|| ((_Mode & ios_base::out) && _Pptr_old == nullptr)))
; 342  : 			{
; 343  : 			return (pos_type(off_type(-1)));
; 344  : 			}
; 345  : 
; 346  : 		const auto _Newptr = _Seeklow + _Off;	// may perform nullptr + 0

	lea	r9, QWORD PTR [rdi+r11]

; 347  : 		if ((_Mode & ios_base::in) && _Gptr_old != nullptr)

	test	bl, 1
	je	SHORT $LN7@seekpos
	test	rsi, rsi
	je	SHORT $LN7@seekpos
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 252  : 		*_IGnext = _Next;

	mov	QWORD PTR [r14], r9
	sub	ecx, r9d

; 253  : 		*_IGcount = (int)(_Last - _Next);

	mov	rax, QWORD PTR [r10+80]
	mov	DWORD PTR [rax], ecx
$LN7@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 352  : 		if ((_Mode & ios_base::out) && _Pptr_old != nullptr)

	test	bl, 2
	je	SHORT $LN8@seekpos
	test	r8, r8
	je	SHORT $LN8@seekpos
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 258  : 		return (*_IPnext + *_IPcount);

	mov	rax, QWORD PTR [r10+88]
	movsxd	rcx, DWORD PTR [rax]
	mov	rax, QWORD PTR [r10+64]
	add	rcx, QWORD PTR [rax]

; 299  : 		*_IPfirst = _First;

	mov	rax, QWORD PTR [r10+32]

; 300  : 		*_IPnext = _Next;
; 301  : 		*_IPcount = (int)(_Last - _Next);

	sub	ecx, r9d
	mov	QWORD PTR [rax], rdi
	mov	rax, QWORD PTR [r10+64]
	mov	QWORD PTR [rax], r9
	mov	rax, QWORD PTR [r10+88]
	mov	DWORD PTR [rax], ecx
$LN8@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	mov	QWORD PTR [rdx], r11
$LN30@seekpos:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 358  : 		}

	mov	rbx, QWORD PTR [rsp+8]
	xor	eax, eax
	mov	rsi, QWORD PTR [rsp+16]
	mov	rdi, QWORD PTR [rsp+24]
	mov	r14, QWORD PTR [rsp+32]
	mov	QWORD PTR [rdx+8], 0
	mov	QWORD PTR [rdx+16], rax
	mov	rax, rdx
	ret	0
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
this$ = 24
__$ReturnUdt$ = 32
_Off$ = 40
_Way$ = 48
_Mode$ = 56
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT

; 249  : 		{	// change position by _Off, according to _Way, _Mode

$LN45:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	push	r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	r15, QWORD PTR [rcx+56]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 249  : 		{	// change position by _Off, according to _Way, _Mode

	mov	r10, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rcx+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 249  : 		{	// change position by _Off, according to _Way, _Mode

	mov	r14, r8
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rsi, QWORD PTR [r15]

; 235  : 		return (*_IPnext);

	mov	rcx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 252  : 		if (_Pptr_old != nullptr && _Seekhigh < _Pptr_old)

	test	rcx, rcx
	je	SHORT $LN4@seekoff
	cmp	QWORD PTR [r10+104], rcx
	jae	SHORT $LN4@seekoff

; 253  : 			{	// update high-water pointer
; 254  : 			_Seekhigh = _Pptr_old;

	mov	QWORD PTR [r10+104], rcx
$LN4@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [r10+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 260  : 		switch (_Way)

	xor	r8d, r8d
	mov	rbp, QWORD PTR [r10+104]
	mov	r11d, DWORD PTR _Mode$[rsp]
	mov	rbx, rbp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rdi, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 258  : 		const auto _Seekdist = _Seekhigh - _Seeklow;

	sub	rbx, rdi

; 260  : 		switch (_Way)

	test	r9d, r9d
	je	SHORT $LN5@seekoff
	sub	r9d, 1
	je	SHORT $LN7@seekoff
	cmp	r9d, 1
	jne	SHORT $LN13@seekoff

; 264  : 				break;
; 265  : 			case ios_base::end:
; 266  : 				_Newoff = _Seekdist;

	mov	rax, rbx

; 267  : 				break;

	jmp	SHORT $LN2@seekoff
$LN7@seekoff:

; 268  : 			case ios_base::cur:
; 269  : 				{
; 270  : 				constexpr auto _Both = ios_base::in | ios_base::out;
; 271  : 				if ((_Mode & _Both) != _Both)

	mov	eax, r11d
	and	eax, 3
	cmp	al, 3
	je	SHORT $LN13@seekoff

; 272  : 					{	// prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"
; 273  : 					if (_Mode & ios_base::in)

	test	r11b, 1
	je	SHORT $LN9@seekoff

; 274  : 						{
; 275  : 						if (_Gptr_old != nullptr || _Seeklow == nullptr)

	test	rsi, rsi
	jne	SHORT $LN12@seekoff
	test	rdi, rdi
	jne	SHORT $LN13@seekoff
$LN12@seekoff:

; 276  : 							{
; 277  : 							_Newoff = _Gptr_old - _Seeklow;

	mov	rax, rsi
	sub	rax, rdi

; 278  : 							break;

	jmp	SHORT $LN2@seekoff
$LN9@seekoff:

; 279  : 							}
; 280  : 						}
; 281  : 					else if ((_Mode & ios_base::out) && (_Pptr_old != nullptr || _Seeklow == nullptr))

	test	r11b, 2
	je	SHORT $LN13@seekoff
	test	rcx, rcx
	jne	SHORT $LN14@seekoff
	test	rdi, rdi
	jne	SHORT $LN13@seekoff
$LN14@seekoff:

; 282  : 						{
; 283  : 						_Newoff = _Pptr_old - _Seeklow;

	mov	rax, rcx
	sub	rax, rdi

; 284  : 						break;

	jmp	SHORT $LN2@seekoff
$LN13@seekoff:

; 319  : 		}

	mov	QWORD PTR [rdx], -1
	jmp	SHORT $LN43@seekoff
$LN5@seekoff:

; 261  : 			{
; 262  : 			case ios_base::beg:
; 263  : 				_Newoff = 0;

	mov	rax, r8
$LN2@seekoff:

; 285  : 						}
; 286  : 					}
; 287  : 				}
; 288  : 
; 289  : 				// fallthrough
; 290  : 			default:
; 291  : 				return (pos_type(off_type(-1)));
; 292  : 			}
; 293  : 
; 294  : 		if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist))

	lea	r9, QWORD PTR [rax+r14]
	cmp	r9, rbx
	ja	SHORT $LN13@seekoff

; 295  : 			{
; 296  : 			return (pos_type(off_type(-1)));
; 297  : 			}
; 298  : 
; 299  : 		_Off += _Newoff;
; 300  : 		if (_Off != 0
; 301  : 			&& (((_Mode & ios_base::in) && _Gptr_old == nullptr)

	test	r9, r9
	je	SHORT $LN17@seekoff
	test	r11b, 1
	je	SHORT $LN19@seekoff
	test	rsi, rsi
	je	SHORT $LN13@seekoff
$LN19@seekoff:
	test	r11b, 2
	je	SHORT $LN17@seekoff
	test	rcx, rcx
	je	SHORT $LN13@seekoff
$LN17@seekoff:

; 302  : 				|| ((_Mode & ios_base::out) && _Pptr_old == nullptr)))
; 303  : 			{
; 304  : 			return (pos_type(off_type(-1)));
; 305  : 			}
; 306  : 
; 307  : 		const auto _Newptr = _Seeklow + _Off;	// may perform nullptr + 0

	lea	rbx, QWORD PTR [rdi+r9]

; 308  : 		if ((_Mode & ios_base::in) && _Gptr_old != nullptr)

	test	r11b, 1
	je	SHORT $LN20@seekoff
	test	rsi, rsi
	je	SHORT $LN20@seekoff
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 252  : 		*_IGnext = _Next;

	mov	QWORD PTR [r15], rbx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	ebp, ebx
	mov	rax, QWORD PTR [r10+80]
	mov	DWORD PTR [rax], ebp
$LN20@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 313  : 		if ((_Mode & ios_base::out) && _Pptr_old != nullptr)

	test	r11b, 2
	je	SHORT $LN21@seekoff
	test	rcx, rcx
	je	SHORT $LN21@seekoff
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 258  : 		return (*_IPnext + *_IPcount);

	mov	rax, QWORD PTR [r10+88]
	movsxd	rcx, DWORD PTR [rax]
	mov	rax, QWORD PTR [r10+64]
	add	rcx, QWORD PTR [rax]

; 299  : 		*_IPfirst = _First;

	mov	rax, QWORD PTR [r10+32]

; 300  : 		*_IPnext = _Next;
; 301  : 		*_IPcount = (int)(_Last - _Next);

	sub	ecx, ebx
	mov	QWORD PTR [rax], rdi
	mov	rax, QWORD PTR [r10+64]
	mov	QWORD PTR [rax], rbx
	mov	rax, QWORD PTR [r10+88]
	mov	DWORD PTR [rax], ecx
$LN21@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	mov	QWORD PTR [rdx], r9
$LN43@seekoff:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 319  : 		}

	mov	rbx, QWORD PTR [rsp+24]
	xor	eax, eax
	mov	rbp, QWORD PTR [rsp+32]
	mov	rsi, QWORD PTR [rsp+40]
	mov	rdi, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdx+8], r8
	mov	QWORD PTR [rdx+16], rax
	mov	rax, rdx
	pop	r15
	pop	r14
	ret	0
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
_TEXT	SEGMENT
this$ = 8
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	r10, QWORD PTR [rcx+56]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 216  : 		{	// get an element from stream, but don't point past it

	mov	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rcx, QWORD PTR [r10]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 218  : 		if (_Gptr == nullptr)

	test	rcx, rcx
	je	SHORT $LN5@underflow
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [r8+80]
	movsxd	rdx, DWORD PTR [rax]
	add	rdx, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 223  : 		if (_Gptr < _Mysb::egptr())

	cmp	rcx, rdx
	jb	SHORT $LN34@underflow
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [r8+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 229  : 		const auto _Pptr = _Mysb::pptr();

	mov	r9, QWORD PTR [rax]
	test	r9, r9

; 230  : 		if (!_Pptr || (_Mystate & _Noread))

	je	SHORT $LN5@underflow
	test	BYTE PTR [r8+112], 4
	jne	SHORT $LN5@underflow
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 33   : 	return (_Left < _Right ? _Right : _Left);

	mov	rdx, QWORD PTR [r8+104]
	cmp	rdx, r9
	cmovb	rdx, r9
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 236  : 		if (_Local_highwater <= _Gptr)

	cmp	rdx, rcx
	jbe	SHORT $LN5@underflow

; 237  : 			{	// nothing in the put area to take
; 238  : 			return (_Traits::eof());
; 239  : 			}
; 240  : 
; 241  : 		_Seekhigh = _Local_highwater;

	mov	QWORD PTR [r8+104], rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rcx, QWORD PTR [r10]

; 252  : 		*_IGnext = _Next;

	mov	QWORD PTR [r10], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	edx, ecx
	mov	rax, QWORD PTR [r8+80]
	mov	DWORD PTR [rax], edx

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [r8+56]
	mov	rcx, QWORD PTR [rax]
$LN34@underflow:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 244  : 		}

	movzx	eax, BYTE PTR [rcx]
	ret	0
$LN5@underflow:

; 231  : 			{	// no put area or read disallowed
; 232  : 			return (_Traits::eof());

	mov	eax, -1

; 244  : 		}

	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
$T4 = 48
this$ = 48
_Meta$ = 56
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT

; 194  : 		{	// put an element back to stream

$LN38:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rcx+56]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 194  : 		{	// put an element back to stream

	mov	ebx, edx
	mov	rdi, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rdx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 198  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)

	test	rdx, rdx
	je	SHORT $LN3@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 198  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)

	cmp	rdx, QWORD PTR [rax]
	jbe	SHORT $LN3@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	ebx, -1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 198  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)

	je	SHORT $LN2@pbackfail
	dec	rdx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 521  : 		return (static_cast<char>(_Meta));

	mov	BYTE PTR $T4[rsp], bl
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 198  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)

	lea	rcx, QWORD PTR $T4[rsp]
	call	?eq@?$char_traits@D@std@@SA_NAEBD0@Z	; std::char_traits<char>::eq
	test	al, al
	jne	SHORT $LN2@pbackfail
	test	BYTE PTR [rdi+112], 2
	jne	SHORT $LN3@pbackfail
$LN2@pbackfail:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 245  : 		*_IGcount -= _Off;

	mov	rax, QWORD PTR [rdi+80]
	inc	DWORD PTR [rax]

; 246  : 		*_IGnext += _Off;

	mov	rax, QWORD PTR [rdi+56]
	dec	QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	ebx, -1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 207  : 		if (!_Traits::eq_int_type(_Traits::eof(), _Meta))

	je	SHORT $LN4@pbackfail
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rdi+56]
	mov	rcx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 209  : 			*_Mysb::gptr() = _Traits::to_char_type(_Meta);

	mov	BYTE PTR [rcx], bl
$LN4@pbackfail:

; 210  : 			}
; 211  : 
; 212  : 		return (_Traits::not_eof(_Meta));

	xor	eax, eax
	cmp	ebx, -1
	cmove	ebx, eax
	mov	eax, ebx

; 213  : 		}

	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN3@pbackfail:
	mov	rbx, QWORD PTR [rsp+56]
	mov	eax, -1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
this$ = 80
_Meta$ = 88
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT

; 119  : 		{	// put an element to stream

$LN60:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r13
	push	r15
	sub	rsp, 32					; 00000020H

; 120  : 		if (_Mystate & _Constant)

	test	BYTE PTR [rcx+112], 2
	mov	esi, edx
	mov	rbx, rcx
	jne	$LN10@overflow
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd

; 531  : 		return (_Left == _Right);

	cmp	edx, -1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 125  : 		if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	jne	SHORT $LN3@overflow

; 126  : 			{
; 127  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

	xor	eax, eax

; 191  : 		}

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN3@overflow:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rcx+64]
	mov	rbp, QWORD PTR [rax]

; 258  : 		return (*_IPnext + *_IPcount);

	mov	rax, QWORD PTR [rcx+88]
	movsxd	rdi, DWORD PTR [rax]
	add	rdi, rbp
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 132  : 		if (_Pptr != nullptr && _Pptr < _Epptr)

	test	rbp, rbp
	je	SHORT $LN4@overflow
	cmp	rbp, rdi
	jae	SHORT $LN4@overflow

; 133  : 			{	// room in buffer, store it
; 134  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
	mov	BYTE PTR [rax], sil

; 135  : 			_Seekhigh = _Pptr + 1;

	lea	rax, QWORD PTR [rbp+1]
	mov	QWORD PTR [rbx+104], rax

; 136  : 			return (_Meta);

	mov	eax, esi

; 191  : 		}

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN4@overflow:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rcx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 148  : 		if (_Oldsize < _MINSIZE)

	xor	r13d, r13d
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	r15, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 148  : 		if (_Oldsize < _MINSIZE)

	sub	rdi, r15
	test	rbp, rbp
	cmove	rdi, r13
	cmp	rdi, 32					; 00000020H
	jae	SHORT $LN6@overflow

; 149  : 			{
; 150  : 			_Newsize = _MINSIZE;

	lea	ebp, QWORD PTR [r13+32]
	jmp	SHORT $LN11@overflow
$LN6@overflow:

; 151  : 			}
; 152  : 		else if (_Oldsize < INT_MAX / 2)

	cmp	rdi, 1073741823				; 3fffffffH
	jae	SHORT $LN8@overflow

; 153  : 			{	// grow by 50 percent
; 154  : 			_Newsize = _Oldsize << 1;

	lea	rbp, QWORD PTR [rdi+rdi]
	jmp	SHORT $LN11@overflow
$LN8@overflow:

; 155  : 			}
; 156  : 		else if (_Oldsize < INT_MAX)

	mov	ebp, 2147483647				; 7fffffffH
	cmp	rdi, rbp
	jae	$LN10@overflow
$LN11@overflow:
	mov	QWORD PTR [rsp+80], r12

; 157  : 			{
; 158  : 			_Newsize = INT_MAX;
; 159  : 			}
; 160  : 		else
; 161  : 			{	// buffer can't grow, fail
; 162  : 			return (_Traits::eof());
; 163  : 			}
; 164  : 
; 165  : 		const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));

	mov	rdx, rbp
	add	rcx, 116				; 00000074H
	mov	QWORD PTR [rsp+88], r14
	call	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
	mov	rcx, rax
	call	??$_Unfancy@D@std@@YAPEADPEAD@Z		; std::_Unfancy<char>

; 166  : 		_Traits::copy(_Newptr, _Oldptr, _Oldsize);

	mov	r8, rdi
	mov	rdx, r15
	mov	rcx, rax
	mov	r14, rax
	call	?copy@?$char_traits@D@std@@SAPEADQEADQEBD_K@Z ; std::char_traits<char>::copy

; 167  : 
; 168  : 		const auto _New_pnext = _Newptr + _Oldsize;

	lea	rdx, QWORD PTR [rdi+r14]

; 169  : 		_Seekhigh = _New_pnext + 1; // to include _Meta

	lea	rcx, QWORD PTR [rdx+1]
	mov	QWORD PTR [rbx+104], rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 299  : 		*_IPfirst = _First;

	mov	rcx, QWORD PTR [rbx+32]
	mov	QWORD PTR [rcx], r14

; 300  : 		*_IPnext = _Next;

	mov	rcx, QWORD PTR [rbx+64]
	mov	QWORD PTR [rcx], rdx

; 301  : 		*_IPcount = (int)(_Last - _Next);

	mov	ecx, r14d
	mov	rax, QWORD PTR [rbx+88]
	sub	ecx, edx
	add	ecx, ebp
	mov	DWORD PTR [rax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 172  : 		if (_Mystate & _Noread)

	test	BYTE PTR [rbx+112], 4
	je	SHORT $LN12@overflow
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	rax, QWORD PTR [rbx+24]
	mov	QWORD PTR [rax], r14

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], r13

; 253  : 		*_IGcount = (int)(_Last - _Next);

	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r14d
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 176  : 		else

	jmp	SHORT $LN13@overflow
$LN12@overflow:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rbx+56]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 178  : 			_Mysb::setg(_Newptr,

	mov	r10, QWORD PTR [rbx+104]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	r9, QWORD PTR [rax]

; 251  : 		*_IGfirst = _First;

	mov	rax, QWORD PTR [rbx+24]

; 225  : 		return (*_IGnext);

	sub	r9, r15
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 178  : 			_Mysb::setg(_Newptr,

	add	r9, r14
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 253  : 		*_IGcount = (int)(_Last - _Next);

	sub	r10d, r9d
	mov	QWORD PTR [rax], r14
	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], r9
	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], r10d
$LN13@overflow:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 183  : 		if (_Mystate & _Allocated)

	mov	eax, DWORD PTR [rbx+112]
	mov	r14, QWORD PTR [rsp+88]
	test	al, 1
	je	SHORT $LN14@overflow

; 184  : 			{
; 185  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);

	mov	r8, rdi
	lea	rcx, QWORD PTR [rbx+116]
	mov	rdx, r15
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
	mov	eax, DWORD PTR [rbx+112]
$LN14@overflow:

; 186  : 			}
; 187  : 
; 188  : 		_Mystate |= _Allocated;

	or	eax, 1

; 189  : 		*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	mov	rcx, rbx
	mov	DWORD PTR [rbx+112], eax
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ

; 190  : 		return (_Meta);

	mov	r12, QWORD PTR [rsp+80]
	mov	BYTE PTR [rax], sil
	mov	eax, esi

; 191  : 		}

	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN10@overflow:
	mov	rbx, QWORD PTR [rsp+96]
	mov	eax, -1
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r13
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
$T5 = 32
this$ = 64
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 77   : 		{	// destroy the object

$LN28:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T5[rsp], -2
	mov	rbx, rcx
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx], rax

; 402  : 		if (_Mystate & _Allocated)

	test	BYTE PTR [rcx+112], 1
	je	SHORT $LN4@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rcx+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	mov	rcx, QWORD PTR [rax]
	test	rcx, rcx
	je	SHORT $LN6@basic_stri
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 258  : 		return (*_IPnext + *_IPcount);

	mov	rax, QWORD PTR [rbx+88]
	movsxd	r8, DWORD PTR [rax]
	add	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	jmp	SHORT $LN7@basic_stri
$LN6@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [rbx+80]
	movsxd	r8, DWORD PTR [rax]
	mov	rax, QWORD PTR [rbx+56]
	add	r8, QWORD PTR [rax]
$LN7@basic_stri:

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	mov	rdx, QWORD PTR [rax]
	sub	r8, rdx
	lea	rcx, QWORD PTR [rbx+116]
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
	npad	1
$LN4@basic_stri:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	rax, QWORD PTR [rbx+24]
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], ecx

; 292  : 		*_IPfirst = _First;

	mov	rax, QWORD PTR [rbx+32]
	mov	QWORD PTR [rax], rcx

; 293  : 		*_IPnext = _First;

	mov	rax, QWORD PTR [rbx+64]
	mov	QWORD PTR [rax], rcx

; 294  : 		*_IPcount = (int)(_Last - _First);

	mov	rax, QWORD PTR [rbx+88]
	mov	DWORD PTR [rax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 411  : 		_Seekhigh = nullptr;

	mov	QWORD PTR [rbx+104], rcx

; 412  : 		_Mystate &= ~_Allocated;

	and	DWORD PTR [rbx+112], -2

; 78   : 		_Tidy();
; 79   : 		}

	mov	rcx, rbx
	add	rsp, 48					; 00000030H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 614  : 		{	// destroy the object

	mov	rax, QWORD PTR [rcx-136]
	mov	rbx, rcx
	mov	edi, edx
	movsxd	r8, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [r8+rcx-136], rax
	mov	rax, QWORD PTR [rcx-136]
	movsxd	r8, DWORD PTR [rax+4]
	lea	r9d, DWORD PTR [r8-136]
	mov	DWORD PTR [r8+rcx-140], r9d

; 615  : 		}

	add	rcx, -128				; ffffffffffffff80H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx-120]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	test	dil, 1
	je	SHORT $LN9@scalar
	mov	edx, 232				; 000000e8H
	lea	rcx, QWORD PTR [rbx-136]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN9@scalar:
	mov	rsi, QWORD PTR [rsp+56]
	lea	rax, QWORD PTR [rbx-136]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	test	bl, 1
	je	SHORT $LN4@scalar
	mov	edx, 120				; 00000078H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 8
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z PROC ; std::pointer_traits<char *>::pointer_to, COMDAT

; 342  : 		return (_STD addressof(_Val));

	mov	rax, rcx

; 343  : 		}

	ret	0
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ENDP ; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 8
_Right$ = 16
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat, COMDAT

; 196  :  #if _ITERATOR_DEBUG_LEVEL == 0
; 197  : 		(void)_Right;
; 198  :  #else /* ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv */
; 199  : 		_STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");
; 200  :  #endif /* _ITERATOR_DEBUG_LEVEL == 0 */
; 201  : 		}

	ret	0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Compat
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 8
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT

; 72   :  #if _ITERATOR_DEBUG_LEVEL != 0
; 73   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 74   : 		_STL_VERIFY(_Ptr, "can't increment value-initialized vector iterator");
; 75   : 		_STL_VERIFY(_Ptr < _Mycont->_Mylast, "can't increment vector iterator past end");
; 76   :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 77   : 
; 78   : 		++_Ptr;

	add	QWORD PTR [rcx], 32			; 00000020H

; 79   : 		return (*this);

	mov	rax, rcx

; 80   : 		}

	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
this$ = 8
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*, COMDAT

; 48   :  #if _ITERATOR_DEBUG_LEVEL != 0
; 49   : 		const auto _Mycont = static_cast<const _Myvec *>(this->_Getcont());
; 50   : 		_STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");
; 51   : 		_STL_VERIFY(_Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast,
; 52   : 			"can't dereference out of range vector iterator");
; 53   :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 54   : 
; 55   : 		return (*_Ptr);

	mov	rax, QWORD PTR [rcx]

; 56   : 		}

	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 253  : 		{	// construct with pointer _Parg

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H

; 41   : 		: _Ptr(_Parg)

	mov	QWORD PTR [rcx], rdx

; 253  : 		{	// construct with pointer _Parg

	mov	rbx, rcx

; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, r8
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 254  : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly, COMDAT

; 1497 : 		{	// set capacity to _Newcapacity (without geometric growth), provide strong guarantee

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+32], rdi
	push	r14
	sub	rsp, 32					; 00000020H
	mov	rsi, rdx
	mov	rdi, rcx

; 1498 : 		const size_type _Size = size();

	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size

; 1499 : 
; 1500 : 		const pointer _Newvec = this->_Getal().allocate(_Newcapacity);

	mov	rcx, rdi
	mov	r14, rax
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
	mov	rcx, rax
	mov	rdx, rsi
	call	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate

; 1501 : 
; 1502 : 		_TRY_BEGIN
; 1503 : 		_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);

	mov	rcx, rdi
	mov	rbp, rax
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Mylast
	mov	rcx, rdi
	mov	rbx, QWORD PTR [rax]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Myfirst
	mov	r9, rbp
	mov	r8, rbx
	mov	rcx, rdi
	mov	rdx, QWORD PTR [rax]
	call	?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept

; 1504 : 		_CATCH_ALL
; 1505 : 		this->_Getal().deallocate(_Newvec, _Newcapacity);
; 1506 : 		_RERAISE;
; 1507 : 		_CATCH_END
; 1508 : 
; 1509 : 		_Change_array(_Newvec, _Size, _Newcapacity);

	mov	r9, rsi
	mov	r8, r14
	mov	rdx, rbp
	mov	rcx, rdi

; 1510 : 		}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	mov	rdi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	r14

; 1504 : 		_CATCH_ALL
; 1505 : 		this->_Getal().deallocate(_Newvec, _Newcapacity);
; 1506 : 		_RERAISE;
; 1507 : 		_CATCH_END
; 1508 : 
; 1509 : 		_Change_array(_Newvec, _Size, _Newcapacity);

	jmp	?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array
?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 153  : 			return (_Ok);

	movzx	eax, BYTE PTR [rcx+8]

; 154  : 			}

	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 135  : 			{	// destroy the object

$LN15:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T3[rsp], -2
	mov	rbx, rcx

; 136  :  #if _HAS_EXCEPTIONS
; 137  : 			if (!_STD uncaught_exception())	// TRANSITION, OS#15518458

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	npad	1
	test	al, al
	jne	SHORT $LN2@sentry

; 138  : 				{
; 139  : 				this->_Myostr._Osfx();

	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN2@sentry:

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rdx, QWORD PTR [rbx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+rdx+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN12@sentry

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN12@sentry:

; 140  : 				}
; 141  :  #else /* _HAS_EXCEPTIONS */
; 142  : 			this->_Myostr._Osfx();
; 143  :  #endif /* _HAS_EXCEPTIONS */
; 144  : 			}

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 121  : 			{	// construct locking and testing stream

$LN28:
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T8[rsp], -2
	mov	QWORD PTR [rsp+72], rbx
	mov	rbx, rdx
	mov	rdi, rcx

; 98   : 			: _Myostr(_Ostr)

	mov	QWORD PTR [rcx], rdx

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rdx, QWORD PTR [rdx]
	movsxd	rax, DWORD PTR [rdx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rax+rbx+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN6@sentry

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
	mov	rdx, QWORD PTR [rbx]
$LN6@sentry:

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	movsxd	rcx, DWORD PTR [rdx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	rax, rdx

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [rcx+rbx+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN2@sentry
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	rcx, QWORD PTR [rcx+rbx+80]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	test	rcx, rcx
	je	SHORT $LN2@sentry
	cmp	rcx, rbx
	je	SHORT $LN2@sentry

; 123  : 				_Ostr.tie()->flush();

	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, QWORD PTR [rbx]
$LN2@sentry:

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	movsxd	rax, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [rax+rbx+16], 0
	sete	al
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	BYTE PTR [rdi+8], al

; 125  : 			}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+72]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T8 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 401  : 		{	// discard any allocated buffer and clear pointers

$LN26:
	push	rbx
	sub	rsp, 32					; 00000020H

; 402  : 		if (_Mystate & _Allocated)

	test	BYTE PTR [rcx+112], 1
	mov	rbx, rcx
	je	SHORT $LN2@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rcx+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	mov	rcx, QWORD PTR [rax]
	test	rcx, rcx
	je	SHORT $LN4@Tidy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 258  : 		return (*_IPnext + *_IPcount);

	mov	rax, QWORD PTR [rbx+88]
	movsxd	r8, DWORD PTR [rax]
	add	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [rbx+80]
	movsxd	r8, DWORD PTR [rax]
	mov	rax, QWORD PTR [rbx+56]
	add	r8, QWORD PTR [rax]
$LN5@Tidy:

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rbx+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 404  : 			_Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

	lea	rcx, QWORD PTR [rbx+116]
	mov	rdx, QWORD PTR [rax]
	sub	r8, rdx
	call	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN2@Tidy:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 251  : 		*_IGfirst = _First;

	mov	rax, QWORD PTR [rbx+24]
	xor	ecx, ecx
	mov	QWORD PTR [rax], rcx

; 252  : 		*_IGnext = _Next;

	mov	rax, QWORD PTR [rbx+56]
	mov	QWORD PTR [rax], rcx

; 253  : 		*_IGcount = (int)(_Last - _Next);

	mov	rax, QWORD PTR [rbx+80]
	mov	DWORD PTR [rax], ecx

; 292  : 		*_IPfirst = _First;

	mov	rax, QWORD PTR [rbx+32]
	mov	QWORD PTR [rax], rcx

; 293  : 		*_IPnext = _First;

	mov	rax, QWORD PTR [rbx+64]
	mov	QWORD PTR [rax], rcx

; 294  : 		*_IPcount = (int)(_Last - _First);

	mov	rax, QWORD PTR [rbx+88]
	mov	DWORD PTR [rax], ecx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 412  : 		_Mystate &= ~_Allocated;

	and	DWORD PTR [rbx+112], -2
	mov	QWORD PTR [rbx+104], rcx

; 413  : 		}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
$T8 = 40
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 95   : 		{	// return string copy of character array

$LN27:
	mov	QWORD PTR [rsp+16], rdx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	QWORD PTR $T8[rsp], -2
	mov	QWORD PTR [rsp+64], rbx
	mov	rbx, rdx
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0

; 96   : 		_Mystr _Result(_Al);

	lea	rdx, QWORD PTR [rcx+116]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 103  : 			{	// readable, make string from read buffer
; 104  : 			const auto _Base = _Mysb::eback();
; 105  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));
; 106  : 			}
; 107  : 
; 108  : 		return (_Result);

	mov	DWORD PTR $T1[rsp], 1

; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)

	mov	ecx, DWORD PTR [rdi+112]
	test	cl, 2
	jne	SHORT $LN2@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 235  : 		return (*_IPnext);

	mov	rax, QWORD PTR [rdi+64]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 97   : 		if (!(_Mystate & _Constant) && _Mysb::pptr() != nullptr)

	mov	r8, QWORD PTR [rax]
	test	r8, r8
	je	SHORT $LN2@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 230  : 		return (*_IPfirst);

	mov	rax, QWORD PTR [rdi+32]
	mov	rdx, QWORD PTR [rax]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility

; 33   : 	return (_Left < _Right ? _Right : _Left);

	cmp	r8, QWORD PTR [rdi+104]
	cmovb	r8, QWORD PTR [rdi+104]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 100  : 			_Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	sub	r8, rdx
	jmp	SHORT $LN24@str
$LN2@str:

; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)

	test	cl, 4
	jne	SHORT $LN22@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 225  : 		return (*_IGnext);

	mov	rax, QWORD PTR [rdi+56]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 102  : 		else if (!(_Mystate & _Noread) && _Mysb::gptr() != nullptr)

	mov	rcx, QWORD PTR [rax]
	test	rcx, rcx
	je	SHORT $LN22@str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\streambuf

; 220  : 		return (*_IGfirst);

	mov	rax, QWORD PTR [rdi+24]
	mov	rdx, QWORD PTR [rax]

; 240  : 		return (*_IGnext + *_IGcount);

	mov	rax, QWORD PTR [rdi+80]
	movsxd	r8, DWORD PTR [rax]
	sub	r8, rdx
	add	r8, rcx
$LN24@str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream

; 109  : 		}

	mov	rcx, rbx
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN22@str:
	mov	rax, rbx
	mov	rbx, QWORD PTR [rsp+64]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
	int	3
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T8 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T8 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$dead$ = 56
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 33   : 		{	// construct empty character buffer from mode

$LN12:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rbx+104], 0
	lea	rcx, QWORD PTR [rbx+116]
	mov	QWORD PTR [rbx], rax
	mov	DWORD PTR [rbx+112], 4
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>

; 34   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT

; 53   : 			// TRANSITION, ABI: We currently always set _Fpos to 0 but older .objs containing old basic_filebuf
; 54   : 			// would set _Fpos.
; 55   : 		return (_Myoff + _Fpos);

	mov	rax, QWORD PTR [rcx+8]
	add	rax, QWORD PTR [rcx]

; 56   : 		}

	ret	0
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
_TEXT	SEGMENT
this$ = 8
_Off$ = 16
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 32   : 		: _Myoff(_Off), _Fpos(0), _Mystate()

	xor	eax, eax
	mov	QWORD PTR [rcx], rdx
	mov	QWORD PTR [rcx+8], 0
	mov	QWORD PTR [rcx+16], rax

; 34   : 		}

	mov	rax, rcx
	ret	0
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Pvector$ = 64
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 42   : 		{	// construct with pointer _Parg

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 41   : 		: _Ptr(_Parg)

	mov	QWORD PTR [rcx], rdx

; 42   : 		{	// construct with pointer _Parg

	mov	rbx, rcx

; 43   : 		this->_Adopt(_Pvector);

	mov	rdx, r8
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 44   : 		}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBU_Container_base0@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T3 = 32
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 105  : 			{	// destroy after unlocking

$LN10:
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T3[rsp], -2

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rdx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [rcx+rdx+72]
	test	rcx, rcx
	je	SHORT $LN2@Sentry_bas

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:

; 108  : 			}

	add	rsp, 56					; 00000038H
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 99   : 			{	// lock the stream buffer, if there

$LN10:
	push	rbx
	sub	rsp, 32					; 00000020H

; 98   : 			: _Myostr(_Ostr)

	mov	QWORD PTR [rcx], rdx

; 99   : 			{	// lock the stream buffer, if there

	mov	rbx, rcx

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rax, QWORD PTR [rdx]
	movsxd	r8, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR [r8+rdx+72]
	test	rcx, rcx
	je	SHORT $LN8@Sentry_bas

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+8]
$LN8@Sentry_bas:

; 102  : 			}

	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
_TEXT	SEGMENT
_Mode$ = 8
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT

; 425  : 		int _State = 0;
; 426  : 		if (!(_Mode & ios_base::in))
; 427  : 			{
; 428  : 			_State |= _Noread;
; 429  : 			}
; 430  : 
; 431  : 		if (!(_Mode & ios_base::out))

	mov	eax, ecx
	mov	edx, ecx
	mov	r9d, ecx
	not	edx
	and	edx, 1
	shl	edx, 2

; 432  : 			{
; 433  : 			_State |= _Constant;
; 434  : 			}
; 435  : 
; 436  : 		if (_Mode & ios_base::app)

	mov	r8d, edx
	or	r8d, 2
	and	al, 2
	mov	eax, ecx
	cmovne	r8d, edx

; 437  : 			{
; 438  : 			_State |= _Append;
; 439  : 			}
; 440  : 
; 441  : 		if (_Mode & ios_base::ate)

	mov	ecx, r8d
	or	ecx, 8
	and	al, 8
	cmove	ecx, r8d

; 442  : 			{
; 443  : 			_State |= _Atend;
; 444  : 			}
; 445  : 
; 446  : 		return (_State);

	mov	eax, ecx
	or	eax, 16
	and	r9b, 4
	cmove	eax, ecx

; 447  : 		}

	ret	0
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 790  : 	{	// insert NTBS into char stream

$LN106:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T27[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	r12, rdx
	mov	rsi, rcx

; 791  : 	typedef char _Elem;
; 792  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 793  : 	ios_base::iostate _State = ios_base::goodbit;

	xor	ebx, ebx
	mov	DWORD PTR _State$[rsp], ebx

; 794  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

	mov	rcx, rdx
	call	?length@?$char_traits@D@std@@SA_KQEBD@Z	; std::char_traits<char>::length
	mov	r15, rax

; 795  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	mov	rcx, QWORD PTR [rsi]
	movsxd	r8, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 433  : 		return (_Wide);

	mov	rdi, QWORD PTR [r8+rsi+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 795  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	test	rdi, rdi
	jle	SHORT $LN17@operator
	cmp	rdi, rax
	jle	SHORT $LN17@operator
	sub	rdi, rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	xor	edi, edi
$LN18@operator:

; 98   : 			: _Myostr(_Ostr)

	mov	r14, rsi
	mov	QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rdx, QWORD PTR [r8+rsi+72]
	mov	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	test	rdx, rdx
	je	SHORT $LN35@operator

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rdx]
	mov	rcx, rdx
	call	QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rsi]
	mov	r8, rcx
$LN35@operator:

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	movsxd	r9, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	rax, rcx
	mov	rdx, r8

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [r9+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN31@operator
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	r9, QWORD PTR [r9+rsi+80]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	test	r9, r9
	je	SHORT $LN31@operator
	cmp	r9, rsi
	je	SHORT $LN31@operator

; 123  : 				_Ostr.tie()->flush();

	mov	rcx, r9
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, QWORD PTR [rsi]
	mov	rdx, rax
$LN31@operator:

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	eax, DWORD PTR [rcx+rsi+16]

; 352  : 		return (rdstate() == ios_base::goodbit);

	test	eax, eax
	sete	BYTE PTR _Ok$[rsp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 797  : 	const typename _Myos::sentry _Ok(_Ostr);

	test	eax, eax

; 798  : 
; 799  : 	if (!_Ok)

	je	SHORT $LN8@operator

; 800  : 		_State |= ios_base::badbit;

	mov	ebx, 4

; 801  : 	else

	jmp	$LN22@operator
$LN8@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 390  : 		return (_Fmtfl);

	mov	eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 804  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN97@operator
$LL4@operator:

; 805  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	test	rdi, rdi
	jle	SHORT $LN3@operator

; 806  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	je	SHORT $LN103@operator

; 805  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	dec	rdi
	jmp	SHORT $LL4@operator
$LN3@operator:

; 807  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 808  : 					{	// insertion failed, quit
; 809  : 					_State |= ios_base::badbit;
; 810  : 					break;
; 811  : 					}
; 812  : 
; 813  : 		if (_State == ios_base::goodbit
; 814  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	mov	rdx, QWORD PTR [rsi]
$LN97@operator:
	movsxd	rax, DWORD PTR [rdx+4]
	mov	r8, r15
	mov	rdx, r12
	mov	rcx, QWORD PTR [rax+rsi+72]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r15
	jne	SHORT $LN103@operator
$LL101@operator:

; 815  : 			_State |= ios_base::badbit;
; 816  : 
; 817  : 		if (_State == ios_base::goodbit)
; 818  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	test	rdi, rdi
	jle	SHORT $LN6@operator

; 819  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	je	SHORT $LN103@operator

; 815  : 			_State |= ios_base::badbit;
; 816  : 
; 817  : 		if (_State == ios_base::goodbit)
; 818  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	dec	rdi
	jmp	SHORT $LL101@operator
$LN103@operator:

; 820  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 821  : 					{	// insertion failed, quit
; 822  : 					_State |= ios_base::badbit;
; 823  : 					break;
; 824  : 					}
; 825  : 		_Ostr.width(0);

	mov	ebx, 4
	mov	DWORD PTR _State$[rsp], ebx
$LN6@operator:
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 439  : 		_Wide = _Newwidth;

	mov	QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
	jmp	SHORT $LN22@operator
$LN23@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
	mov	rsi, QWORD PTR _Ostr$[rsp]
	mov	ebx, DWORD PTR _State$[rsp]
	mov	r14, QWORD PTR _Ok$[rsp]
$LN22@operator:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 829  : 	_Ostr.setstate(_State);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rsi
	xor	r8d, r8d
	mov	edx, ebx
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1

; 137  : 			if (!_STD uncaught_exception())	// TRANSITION, OS#15518458

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN80@operator

; 138  : 				{
; 139  : 				this->_Myostr._Osfx();

	mov	rcx, r14
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN80@operator:

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rax, QWORD PTR [r14]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+r14+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN84@operator

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN84@operator:

; 830  : 	return (_Ostr);

	mov	rax, rsi

; 831  : 	}

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4

; 826  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$4
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Val$ = 120
_State$ = 128
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4

; 826  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$4
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
;	COMDAT ??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Ch$dead$ = 16
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z PROC		; std::setfill<char>, COMDAT

; 26   : 		: _Fill(_Ch)

	mov	BYTE PTR [rcx], 48			; 00000030H

; 37   : 	return (_Fillobj<_Elem>(_Ch));

	mov	rax, rcx

; 38   : 	}

	ret	0
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ENDP		; std::setfill<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
;	COMDAT ??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
_TEXT	SEGMENT
_Ostr$ = 8
_Manip$ = 16
??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,char>, COMDAT

; 61   : 	static_assert(is_same_v<_Elem, _Elem2>,
; 62   : 		"wrong character type for setfill");
; 63   : 
; 64   : 	_Ostr.fill(_Manip._Fill);

	mov	rax, QWORD PTR [rcx]
	movsxd	r8, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 114  : 		_Fillch = _Newfill;

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [r8+rcx+88], al
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip

; 65   : 	return (_Ostr);

	mov	rax, rcx

; 66   : 	}

	ret	0
??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
;	COMDAT ??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,__int64>, COMDAT

; 530  : 	{	// insert by calling function with output stream and argument

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 531  : 	(*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, rdx
	mov	rdx, QWORD PTR [rdx+8]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR [r8]

; 532  : 	return (_Ostr);

	mov	rax, rbx

; 533  : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Left$ = 56
_Right$ = 64
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4157 : 	{	// return NTCTS + string

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, r8
	mov	rbx, rcx

; 4158 : 	return (_STD move(_Right.insert(0, _Left)));

	mov	r8, rdx
	mov	rcx, rax
	xor	edx, edx
	call	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
	mov	rcx, rax
	call	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
	mov	rdx, rax
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

; 4159 : 	}

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\string
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Str$ = 56
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 173  : 	{	// insert a string

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rsi, rcx
	mov	rdi, rdx

; 174  : 	return (_Insert_string(_Ostr, _Str.data(), _Str.size()));

	mov	rcx, rdx
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	rcx, rdi
	mov	rbx, rax
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	rdx, rax
	mov	r8, rbx
	mov	rcx, rsi

; 175  : 	}

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi

; 174  : 	return (_Insert_string(_Ostr, _Str.data(), _Str.size()));

	jmp	??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\utility
;	COMDAT ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z PROC	; std::_Max_value<char *>, COMDAT

; 33   : 	return (_Left < _Right ? _Right : _Left);

	mov	rax, QWORD PTR [rdx]
	cmp	QWORD PTR [rcx], rax
	cmovb	rcx, rdx
	mov	rax, rcx

; 34   : 	}

	ret	0
??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ENDP	; std::_Max_value<char *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 330  : 	return (__builtin_addressof(_Val));

	mov	rax, rcx

; 331  : 	}

	ret	0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\iomanip
;	COMDAT ??0?$_Fillobj@D@std@@QEAA@D@Z
_TEXT	SEGMENT
this$ = 8
_Ch$dead$ = 16
??0?$_Fillobj@D@std@@QEAA@D@Z PROC			; std::_Fillobj<char>::_Fillobj<char>, COMDAT

; 26   : 		: _Fill(_Ch)

	mov	BYTE PTR [rcx], 48			; 00000030H

; 28   : 		}

	mov	rax, rcx
	ret	0
??0?$_Fillobj@D@std@@QEAA@D@Z ENDP			; std::_Fillobj<char>::_Fillobj<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
_TEXT	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>, COMDAT

; 25   : 	{	// insert a character-type sequence into _Ostr as if through a basic_string copy

$LN108:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 64					; 00000040H
	mov	QWORD PTR $T27[rsp], -2
	mov	QWORD PTR [rsp+120], rbx
	mov	r15, r8
	mov	r12, rdx
	mov	rsi, rcx

; 26   : 	ios_base::iostate _State = ios_base::goodbit;

	xor	ebx, ebx
	mov	DWORD PTR _State$[rsp], ebx

; 27   : 	_SizeT _Pad = _Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size

	mov	rcx, QWORD PTR [rcx]
	movsxd	rax, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 433  : 		return (_Wide);

	mov	rdi, QWORD PTR [rax+rsi+40]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h

; 27   : 	_SizeT _Pad = _Ostr.width() <= 0 || static_cast<_SizeT>(_Ostr.width()) <= _Size

	test	rdi, rdi
	jle	SHORT $LN17@Insert_str
	cmp	rdi, r8
	jbe	SHORT $LN17@Insert_str
	sub	rdi, r8
	jmp	SHORT $LN18@Insert_str
$LN17@Insert_str:
	xor	edi, edi
$LN18@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 98   : 			: _Myostr(_Ostr)

	mov	r14, rsi
	mov	QWORD PTR _Ok$[rsp], rsi
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rdx, QWORD PTR [rax+rsi+72]
	mov	r8, rcx
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	test	rdx, rdx
	je	SHORT $LN35@Insert_str

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR [rdx]
	mov	rcx, rdx
	call	QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rsi]
	mov	r8, rcx
$LN35@Insert_str:

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	movsxd	r9, DWORD PTR [rcx+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	rax, rcx
	mov	rdx, r8

; 352  : 		return (rdstate() == ios_base::goodbit);

	cmp	DWORD PTR [r9+rsi+16], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	jne	SHORT $LN31@Insert_str
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	r9, QWORD PTR [r9+rsi+80]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	test	r9, r9
	je	SHORT $LN31@Insert_str
	cmp	r9, rsi
	je	SHORT $LN31@Insert_str

; 123  : 				_Ostr.tie()->flush();

	mov	rcx, r9
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
	mov	rax, QWORD PTR [rsi]
	mov	rdx, rax
$LN31@Insert_str:

; 124  : 			_Ok = _Ostr.good();	// store test only after flushing tie

	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	eax, DWORD PTR [rcx+rsi+16]

; 352  : 		return (rdstate() == ios_base::goodbit);

	test	eax, eax
	sete	BYTE PTR _Ok$[rsp+8]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h

; 29   : 	const typename basic_ostream<_Elem, _Traits>::sentry _Ok(_Ostr);

	test	eax, eax

; 30   : 
; 31   : 	if (!_Ok)

	je	SHORT $LN8@Insert_str

; 32   : 		_State |= ios_base::badbit;

	mov	ebx, 4

; 33   : 	else

	jmp	$LN22@Insert_str
$LN8@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 390  : 		return (_Fmtfl);

	mov	eax, DWORD PTR [rcx+rsi+24]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h

; 36   : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN99@Insert_str
	npad	3
$LL4@Insert_str:

; 37   : 			for (; 0 < _Pad; --_Pad)	// pad on left

	test	rdi, rdi
	je	SHORT $LN3@Insert_str

; 38   : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	jne	SHORT $LN2@Insert_str

; 39   : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 40   : 					{	// insertion failed, quit
; 41   : 					_State |= ios_base::badbit;

	mov	ebx, 4
	mov	DWORD PTR _State$[rsp], ebx
	npad	3
$LL103@Insert_str:

; 50   : 			for (; 0 < _Pad; --_Pad)	// pad on right

	test	rdi, rdi
	je	SHORT $LN6@Insert_str

; 51   : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	movzx	edx, BYTE PTR [rcx+rsi+88]
	mov	rcx, QWORD PTR [rcx+rsi+72]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	cmp	eax, -1
	jne	SHORT $LN5@Insert_str

; 52   : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 53   : 					{	// insertion failed, quit
; 54   : 					_State |= ios_base::badbit;

	or	ebx, 4
$LN105@Insert_str:

; 55   : 					break;
; 56   : 					}
; 57   : 		_Ostr.width(0);

	mov	DWORD PTR _State$[rsp], ebx
$LN6@Insert_str:
	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xiosbase

; 439  : 		_Wide = _Newwidth;

	mov	QWORD PTR [rcx+rsi+40], 0
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h
	jmp	SHORT $LN22@Insert_str
$LN2@Insert_str:

; 37   : 			for (; 0 < _Pad; --_Pad)	// pad on left

	dec	rdi
	jmp	SHORT $LL4@Insert_str
$LN3@Insert_str:

; 42   : 					break;
; 43   : 					}
; 44   : 
; 45   : 		if (_State == ios_base::goodbit
; 46   : 			&& _Ostr.rdbuf()->sputn(_Data, (streamsize)_Size)

	mov	rdx, QWORD PTR [rsi]
$LN99@Insert_str:
	movsxd	rax, DWORD PTR [rdx+4]
	mov	r8, r15
	mov	rdx, r12
	mov	rcx, QWORD PTR [rax+rsi+72]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	cmp	rax, r15
	je	SHORT $LL103@Insert_str

; 47   : 				!= (streamsize)_Size)
; 48   : 				_State |= ios_base::badbit;

	mov	ebx, 4

; 49   : 		else

	jmp	SHORT $LN105@Insert_str
$LN5@Insert_str:

; 50   : 			for (; 0 < _Pad; --_Pad)	// pad on right

	dec	rdi
	jmp	SHORT $LL103@Insert_str
$LN23@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios
	mov	rsi, QWORD PTR _Ostr$[rsp]
	mov	ebx, DWORD PTR _State$[rsp]
	mov	r14, QWORD PTR _Ok$[rsp]
$LN22@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h

; 58   : 		_CATCH_IO_(_Ostr)
; 59   : 		}
; 60   : 
; 61   : 	_Ostr.setstate(_State);

	mov	rax, QWORD PTR [rsi]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rsi
	xor	r8d, r8d
	mov	edx, ebx
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 137  : 			if (!_STD uncaught_exception())	// TRANSITION, OS#15518458

	call	?uncaught_exception@std@@YA_NXZ		; std::uncaught_exception
	test	al, al
	jne	SHORT $LN80@Insert_str

; 138  : 				{
; 139  : 				this->_Myostr._Osfx();

	mov	rcx, r14
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN80@Insert_str:

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	rax, QWORD PTR [r14]
	movsxd	rcx, DWORD PTR [rax+4]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	rcx, QWORD PTR [rcx+r14+72]
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\ostream

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	test	rcx, rcx
	je	SHORT $LN84@Insert_str

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	npad	1
$LN84@Insert_str:
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.16.27023\include\xstring_insert.h

; 62   : 	return (_Ostr);

	mov	rax, rsi

; 63   : 	}

	mov	rbx, QWORD PTR [rsp+120]
	add	rsp, 64					; 00000040H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned __int64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$4

; 58   : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$4
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
?dtor$1@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
	lea	rcx, QWORD PTR _Ok$[rdx]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T27 = 32
_Ok$ = 40
_Ostr$ = 112
_Data$ = 120
_Size$ = 128
_State$ = 136
?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA PROC ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$4

; 58   : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rdx]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rdx
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$4
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA ENDP ; `std::_Insert_string<char,std::char_traits<char>,unsigned __int64>'::`1'::catch$4
text$x	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
END
