; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28314.0 

include listing.inc


PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_C@_05LAPONLG@false@				; `string'
PUBLIC	??_C@_04LOAJBDKD@true@				; `string'
PUBLIC	??_C@_06ECBCCLMB@?$CF?$CD?416g@			; `string'
PUBLIC	??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@	; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC@				; `string'
PUBLIC	??_C@_02MCKKLHBJ@?2?$CC@			; `string'
PUBLIC	??_C@_02HDBGODGB@?2?2@				; `string'
PUBLIC	??_C@_02DCNDPIBM@?2b@				; `string'
PUBLIC	??_C@_02FGLPDNBI@?2f@				; `string'
PUBLIC	??_C@_02JOGGLHBA@?2n@				; `string'
PUBLIC	??_C@_02HIBBOKEN@?2r@				; `string'
PUBLIC	??_C@_02COELENML@?2t@				; `string'
PUBLIC	??_C@_02DHFAHMIK@?2u@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_04MLLLIHIP@null@				; `string'
PUBLIC	??_C@_01OHGJGJJP@?$FL@				; `string'
PUBLIC	??_C@_01IHBHIGKO@?0@				; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN@				; `string'
PUBLIC	??_C@_01HCONENDN@?$HL@				; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3@				; `string'
PUBLIC	??_C@_01CELHOKLL@?$HN@				; `string'
PUBLIC	??_C@_02MCILKGOH@?$HL?$HN@			; `string'
PUBLIC	??_C@_03MCPBMLDJ@?5?3?5@			; `string'
PUBLIC	??_C@_02GPECMEKF@?$FL?$FN@			; `string'
PUBLIC	??_C@_02PFNDMDBO@?$FL?5@			; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5@				; `string'
PUBLIC	??_C@_02DHOGEDBE@?5?$FN@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7@				; `string'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7Writer@Json@@6B@				; Json::Writer::`vftable'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R4Writer@Json@@6B@				; Json::Writer::`RTTI Complete Object Locator'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
EXTRN	__imp_?setf@ios_base@std@@QEAAHH@Z:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHHH@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	__imp_?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z:PROC
EXTRN	__imp_strpbrk:PROC
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_R4Writer@Json@@6B@
rdata$r	SEGMENT
??_R4Writer@Json@@6B@ DD 01H				; Json::Writer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVWriter@Json@@@8
	DD	imagerel ??_R3Writer@Json@@8
	DD	imagerel ??_R4Writer@Json@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_7Writer@Json@@6B@
CONST	SEGMENT
??_7Writer@Json@@6B@ DQ FLAT:??_R4Writer@Json@@6B@	; Json::Writer::`vftable'
	DQ	FLAT:??_EWriter@Json@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	088H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHOGEDBE@?5?$FN@
CONST	SEGMENT
??_C@_02DHOGEDBE@?5?$FN@ DB ' ]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PFNDMDBO@?$FL?5@
CONST	SEGMENT
??_C@_02PFNDMDBO@?$FL?5@ DB '[ ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02GPECMEKF@?$FL?$FN@
CONST	SEGMENT
??_C@_02GPECMEKF@?$FL?$FN@ DB '[]', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCPBMLDJ@?5?3?5@
CONST	SEGMENT
??_C@_03MCPBMLDJ@?5?3?5@ DB ' : ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCILKGOH@?$HL?$HN@
CONST	SEGMENT
??_C@_02MCILKGOH@?$HL?$HN@ DB '{}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN@
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN@ DB '}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HCONENDN@?$HL@
CONST	SEGMENT
??_C@_01HCONENDN@?$HL@ DB '{', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLLIHIP@null@
CONST	SEGMENT
??_C@_04MLLLIHIP@null@ DB 'null', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHFAHMIK@?2u@
CONST	SEGMENT
??_C@_02DHFAHMIK@?2u@ DB '\u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02COELENML@?2t@
CONST	SEGMENT
??_C@_02COELENML@?2t@ DB '\t', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIBBOKEN@?2r@
CONST	SEGMENT
??_C@_02HIBBOKEN@?2r@ DB '\r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JOGGLHBA@?2n@
CONST	SEGMENT
??_C@_02JOGGLHBA@?2n@ DB '\n', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGLPDNBI@?2f@
CONST	SEGMENT
??_C@_02FGLPDNBI@?2f@ DB '\f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DCNDPIBM@?2b@
CONST	SEGMENT
??_C@_02DCNDPIBM@?2b@ DB '\b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HDBGODGB@?2?2@
CONST	SEGMENT
??_C@_02HDBGODGB@?2?2@ DB '\\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCKKLHBJ@?2?$CC@
CONST	SEGMENT
??_C@_02MCKKLHBJ@?2?$CC@ DB '\"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@
CONST	SEGMENT
??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@ DB '"\', 08H, 0cH, 0aH, 0dH, 09H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06ECBCCLMB@?$CF?$CD?416g@
CONST	SEGMENT
??_C@_06ECBCCLMB@?$CF?$CD?416g@ DB '%#.16g', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOAJBDKD@true@
CONST	SEGMENT
??_C@_04LOAJBDKD@true@ DB 'true', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false@
CONST	SEGMENT
??_C@_05LAPONLG@false@ DB 'false', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
PUBLIC	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??0?$_Fillobj@D@std@@QEAA@D@Z			; std::_Fillobj<char>::_Fillobj<char>
PUBLIC	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
PUBLIC	??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char>,char>
PUBLIC	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z	; std::setfill<char>
PUBLIC	?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
PUBLIC	?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
PUBLIC	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
PUBLIC	?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::hasCommentForValue
PUBLIC	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine
PUBLIC	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue
PUBLIC	?unindent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::unindent
PUBLIC	?indent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::indent
PUBLIC	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
PUBLIC	?writeIndent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::writeIndent
PUBLIC	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
PUBLIC	?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::isMultineArray
PUBLIC	?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeArrayValue
PUBLIC	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
PUBLIC	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue
PUBLIC	??0Writer@Json@@QEAA@XZ				; Json::Writer::Writer
PUBLIC	??_GWriter@Json@@UEAAPEAXI@Z			; Json::Writer::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Json::valueToString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
PUBLIC	?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z	; std::uppercase
PUBLIC	?hex@std@@YAAEAVios_base@1@AEAV21@@Z		; std::hex
PUBLIC	sprintf_s
PUBLIC	_vsprintf_s_l
PUBLIC	?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ; Json::FastWriter::write
PUBLIC	??0FastWriter@Json@@QEAA@XZ			; Json::FastWriter::FastWriter
PUBLIC	??1Writer@Json@@UEAA@XZ				; Json::Writer::~Writer
PUBLIC	?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ; Json::StyledWriter::write
PUBLIC	??0StyledWriter@Json@@QEAA@XZ			; Json::StyledWriter::StyledWriter
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_EWriter@Json@@UEAAPEAXI@Z:PROC		; Json::Writer::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD imagerel $LN4
	DD	imagerel $LN4+38
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN10
	DD	imagerel $LN10+111
	DD	imagerel $unwind$?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN6
	DD	imagerel $LN6+70
	DD	imagerel $unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN17
	DD	imagerel $LN17+195
	DD	imagerel $unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN12
	DD	imagerel $LN12+146
	DD	imagerel $unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN8
	DD	imagerel $LN8+67
	DD	imagerel $unwind$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN13
	DD	imagerel $LN13+199
	DD	imagerel $unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN21
	DD	imagerel $LN21+196
	DD	imagerel $unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN4
	DD	imagerel $LN4+23
	DD	imagerel $unwind$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD imagerel $LN16
	DD	imagerel $LN16+150
	DD	imagerel $unwind$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
	DD	imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN70
	DD	imagerel $LN70+537
	DD	imagerel $unwind$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN35
	DD	imagerel $LN35+262
	DD	imagerel $unwind$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unindent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$?unindent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?indent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+84
	DD	imagerel $unwind$?indent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN9
	DD	imagerel $LN9+120
	DD	imagerel $unwind$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeIndent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+96
	DD	imagerel $unwind$?writeIndent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD imagerel $LN108
	DD	imagerel $LN108+428
	DD	imagerel $unwind$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN93
	DD	imagerel $LN93+965
	DD	imagerel $unwind$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN130
	DD	imagerel $LN130+1388
	DD	imagerel $unwind$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN98
	DD	imagerel $LN98+1044
	DD	imagerel $unwind$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GWriter@Json@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+43
	DD	imagerel $unwind$??_GWriter@Json@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+95
	DD	imagerel $unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel $LN94
	DD	imagerel $LN94+1237
	DD	imagerel $unwind$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+46
	DD	imagerel $unwind$?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+41
	DD	imagerel $unwind$?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD imagerel $LN7
	DD	imagerel $LN7+49
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD imagerel $LN28
	DD	imagerel $LN28+214
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel $LN15
	DD	imagerel $LN15+123
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD imagerel $LN17
	DD	imagerel $LN17+150
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf_s DD imagerel $LN6
	DD	imagerel $LN6+88
	DD	imagerel $unwind$sprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+108
	DD	imagerel $unwind$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0FastWriter@Json@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+41
	DD	imagerel $unwind$??0FastWriter@Json@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+150
	DD	imagerel $unwind$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0StyledWriter@Json@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+69
	DD	imagerel $unwind$??0StyledWriter@Json@@QEAA@XZ
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0StyledWriter@Json@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0FastWriter@Json@@QEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf_s DD 051201H
	DD	0700e6212H
	DD	0500c600dH
	DD	0300bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB ' '
	DB	'1', 02H
	DB	00H
	DB	' '
	DB	02H
	DB	'&'
	DB	04H
	DB	084H
	DB	06H
	DB	0c8H
	DB	02H
	DB	01aH
	DB	06H
	DB	0a9H, 02H
	DB	08H
	DB	'L'
	DB	0aH
	DB	'l'
	DB	0cH
	DB	'@'
	DB	0eH
	DB	0d8H
	DB	010H
	DB	'y', 02H
	DB	0eH
	DB	016H
	DB	012H
	DB	0acH
	DB	06H
	DB	'j'
	DB	00H
	DB	'p'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 012H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	05H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	05H
	DB	07aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0e1H
	DB	04H
	DB	03eH
	DD	imagerel ?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DB	02cH
	DD	imagerel __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DB	0c1H
	DB	04H
	DB	0c2H
	DD	imagerel ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	DB	080H
	DB	036H
	DD	imagerel ?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DB	05aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	061H
	DB	05H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	imagerel $ip2state$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 0b3019H
	DD	03e341fH
	DD	034011fH
	DD	0e00ef010H
	DD	0c00ad00cH
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	019aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GWriter@Json@@UEAAPEAXI@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DB ' '
	DB	0acH
	DB	00H
	DB	0daH
	DB	02H
	DB	01cH
	DB	00H
	DB	0b4H
	DB	02H
	DB	01cH
	DB	00H
	DB	'F'
	DB	04H
	DB	01aH
	DB	00H
	DB	'6'
	DB	04H
	DB	01aH
	DB	00H
	DB	'h'
	DB	02H
	DB	01cH
	DB	00H
	DB	'I', 03H
	DB	06H
	DB	'e', 02H
	DB	08H
	DB	01aH
	DB	06H
	DB	0f4H
	DB	00H
	DB	'^'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	070H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
	DB	06aH
	DD	imagerel ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
	DB	070H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	imagerel $ip2state$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 082419H
	DD	0183416H
	DD	0f00cf216H
	DD	07008e00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	07aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB '6'
	DB	0b8H
	DB	00H
	DB	'('
	DB	02H
	DB	'"'
	DB	00H
	DB	0e4H
	DB	02H
	DB	'>'
	DB	00H
	DB	0ceH
	DB	02H
	DB	'>'
	DB	00H
	DB	'F'
	DB	04H
	DB	'<'
	DB	00H
	DB	'6'
	DB	04H
	DB	'<'
	DB	00H
	DB	'h'
	DB	02H
	DB	'>'
	DB	00H
	DB	'V'
	DB	06H
	DB	'6'
	DB	08H
	DB	'>'
	DB	06H
	DB	'$'
	DB	08H
	DB	0baH
	DB	06H
	DB	'4'
	DB	08H
	DB	018H
	DB	06H
	DB	0b4H
	DB	08H
	DB	0a8H
	DB	06H
	DB	0d4H
	DB	08H
	DB	01eH
	DB	06H
	DB	'f'
	DB	08H
	DB	0aaH
	DB	06H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	060H
	DB	03aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
	DB	06aH
	DD	imagerel ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
	DB	060H
	DB	032H
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	imagerel $ip2state$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0a2a19H
	DD	019641cH
	DD	018341cH
	DD	0f012f21cH
	DD	0c00ee010H
	DD	0500b700cH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	072H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 016H
	DB	'q', 02H
	DB	00H
	DB	'F'
	DB	02H
	DB	0b6H
	DB	00H
	DB	'8'
	DB	02H
	DB	018H
	DB	00H
	DB	0a5H, 02H
	DB	02H
	DB	'|'
	DB	00H
	DB	01H, 02H
	DB	02H
	DB	0a8H
	DB	00H
	DB	0f2H
	DB	02H
	DB	'@'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	070H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	imagerel $ip2state$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0a2319H
	DD	0163414H
	DD	0f010b214H
	DD	0d00ce00eH
	DD	07008c00aH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	05aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD 0a1601H
	DD	0d5416H
	DD	0c3416H
	DD	0f0123216H
	DD	0c00ee010H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeIndent@StyledWriter@Json@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?indent@StyledWriter@Json@@AEAAXXZ DB 06H
	DB	'H'
	DB	00H
	DB	01aH
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?indent@StyledWriter@Json@@AEAAXXZ DB 02H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?indent@StyledWriter@Json@@AEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?indent@StyledWriter@Json@@AEAAXXZ
	DD	imagerel $ip2state$?indent@StyledWriter@Json@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?indent@StyledWriter@Json@@AEAAXXZ DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?indent@StyledWriter@Json@@AEAAXXZ
	DD	042H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unindent@StyledWriter@Json@@AEAAXXZ DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 08H
	DB	084H
	DB	00H
	DB	'X'
	DB	04H
	DB	0acH
	DB	02H
	DB	'@'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 04H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
	DB	036H
	DD	imagerel ?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	imagerel $ip2state$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 061b19H
	DD	014340cH
	DD	07008d20cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 010H
	DB	0aaH
	DB	00H
	DB	'P'
	DB	04H
	DB	0b4H
	DB	06H
	DB	' '
	DB	04H
	DB	08eH
	DB	00H
	DB	'P'
	DB	08H
	DB	0f2H
	DB	02H
	DB	':'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 08H
	DB	0aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	050H
	DB	036H
	DD	imagerel ?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DB	02aH
	DD	imagerel ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DB	0d0H
	DB	08eH
	DD	imagerel ?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	imagerel $ip2state$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0b2c19H
	DD	01b641eH
	DD	01a341eH
	DD	012011eH
	DD	0e010f012H
	DD	0700cc00eH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	08aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DB 02H
	DB	'z'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DB 028H
	DD	imagerel $stateUnwindMap$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	imagerel $ip2state$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 061411H
	DD	0a6414H
	DD	093414H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 04H
	DB	080H
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 028H
	DD	imagerel $stateUnwindMap$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 060f11H
	DD	0d640fH
	DD	0c340fH
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DB	'`'
	DB	00H
	DB	'N'
	DB	02H
	DB	'd'
	DB	04H
	DB	'<'
	DB	06H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DB	02cH
	DD	imagerel __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DB	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 041411H
	DD	073414H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 02H
	DB	'~'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 028H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 061411H
	DD	0b6414H
	DD	0a3414H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 04H
	DB	01aH
	DB	00H
	DB	'<'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 02H
	DB	0cH
	DD	imagerel __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DB	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 020a11H
	DD	03006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??0StyledWriter@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0StyledWriter@Json@@QEAA@XZ PROC			; Json::StyledWriter::StyledWriter, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7StyledWriter@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 8
	call	??0?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	lea	rcx, QWORD PTR [rbx+32]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx+64]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rax, rbx
	mov	DWORD PTR [rbx+96], 74			; 0000004aH
	mov	DWORD PTR [rbx+100], 3
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0StyledWriter@Json@@QEAA@XZ ENDP			; Json::StyledWriter::StyledWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
root$ = 64
?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z PROC ; Json::StyledWriter::write, COMDAT

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rbx, rcx

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	add	rcx, 32					; 00000020H
	mov	rdi, r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	lea	rcx, QWORD PTR [rbx+64]
	mov	BYTE PTR [rbx+104], 0
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	lea	rcx, QWORD PTR [rbx+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR [rbx+32]
	mov	rcx, rbp
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ENDP ; Json::StyledWriter::write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??1Writer@Json@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Writer@Json@@UEAA@XZ PROC				; Json::Writer::~Writer, COMDAT

	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rcx], rax

	ret	0
??1Writer@Json@@UEAA@XZ ENDP				; Json::Writer::~Writer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ??0FastWriter@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0FastWriter@Json@@QEAA@XZ PROC			; Json::FastWriter::FastWriter, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7FastWriter@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	add	rcx, 8
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rax, rbx
	mov	BYTE PTR [rbx+40], 0
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0FastWriter@Json@@QEAA@XZ ENDP			; Json::FastWriter::FastWriter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
root$ = 64
?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z PROC ; Json::FastWriter::write, COMDAT

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rbx, rcx

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	add	rcx, 8
	mov	rdi, r8
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

	mov	rdx, rdi
	mov	rcx, rbx
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	lea	rcx, QWORD PTR [rbx+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR [rbx+8]
	mov	rcx, rbp
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rbp
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ENDP ; Json::FastWriter::write
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_Locale$dead$ = 88
_ArgList$ = 96
_vsprintf_s_l PROC					; COMDAT

; 1493 : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r8
	mov	rdi, rdx
	mov	rsi, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

	call	__local_stdio_printf_options
	mov	r9, QWORD PTR _ArgList$[rsp]
	mov	r8, rdi
	mov	QWORD PTR [rsp+40], r9
	mov	rdx, rsi
	mov	r9, rbx
	mov	QWORD PTR [rsp+32], 0
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;
; 1499 : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	ecx, -1
	mov	rsi, QWORD PTR [rsp+72]
	test	eax, eax
	cmovs	eax, ecx
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\stdio.h
;	COMDAT sprintf_s
_TEXT	SEGMENT
_Buffer$ = 96
_BufferCount$ = 104
_Format$ = 112
sprintf_s PROC						; COMDAT

; 1834 :     {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	rsi, r8

; 1835 :         int _Result;
; 1836 :         va_list _ArgList;
; 1837 :         __crt_va_start(_ArgList, _Format);

	lea	rbp, QWORD PTR _Format$[rsp+8]
	mov	rbx, rdx
	mov	rdi, rcx

; 1494 :     int const _Result = __stdio_common_vsprintf_s(

	call	__local_stdio_printf_options
	mov	QWORD PTR [rsp+40], rbp
	mov	r9, rsi
	mov	r8, rbx
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rdi
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vsprintf_s

; 1495 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1496 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1497 : 
; 1498 :     return _Result < 0 ? -1 : _Result;

	test	eax, eax
	mov	ecx, -1
	cmovs	eax, ecx

; 1838 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1839 :         __crt_va_end(_ArgList);
; 1840 :         return _Result;
; 1841 :     }

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	pop	rbp
	pop	rbx
	ret	0
sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xiosbase
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xiosbase
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
;	COMDAT ?hex@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?hex@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::hex, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xiosbase

; 348  :         _Fmtfl                                = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

	and	DWORD PTR [rcx+24], -1537		; fffffffffffff9ffH
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios

; 208  :     return _Iosbase;

	mov	rax, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xiosbase

; 348  :         _Fmtfl                                = (_Oldfmtflags & ~_Mask) | (_Newfmtflags & _Mask & _Fmtmask);

	or	DWORD PTR [rcx+24], 2048		; 00000800H
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios

; 209  : }

	ret	0
?hex@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::hex
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xiosbase
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
;	COMDAT ?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 8
?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::uppercase, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xiosbase

; 341  :         _Fmtfl |= _Newfmtflags & _Fmtmask;

	or	DWORD PTR [rcx+24], 4
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios

; 303  :     return _Iosbase;

	mov	rax, rcx

; 304  : }

	ret	0
?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::uppercase
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?isControlCharacter@Json@@YA_ND@Z
_TEXT	SEGMENT
ch$ = 8
?isControlCharacter@Json@@YA_ND@Z PROC			; Json::isControlCharacter, COMDAT

	dec	cl
	cmp	cl, 30
	setbe	al

	ret	0
?isControlCharacter@Json@@YA_ND@Z ENDP			; Json::isControlCharacter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?containsControlCharacter@Json@@YA_NPEBD@Z
_TEXT	SEGMENT
str$ = 8
?containsControlCharacter@Json@@YA_NPEBD@Z PROC		; Json::containsControlCharacter, COMDAT

	movzx	eax, BYTE PTR [rcx]
	test	al, al
	je	SHORT $LN3@containsCo
	npad	9
$LL2@containsCo:

	dec	al

	lea	rcx, QWORD PTR [rcx+1]
	cmp	al, 30
	jbe	SHORT $LN11@containsCo

	movzx	eax, BYTE PTR [rcx]
	test	al, al
	jne	SHORT $LL2@containsCo
$LN3@containsCo:

	xor	al, al

	ret	0
$LN11@containsCo:

	mov	al, 1

	ret	0
?containsControlCharacter@Json@@YA_NPEBD@Z ENDP		; Json::containsControlCharacter
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?uintToString@Json@@YAXIAEAPEAD@Z
_TEXT	SEGMENT
value$ = 8
current$ = 16
?uintToString@Json@@YAXIAEAPEAD@Z PROC			; Json::uintToString, COMDAT

	mov	r9, QWORD PTR [rdx]
	mov	r10, rdx
	dec	r9
	mov	BYTE PTR [r9], 0
	npad	3
$LL4@uintToStri:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	ecx
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	r8d, DWORD PTR [rax+rdx]
	add	r8b, r8b
	sub	cl, r8b
	add	cl, 48					; 00000030H
	mov	BYTE PTR [r9], cl

	mov	ecx, edx

	test	edx, edx
	jne	SHORT $LL4@uintToStri

	mov	QWORD PTR [r10], r9
	ret	0
?uintToString@Json@@YAXIAEAPEAD@Z ENDP			; Json::uintToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 32
buffer$ = 40
__$ArrayPad$ = 72
__$ReturnUdt$ = 96
value$ = 104
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; Json::valueToString, COMDAT

$LN17:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx

	mov	ecx, edx

	mov	BYTE PTR buffer$[rsp+31], 0

	neg	ecx

	lea	r9, QWORD PTR buffer$[rsp+31]

	mov	r10d, edx
	shr	r10d, 31

	test	r10b, r10b
	cmove	ecx, edx
	npad	8
$LL10@valueToStr:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	ecx
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	r8d, DWORD PTR [rax+rdx]
	add	r8b, r8b
	sub	cl, r8b
	add	cl, 48					; 00000030H
	mov	BYTE PTR [r9], cl

	mov	ecx, edx

	test	edx, edx
	jne	SHORT $LL10@valueToStr

	test	r10b, r10b
	je	SHORT $LN3@valueToStr

	dec	r9
	mov	BYTE PTR [r9], 45			; 0000002dH
$LN3@valueToStr:

	mov	rdx, r9
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 32
buffer$ = 40
__$ArrayPad$ = 72
__$ReturnUdt$ = 96
value$ = 104
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Json::valueToString, COMDAT

$LN15:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	r8d, edx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	mov	rbx, rcx

	mov	BYTE PTR buffer$[rsp+31], 0
	lea	r9, QWORD PTR buffer$[rsp+31]
	npad	6
$LL8@valueToStr:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	r8d
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	ecx, DWORD PTR [rax+rdx]
	add	cl, cl
	sub	r8b, cl
	add	r8b, 48					; 00000030H
	mov	BYTE PTR [r9], r8b

	mov	r8d, edx

	test	edx, edx
	jne	SHORT $LL8@valueToStr

	mov	rdx, r9
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
_TEXT	SEGMENT
__$ReturnUdt$GSCopy$ = 32
buffer$ = 40
__$ArrayPad$ = 72
__$ReturnUdt$ = 96
value$ = 104
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z PROC ; Json::valueToString, COMDAT

$LN28:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx

	lea	rcx, QWORD PTR buffer$[rsp]
	movaps	xmm3, xmm1
	movq	r9, xmm1
	lea	r8, OFFSET FLAT:??_C@_06ECBCCLMB@?$CF?$CD?416g@
	mov	edx, 32					; 00000020H
	call	sprintf_s

	lea	rcx, QWORD PTR buffer$[rsp]
	mov	rax, -1
	npad	9
$LL24@valueToStr:
	cmp	BYTE PTR [rcx+rax+1], 0
	lea	rax, QWORD PTR [rax+1]
	jne	SHORT $LL24@valueToStr

	cmp	BYTE PTR buffer$[rsp+rax-1], 48		; 00000030H
	lea	rax, QWORD PTR buffer$[rsp+rax-1]
	jne	SHORT $LN5@valueToStr

	lea	rcx, QWORD PTR buffer$[rsp]
	cmp	rax, rcx
	jbe	SHORT $LN25@valueToStr
$LL2@valueToStr:
	cmp	BYTE PTR [rax], 48			; 00000030H
	jne	SHORT $LN25@valueToStr

	dec	rax
	lea	rcx, QWORD PTR buffer$[rsp]
	cmp	rax, rcx
	ja	SHORT $LL2@valueToStr
$LN25@valueToStr:

	lea	rcx, QWORD PTR buffer$[rsp]
	mov	rdx, rax
	cmp	rax, rcx
	jb	SHORT $LN5@valueToStr
$LL4@valueToStr:

	movzx	ecx, BYTE PTR [rax]
	cmp	cl, 46					; 0000002eH
	je	SHORT $LN10@valueToStr
	sub	cl, 48					; 00000030H
	cmp	cl, 9
	ja	SHORT $LN5@valueToStr

	dec	rax
	lea	rcx, QWORD PTR buffer$[rsp]
	cmp	rax, rcx
	jae	SHORT $LL4@valueToStr

	jmp	SHORT $LN5@valueToStr
$LN10@valueToStr:

	mov	BYTE PTR [rdx+2], 0
$LN5@valueToStr:

	lea	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
value$ = 56
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z PROC ; Json::valueToString, COMDAT

$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	movzx	eax, dl
	mov	rbx, rcx

	test	al, al
	lea	rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	cmovne	rdx, rcx
	mov	rcx, rbx
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, rbx

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ENDP ; Json::valueToString
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\streambuf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
_TEXT	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z PROC ; Json::valueToQuotedString, COMDAT

$LN94:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-160]
	sub	rsp, 416				; 000001a0H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-256], rax
	mov	rdi, rdx
	mov	r14, rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$1$[rsp], rcx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rcx
	xor	r13d, r13d
	mov	esi, r13d
	mov	DWORD PTR $T1[rsp], r13d

	lea	rdx, OFFSET FLAT:??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7@
	mov	rcx, rdi
	call	QWORD PTR __imp_strpbrk
	test	rax, rax
	jne	SHORT $LN7@valueToQuo
	mov	rcx, rdi

	movzx	eax, BYTE PTR [rdi]
	test	al, al
	je	SHORT $LN28@valueToQuo
	npad	6
$LL27@valueToQuo:

	dec	al

	lea	rcx, QWORD PTR [rcx+1]
	cmp	al, 30
	jbe	SHORT $LN7@valueToQuo

	movzx	eax, BYTE PTR [rcx]
	test	al, al
	jne	SHORT $LL27@valueToQuo
$LN28@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	lea	rcx, QWORD PTR $T4[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	r8, rdi
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rbp-256]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	r8, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	mov	rdx, rax
	mov	rcx, r14
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T5[rbp-256]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T4[rbp-256]
	jmp	$LN90@valueToQuo
$LN7@valueToQuo:

	mov	rax, -1
	npad	1
$LL88@valueToQuo:
	lea	rax, QWORD PTR [rax+1]
	cmp	BYTE PTR [rdi+rax], sil
	jne	SHORT $LL88@valueToQuo
	lea	ebx, DWORD PTR [rax*2+3]

	lea	rcx, QWORD PTR result$[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	mov	edx, ebx
	lea	rcx, QWORD PTR result$[rbp-256]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	movzx	edx, BYTE PTR [rdi]
	test	dl, dl
	je	$LN3@valueToQuo
	lea	r15, OFFSET FLAT:__ImageBase
	lea	r12, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	lea	r14, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	npad	10
$LL4@valueToQuo:

	movsx	eax, dl
	add	eax, -8
	cmp	eax, 84					; 00000054H
	ja	$LN15@valueToQuo
	cdqe
	movzx	eax, BYTE PTR $LN86@valueToQuo[r15+rax]
	mov	ecx, DWORD PTR $LN87@valueToQuo[r15+rax*4]
	add	rcx, r15
	jmp	rcx
$LN8@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02MCKKLHBJ@?2?$CC@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN9@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02HDBGODGB@?2?2@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN10@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02DCNDPIBM@?2b@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN11@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02FGLPDNBI@?2f@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN12@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02JOGGLHBA@?2n@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN13@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02HIBBOKEN@?2r@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN14@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_02COELENML@?2t@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@valueToQuo
$LN15@valueToQuo:

	lea	eax, DWORD PTR [rdx-1]

	cmp	al, 30
	ja	$LN16@valueToQuo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream

; 453  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Mode | ios_base::out) {}

	lea	rax, QWORD PTR ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@[r15]
	mov	QWORD PTR oss$10[rsp], rax
	lea	rcx, QWORD PTR oss$10[rbp-120]
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	or	esi, 2
	mov	DWORD PTR $T1[rsp], esi
	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
	mov	rdx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rcx, QWORD PTR oss$10[rsp]
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1
	mov	rax, QWORD PTR oss$10[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR oss$10[rsp+rcx], r12
	mov	rax, QWORD PTR oss$10[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR oss$10[rsp+rcx-4], edx
	lea	rax, QWORD PTR oss$10[rsp+8]
	mov	QWORD PTR this$[rbp-256], rax

; 33   :         : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	QWORD PTR oss$10[rsp+8], r14
	mov	QWORD PTR oss$10[rbp-144], r13
	mov	ecx, 2
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	mov	DWORD PTR oss$10[rbp-136], eax
	lea	rcx, QWORD PTR oss$10[rbp-132]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	npad	1
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, OFFSET FLAT:??_C@_02DHFAHMIK@?2u@
	lea	rcx, QWORD PTR oss$10[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:?hex@std@@YAAEAVios_base@1@AEAV21@@Z ; std::hex
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z ; std::uppercase
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rbx, rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip

; 52   :     _Ostr.fill(_Manip._Fill);

	mov	rcx, QWORD PTR [rax]
	movsxd	rdx, DWORD PTR [rcx+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios

; 106  :         _Fillch        = _Newfill;

	mov	BYTE PTR [rdx+rax+88], 48		; 00000030H
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	edx, 4
	lea	rcx, QWORD PTR $T7[rbp-256]
	call	QWORD PTR __imp_?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip

; 424  :     (*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	mov	rcx, QWORD PTR [rbx]
	movsxd	rcx, DWORD PTR [rcx+4]
	add	rcx, rbx
	mov	rdx, QWORD PTR [rax+8]
	call	QWORD PTR [rax]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	movsx	edx, BYTE PTR [rdi]
	mov	rcx, rbx
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
	npad	1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream

; 85   :         _Mystr _Result(_Al);

	lea	rdx, QWORD PTR oss$10[rbp-132]
	lea	rcx, QWORD PTR $T8[rbp-256]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 92   :         }
; 93   : 
; 94   :         return _Result;

	or	esi, 8
	mov	DWORD PTR $T1[rsp], esi

; 86   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

	mov	eax, DWORD PTR oss$10[rbp-136]
	test	al, 2
	jne	SHORT $LN64@valueToQuo
	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN89@valueToQuo
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\streambuf

; 191  :         return *_IPfirst;

	mov	rax, QWORD PTR oss$10[rsp+40]
	mov	rbx, QWORD PTR [rax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream

; 88   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR $T9[rsp], rax
	lea	rdx, QWORD PTR oss$10[rbp-144]
	lea	rcx, QWORD PTR $T9[rsp]
	call	??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
	mov	r8, QWORD PTR [rax]
	sub	r8, rbx
	jmp	SHORT $LN91@valueToQuo
$LN89@valueToQuo:

; 86   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

	mov	eax, DWORD PTR oss$10[rbp-136]
$LN64@valueToQuo:

; 89   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

	test	al, 4
	jne	SHORT $LN66@valueToQuo
	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN66@valueToQuo

; 90   :             const auto _Base = _Mysb::eback();

	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	rbx, rax

; 91   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	sub	rax, rbx
	mov	r8, rax
$LN91@valueToQuo:

; 491  :         return _Stringbuffer.str();

	mov	rdx, rbx
	lea	rcx, QWORD PTR $T8[rbp-256]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN66@valueToQuo:
	and	esi, -9
	or	esi, 4
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, QWORD PTR $T8[rbp-256]
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T8[rbp-256]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream

; 484  :     virtual ~basic_ostringstream() noexcept {}

	mov	rax, QWORD PTR oss$10[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	QWORD PTR oss$10[rsp+rcx], r12
	mov	rax, QWORD PTR oss$10[rsp]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR oss$10[rsp+rcx-4], edx
	lea	rcx, QWORD PTR oss$10[rsp+8]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR oss$10[rsp+16]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	lea	rcx, QWORD PTR oss$10[rbp-120]
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	jmp	SHORT $LN2@valueToQuo
$LN16@valueToQuo:

	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN2@valueToQuo:

	inc	rdi
	movzx	edx, BYTE PTR [rdi]
	test	dl, dl
	jne	$LL4@valueToQuo
	mov	r14, QWORD PTR __$ReturnUdt$GSCopy$1$[rsp]
$LN3@valueToQuo:

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC@
	lea	rcx, QWORD PTR result$[rbp-256]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR result$[rbp-256]
	mov	rcx, r14
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR result$[rbp-256]
$LN90@valueToQuo:

	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, r14
	mov	rcx, QWORD PTR __$ArrayPad$[rbp-256]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+496]
	add	rsp, 416				; 000001a0H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
	npad	2
$LN87@valueToQuo:
	DD	$LN10@valueToQuo
	DD	$LN14@valueToQuo
	DD	$LN12@valueToQuo
	DD	$LN11@valueToQuo
	DD	$LN13@valueToQuo
	DD	$LN8@valueToQuo
	DD	$LN9@valueToQuo
	DD	$LN15@valueToQuo
$LN86@valueToQuo:
	DB	0
	DB	1
	DB	2
	DB	7
	DB	3
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ENDP ; Json::valueToQuotedString
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$0
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$1
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$3
	lea	rcx, QWORD PTR result$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$3
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN43@dtor$6
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR oss$10[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN43@dtor$6:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$6
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$7
	lea	rcx, QWORD PTR oss$10[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$7
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$9@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$9
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$9@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$9
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$4
	lea	rcx, QWORD PTR oss$10[rdx]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$4
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$11
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN69@dtor$11
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN69@dtor$11:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$11
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$5
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$3
	lea	rcx, QWORD PTR result$[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN43@dtor$6
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR oss$10[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN43@dtor$6:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$7
	lea	rcx, QWORD PTR oss$10[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$7@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$9@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$9
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$9@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$4
	lea	rcx, QWORD PTR oss$10[rdx]
	jmp	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$11
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN69@dtor$11
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN69@dtor$11:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$11@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T9 = 40
__$ReturnUdt$GSCopy$ = 40
__$ReturnUdt$GSCopy$1$ = 48
oss$10 = 64
this$ = 304
result$ = 312
$T8 = 344
$T5 = 344
$T7 = 376
$T4 = 376
__$ArrayPad$ = 408
__$ReturnUdt$ = 480
value$ = 488
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$5
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN8:
	push	rbx
	sub	rsp, 32					; 00000020H

; 484  :     virtual ~basic_ostringstream() noexcept {}

	mov	rax, QWORD PTR [rcx]
	lea	rbx, QWORD PTR [rcx+136]
	lea	rcx, QWORD PTR [rbx-128]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rbx-136], rax
	mov	rax, QWORD PTR [rbx-136]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-136]
	mov	DWORD PTR [rdx+rbx-140], r8d
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx-120]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??_GWriter@Json@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GWriter@Json@@UEAAPEAXI@Z PROC			; Json::Writer::`scalar deleting destructor', COMDAT
$LN7:
	push	rbx
	sub	rsp, 32					; 00000020H
	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	rbx, rcx
	mov	QWORD PTR [rcx], rax
	test	dl, 1
	je	SHORT $LN4@scalar
	mov	edx, 8
	call	??3@YAXPEAX_K@Z				; operator delete
$LN4@scalar:
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??_GWriter@Json@@UEAAPEAXI@Z ENDP			; Json::Writer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0Writer@Json@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Writer@Json@@QEAA@XZ PROC				; Json::Writer::Writer, COMDAT
	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rax, rcx
	ret	0
??0Writer@Json@@QEAA@XZ ENDP				; Json::Writer::Writer
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z PROC	; Json::FastWriter::writeValue, COMDAT

$LN98:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	rdi, rdx
	mov	rsi, rcx
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 530  :    allocated_ = other.allocated_;

	movsx	rax, BYTE PTR [rdx+8]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	cmp	eax, 7
	ja	$LN2@writeValue
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	edx, DWORD PTR $LN95@writeValue[rcx+rax*4]
	add	rdx, rcx
	jmp	rdx
$LN10@writeValue:

	lea	rcx, QWORD PTR [rsi+8]
	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null@
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@writeValue
$LN11@writeValue:

	mov	rcx, rdi
	call	?asInt@Value@Json@@QEBAHXZ		; Json::Value::asInt
	mov	r8d, eax

	test	eax, eax
	sets	r10b

	test	eax, eax
	jns	SHORT $LN31@writeValue

	neg	r8d
$LN31@writeValue:

	lea	r9, QWORD PTR buffer$18[rbp-97]
	mov	BYTE PTR buffer$18[rbp-97], 0
$LL39@writeValue:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	r8d
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	ecx, DWORD PTR [rax+rdx]
	add	cl, cl
	sub	r8b, cl
	add	r8b, 48					; 00000030H
	mov	BYTE PTR [r9], r8b

	mov	r8d, edx

	test	edx, edx
	jne	SHORT $LL39@writeValue

	test	r10b, r10b
	je	SHORT $LN32@writeValue

	dec	r9
	mov	BYTE PTR [r9], 45			; 0000002dH
$LN32@writeValue:

	mov	rdx, r9
	lea	rcx, QWORD PTR $T2[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rsi+8]
	lea	rdx, QWORD PTR $T2[rbp-128]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T2[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN12@writeValue:

	mov	rcx, rdi
	call	?asUInt@Value@Json@@QEBAIXZ		; Json::Value::asUInt
	mov	r9d, eax

	lea	r10, QWORD PTR buffer$17[rbp-97]
	mov	BYTE PTR buffer$17[rbp-97], 0
$LL48@writeValue:

	dec	r10
	mov	eax, -858993459				; cccccccdH
	mul	r9d
	shr	edx, 3
	movzx	ecx, dl
	shl	cl, 2
	lea	r8d, DWORD PTR [rcx+rdx]
	add	r8b, r8b
	sub	r9b, r8b
	add	r9b, 48					; 00000030H
	mov	BYTE PTR [r10], r9b

	mov	r9d, edx

	test	edx, edx
	jne	SHORT $LL48@writeValue

	mov	rdx, r10
	lea	rcx, QWORD PTR $T3[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rsi+8]
	lea	rdx, QWORD PTR $T3[rbp-128]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T3[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN13@writeValue:

	mov	rcx, rdi
	call	?asDouble@Value@Json@@QEBANXZ		; Json::Value::asDouble
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T4[rbp-128]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
	npad	1
	lea	rcx, QWORD PTR [rsi+8]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T4[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN14@writeValue:

	mov	rdx, QWORD PTR [rdi]
	lea	rcx, QWORD PTR $T5[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1
	lea	rcx, QWORD PTR [rsi+8]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T5[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN15@writeValue:

	mov	rcx, rdi
	call	?asBool@Value@Json@@QEBA_NXZ		; Json::Value::asBool

	lea	rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	test	al, al
	cmovne	rdx, rcx
	lea	rcx, QWORD PTR $T6[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rsi+8]
	lea	rdx, QWORD PTR $T6[rbp-128]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T6[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN16@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01OHGJGJJP@?$FL@
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 875  : }

	movzx	eax, BYTE PTR [rdi+8]
	xor	ebx, ebx
	test	al, al
	js	SHORT $LN61@writeValue
	cmp	al, 5
	jle	$LN5@writeValue
	cmp	al, 6
	je	SHORT $LN58@writeValue
	cmp	al, 7
	jne	SHORT $LN61@writeValue

; 891  : #ifndef JSON_VALUE_USE_INTERNAL_MAP
; 892  :    case arrayValue:  // size of the array is highest index + 1
; 893  :       if ( !value_.map_->empty() )
; 894  :       {

	mov	rax, QWORD PTR [rdi]
	mov	r14d, DWORD PTR [rax+8]
	jmp	SHORT $LN54@writeValue
$LN58@writeValue:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 1314 :         return size() == 0;

	mov	rdx, QWORD PTR [rdi]
	cmp	QWORD PTR [rdx+8], rbx
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 886  :    case uintValue:

	je	SHORT $LN5@writeValue
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR $T9[rbp-128], rax

; 40   :         this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T9[rbp-128]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 888  :    case booleanValue:

	mov	rax, QWORD PTR $T9[rbp-128]
	mov	QWORD PTR itLast$15[rbp-128], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 215  :         _Mybase::operator--();

	lea	rcx, QWORD PTR itLast$15[rbp-128]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<Json::Value::CZString const ,Json::Value> > >,std::_Iterator_base0>::operator--
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 890  :       return 0;

	mov	rax, QWORD PTR itLast$15[rbp-128]
	mov	r14d, DWORD PTR [rax+40]
	inc	r14d
	jmp	SHORT $LN54@writeValue
$LN61@writeValue:

; 895  :          ObjectValues::const_iterator itLast = value_.map_->end();
; 896  :          --itLast;
; 897  :          return (*itLast).first.index()+1;
; 898  :       }
; 899  :       return 0;
; 900  :    case objectValue:
; 901  :       return Int( value_.map_->size() );
; 902  : #else
; 903  :    case arrayValue:
; 904  :       return Int( value_.array_->size() );

	mov	r14d, ebx
$LN54@writeValue:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	test	r14d, r14d
	jle	SHORT $LN5@writeValue
$LL6@writeValue:

	test	ebx, ebx
	je	SHORT $LN17@writeValue

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN17@writeValue:

	mov	edx, ebx
	mov	rcx, rdi
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	rdx, rax
	mov	rcx, rsi
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

	inc	ebx
	cmp	ebx, r14d
	jl	SHORT $LL6@writeValue
$LN5@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	jmp	$LN2@writeValue
$LN18@writeValue:

	lea	rdx, QWORD PTR members$16[rbp-128]
	mov	rcx, rdi
	call	?getMemberNames@Value@Json@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Json::Value::getMemberNames
	npad	1

	lea	rdx, OFFSET FLAT:??_C@_01HCONENDN@?$HL@
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	rdx, QWORD PTR it$14[rbp-128]
	lea	rcx, QWORD PTR members$16[rbp-128]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin

	lea	rdx, QWORD PTR $T11[rbp-128]
	lea	rcx, QWORD PTR members$16[rbp-128]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	rdx, rax
	lea	rcx, QWORD PTR it$14[rbp-128]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	test	al, al
	je	$LN8@writeValue
	lea	r15, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
	npad	6
$LL9@writeValue:

	lea	rcx, QWORD PTR it$14[rbp-128]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	mov	r14, rax

	lea	rdx, QWORD PTR $T12[rbp-128]
	lea	rcx, QWORD PTR members$16[rbp-128]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	rdx, rax
	lea	rcx, QWORD PTR it$14[rbp-128]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	test	al, al
	je	SHORT $LN19@writeValue

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN19@writeValue:

	mov	rcx, r14
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T13[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_01JLIPDDHJ@?3@
	cmp	BYTE PTR [rsi+40], 0
	cmovne	rdx, r15
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1091 :    return (*this)[ key.c_str() ];

	mov	rcx, r14
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	mov	rcx, rdi
	call	??AValue@Json@@QEBAAEBV01@PEBD@Z	; Json::Value::operator[]
	mov	rdx, rax
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rcx, rsi
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector

; 260  :         _Mybase::operator++();

	lea	rcx, QWORD PTR it$14[rbp-128]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, QWORD PTR $T11[rbp-128]
	lea	rcx, QWORD PTR members$16[rbp-128]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	rdx, rax
	lea	rcx, QWORD PTR it$14[rbp-128]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator!=
	test	al, al
	jne	$LL9@writeValue
$LN8@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01CELHOKLL@?$HN@
	lea	rcx, QWORD PTR [rsi+8]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR members$16[rbp-128]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN2@writeValue:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+192]
	add	rsp, 128				; 00000080H
	pop	r15
	pop	r14
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
	npad	3
$LN95@writeValue:
	DD	$LN10@writeValue
	DD	$LN11@writeValue
	DD	$LN12@writeValue
	DD	$LN13@writeValue
	DD	$LN14@writeValue
	DD	$LN15@writeValue
	DD	$LN16@writeValue
	DD	$LN18@writeValue
?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ENDP	; Json::FastWriter::writeValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$0
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$1
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$2
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$3
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$4
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR members$16[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$5
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR members$16[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T9 = 32
it$14 = 32
itLast$15 = 40
$T11 = 40
$T12 = 48
members$16 = 56
$T6 = 56
$T3 = 56
$T2 = 56
buffer$17 = 88
buffer$18 = 88
$T13 = 88
$T5 = 88
$T4 = 88
__$ArrayPad$ = 120
this$ = 176
value$ = 184
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR $T13[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC	; Json::StyledWriter::writeValue, COMDAT

$LN130:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rbp
	push	rdi
	push	r12
	push	r14
	push	r15
	mov	rbp, rsp
	sub	rsp, 128				; 00000080H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-128], rax
	mov	r14, rdx
	mov	rdi, rcx
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 530  :    allocated_ = other.allocated_;

	movsx	rax, BYTE PTR [rdx+8]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	cmp	eax, 7
	ja	$LN2@writeValue
	lea	rdx, OFFSET FLAT:__ImageBase
	mov	ecx, DWORD PTR $LN126@writeValue[rdx+rax*4]
	add	rcx, rdx
	jmp	rcx
$LN6@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null@
	lea	rcx, QWORD PTR $T2[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T2[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN32@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN33@writeValue
$LN32@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN33@writeValue:

	lea	rcx, QWORD PTR $T2[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN7@writeValue:

	mov	rcx, r14
	call	?asInt@Value@Json@@QEBAHXZ		; Json::Value::asInt
	mov	r8d, eax

	test	eax, eax
	sets	r10b

	test	eax, eax
	jns	SHORT $LN36@writeValue

	neg	r8d
$LN36@writeValue:

	lea	r9, QWORD PTR buffer$24[rbp-97]
	mov	BYTE PTR buffer$24[rbp-97], 0
	npad	1
$LL44@writeValue:

	dec	r9
	mov	eax, -858993459				; cccccccdH
	mul	r8d
	shr	edx, 3
	movzx	eax, dl
	shl	al, 2
	lea	ecx, DWORD PTR [rax+rdx]
	add	cl, cl
	sub	r8b, cl
	add	r8b, 48					; 00000030H
	mov	BYTE PTR [r9], r8b

	mov	r8d, edx

	test	edx, edx
	jne	SHORT $LL44@writeValue

	test	r10b, r10b
	je	SHORT $LN37@writeValue

	dec	r9
	mov	BYTE PTR [r9], 45			; 0000002dH
$LN37@writeValue:

	mov	rdx, r9
	lea	rcx, QWORD PTR $T3[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T3[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN47@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN48@writeValue
$LN47@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN48@writeValue:

	lea	rcx, QWORD PTR $T3[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN8@writeValue:

	mov	rcx, r14
	call	?asUInt@Value@Json@@QEBAIXZ		; Json::Value::asUInt
	mov	r9d, eax

	lea	r10, QWORD PTR buffer$23[rbp-97]
	mov	BYTE PTR buffer$23[rbp-97], 0
	npad	13
$LL57@writeValue:

	dec	r10
	mov	eax, -858993459				; cccccccdH
	mul	r9d
	shr	edx, 3
	movzx	ecx, dl
	shl	cl, 2
	lea	r8d, DWORD PTR [rcx+rdx]
	add	r8b, r8b
	sub	r9b, r8b
	add	r9b, 48					; 00000030H
	mov	BYTE PTR [r10], r9b

	mov	r9d, edx

	test	edx, edx
	jne	SHORT $LL57@writeValue

	mov	rdx, r10
	lea	rcx, QWORD PTR $T5[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T5[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN60@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN61@writeValue
$LN60@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN61@writeValue:

	lea	rcx, QWORD PTR $T5[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN9@writeValue:

	mov	rcx, r14
	call	?asDouble@Value@Json@@QEBANXZ		; Json::Value::asDouble
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T7[rbp-128]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
	npad	1

	mov	rdx, rax
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN64@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN65@writeValue
$LN64@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN65@writeValue:

	lea	rcx, QWORD PTR $T7[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN10@writeValue:

	mov	rdx, QWORD PTR [r14]
	lea	rcx, QWORD PTR $T9[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	npad	1

	mov	rdx, rax
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN68@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN69@writeValue
$LN68@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN69@writeValue:

	lea	rcx, QWORD PTR $T9[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN11@writeValue:

	mov	rcx, r14
	call	?asBool@Value@Json@@QEBA_NXZ		; Json::Value::asBool

	lea	rcx, OFFSET FLAT:??_C@_04LOAJBDKD@true@
	lea	rdx, OFFSET FLAT:??_C@_05LAPONLG@false@
	test	al, al
	cmovne	rdx, rcx
	lea	rcx, QWORD PTR $T11[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T11[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN76@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN77@writeValue
$LN76@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN77@writeValue:

	lea	rcx, QWORD PTR $T11[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	jmp	$LN2@writeValue
$LN12@writeValue:

	mov	rdx, r14
	mov	rcx, rdi
	call	?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeArrayValue

	jmp	$LN2@writeValue
$LN13@writeValue:

	lea	rdx, QWORD PTR members$22[rbp-128]
	mov	rcx, r14
	call	?getMemberNames@Value@Json@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Json::Value::getMemberNames
	npad	1

	mov	rax, QWORD PTR members$22[rbp-120]
	lea	rcx, QWORD PTR $T14[rbp-128]
	cmp	QWORD PTR members$22[rbp-128], rax
	jne	SHORT $LN14@writeValue

	lea	rdx, OFFSET FLAT:??_C@_02MCILKGOH@?$HL?$HN@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T14[rbp-128]
	cmp	BYTE PTR [rdi+104], 0
	je	SHORT $LN82@writeValue

	lea	rcx, QWORD PTR [rdi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN83@writeValue
$LN82@writeValue:

	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN83@writeValue:

	jmp	$LN127@writeValue
$LN14@writeValue:

	lea	rdx, OFFSET FLAT:??_C@_01HCONENDN@?$HL@
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rdi+32]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN90@writeValue

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rdi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	$LN122@writeValue

	cmp	cl, 10
	je	SHORT $LN90@writeValue

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN90@writeValue:

	lea	r15, QWORD PTR [rdi+64]
	mov	rdx, r15
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN87@writeValue:

	lea	rdx, QWORD PTR $T15[rbp-128]
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR $T15[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	movsxd	rdx, DWORD PTR [rdi+100]
	mov	r8b, 32					; 00000020H
	lea	rcx, QWORD PTR $T16[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rdx, rax
	mov	rcx, r15
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T16[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, QWORD PTR it$21[rbp-128]
	lea	rcx, QWORD PTR members$22[rbp-128]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
$LL4@writeValue:

	lea	rcx, QWORD PTR it$21[rbp-128]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator*
	mov	rbx, rax
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1091 :    return (*this)[ key.c_str() ];

	mov	rcx, rax
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	mov	rcx, r14
	call	??AValue@Json@@QEBAAEBV01@PEBD@Z	; Json::Value::operator[]
	mov	r12, rax
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	rdx, rax
	mov	rcx, rdi
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	mov	rcx, rbx
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rdx, rax
	lea	rcx, QWORD PTR $T17[rbp-128]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	mov	rbx, rax

	lea	rcx, QWORD PTR [rdi+32]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN102@writeValue

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rdi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN99@writeValue

	cmp	cl, 10
	je	SHORT $LN102@writeValue

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN102@writeValue:

	mov	rdx, r15
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN99@writeValue:

	mov	rdx, rbx
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR $T17[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_03MCPBMLDJ@?5?3?5@
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, r12
	mov	rcx, rdi
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector

; 260  :         _Mybase::operator++();

	lea	rcx, QWORD PTR it$21[rbp-128]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, QWORD PTR $T19[rbp-128]
	lea	rcx, QWORD PTR members$22[rbp-128]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	rdx, rax
	lea	rcx, QWORD PTR it$21[rbp-128]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator==
	test	al, al
	jne	SHORT $LN118@writeValue

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, r12
	mov	rcx, rdi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	jmp	$LL4@writeValue
$LN122@writeValue:

	lea	r15, QWORD PTR [rdi+64]
	jmp	$LN87@writeValue
$LN118@writeValue:

	mov	rdx, r12
	mov	rcx, rdi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	mov	rcx, r15
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	rdx, rax
	movsxd	rax, DWORD PTR [rdi+100]
	sub	rdx, rax
	xor	r8d, r8d
	mov	rcx, r15
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	lea	rdx, OFFSET FLAT:??_C@_01CELHOKLL@?$HN@
	lea	rcx, QWORD PTR $T20[rbp-128]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR [rdi+32]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN113@writeValue

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rdi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN110@writeValue

	cmp	cl, 10
	je	SHORT $LN113@writeValue

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN113@writeValue:

	mov	rdx, r15
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN110@writeValue:

	lea	rdx, QWORD PTR $T20[rbp-128]
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN127@writeValue:

	lea	rcx, QWORD PTR $T20[rbp-128]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR members$22[rbp-128]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN2@writeValue:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-128]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+128]
	mov	rbx, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
	npad	3
$LN126@writeValue:
	DD	$LN6@writeValue
	DD	$LN7@writeValue
	DD	$LN8@writeValue
	DD	$LN9@writeValue
	DD	$LN10@writeValue
	DD	$LN11@writeValue
	DD	$LN12@writeValue
	DD	$LN13@writeValue
?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP	; Json::StyledWriter::writeValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$0
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$1
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$2
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$3
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$4
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$5
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR members$22[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$6
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$7
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$7
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$8
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$8
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$14@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$14
	lea	rcx, QWORD PTR $T16[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$14@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$14
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$9
	lea	rcx, QWORD PTR $T17[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$9
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$10
	lea	rcx, QWORD PTR $T20[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T3[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$4
	lea	rcx, QWORD PTR $T9[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$5
	lea	rcx, QWORD PTR $T11[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$6
	lea	rcx, QWORD PTR members$22[rdx]
	jmp	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$7
	lea	rcx, QWORD PTR $T14[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$8
	lea	rcx, QWORD PTR $T15[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$14@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$14
	lea	rcx, QWORD PTR $T16[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$14@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$9
	lea	rcx, QWORD PTR $T17[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
it$21 = 32
$T19 = 40
members$22 = 48
$T11 = 48
$T5 = 48
$T3 = 48
$T2 = 48
$T16 = 80
buffer$23 = 80
buffer$24 = 80
$T20 = 80
$T17 = 80
$T15 = 80
$T14 = 80
$T9 = 80
$T7 = 80
__$ArrayPad$ = 112
this$ = 176
value$ = 184
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$10
	lea	rcx, QWORD PTR $T20[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeArrayValue, COMDAT

$LN93:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	push	r12
	push	r13
	push	r14
	push	r15
	sub	rsp, 96					; 00000060H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbp, rdx
	mov	QWORD PTR value$GSCopy$1$[rsp], rdx
	mov	rsi, rcx
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 875  : }

	movzx	eax, BYTE PTR [rdx+8]
	cmp	al, 6
	jl	$LN88@writeArray
	je	SHORT $LN23@writeArray
	cmp	al, 7
	jne	$LN88@writeArray

; 891  : #ifndef JSON_VALUE_USE_INTERNAL_MAP
; 892  :    case arrayValue:  // size of the array is highest index + 1
; 893  :       if ( !value_.map_->empty() )
; 894  :       {

	mov	rax, QWORD PTR [rdx]
	mov	r14d, DWORD PTR [rax+8]
	jmp	SHORT $LN19@writeArray
$LN23@writeArray:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 1314 :         return size() == 0;

	mov	rdx, QWORD PTR [rdx]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 886  :    case uintValue:

	cmp	QWORD PTR [rdx+8], 0
	je	$LN88@writeArray
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rdx]
	mov	QWORD PTR $T2[rsp], rax

; 40   :         this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T2[rsp]
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 888  :    case booleanValue:

	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR itLast$9[rsp], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 215  :         _Mybase::operator--();

	lea	rcx, QWORD PTR itLast$9[rsp]
	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<Json::Value::CZString const ,Json::Value> > >,std::_Iterator_base0>::operator--
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 890  :       return 0;

	mov	rax, QWORD PTR itLast$9[rsp]
	mov	r14d, DWORD PTR [rax+40]
	inc	r14d
$LN19@writeArray:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	test	r14d, r14d
	je	$LN88@writeArray

	mov	rdx, rbp
	mov	rcx, rsi
	call	?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::isMultineArray
	lea	rbx, QWORD PTR [rsi+32]

	test	al, al
	je	$LN9@writeArray

	lea	rdx, OFFSET FLAT:??_C@_01OHGJGJJP@?$FL@
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	mov	rcx, rbx
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN51@writeArray

	lea	rcx, QWORD PTR [rsi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rsi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	$LN85@writeArray

	cmp	cl, 10
	je	SHORT $LN51@writeArray

	mov	dl, 10
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN51@writeArray:

	lea	r15, QWORD PTR [rsi+64]
	mov	rdx, r15
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN48@writeArray:

	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	lea	rcx, QWORD PTR $T5[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	movsxd	rdx, DWORD PTR [rsi+100]
	mov	r8b, 32					; 00000020H
	lea	rcx, QWORD PTR $T6[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	mov	rdx, rax
	mov	rcx, r15
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T6[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector

; 1479 :         auto& _My_data = _Mypair._Myval2;

	lea	r13, QWORD PTR [rsi+8]

; 1480 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	rax, QWORD PTR [r13]
	mov	QWORD PTR tv566[rsp], rax
	mov	rax, QWORD PTR [r13+8]
	mov	QWORD PTR tv567[rsp], rax
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	xor	edi, edi
$LL2@writeArray:

	mov	edx, edi
	mov	rcx, rbp
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	r12, rax

	mov	rdx, rax
	mov	rcx, rsi
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

	mov	rax, QWORD PTR tv567[rsp]
	cmp	QWORD PTR tv566[rsp], rax
	je	SHORT $LN11@writeArray

	mov	edx, edi
	mov	rcx, r13
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	r13, rax

	mov	rcx, rbx
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN63@writeArray

	lea	rcx, QWORD PTR [rsi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rsi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN60@writeArray

	cmp	cl, 10
	je	SHORT $LN63@writeArray

	mov	dl, 10
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN63@writeArray:

	mov	rdx, r15
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN60@writeArray:

	mov	rdx, r13
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	lea	r13, QWORD PTR [rsi+8]
	jmp	SHORT $LN12@writeArray
$LN85@writeArray:

	lea	r15, QWORD PTR [rsi+64]
	jmp	$LN48@writeArray
$LN11@writeArray:

	mov	rcx, rbx
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN68@writeArray

	lea	rcx, QWORD PTR [rsi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	lea	rcx, QWORD PTR [rsi+32]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN65@writeArray

	cmp	cl, 10
	je	SHORT $LN68@writeArray

	mov	dl, 10
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN68@writeArray:

	mov	rdx, r15
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN65@writeArray:

	mov	rdx, r12
	mov	rcx, rsi
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
$LN12@writeArray:

	inc	edi
	cmp	edi, r14d
	je	SHORT $LN81@writeArray

	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	mov	rdx, r12
	mov	rcx, rsi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	mov	rbp, QWORD PTR value$GSCopy$1$[rsp]
	jmp	$LL2@writeArray
$LN81@writeArray:

	mov	rdx, r12
	mov	rcx, rsi
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

	mov	rcx, r15
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	rdx, rax
	movsxd	rax, DWORD PTR [rsi+100]
	sub	rdx, rax
	xor	r8d, r8d
	mov	rcx, r15
	call	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN@
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	mov	rcx, rbx
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN77@writeArray

	add	rsi, 32					; 00000020H
	mov	rcx, rsi
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdx, QWORD PTR [rax-1]
	mov	rcx, rsi
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN74@writeArray

	cmp	cl, 10
	je	SHORT $LN77@writeArray

	mov	dl, 10
	mov	rcx, rsi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN77@writeArray:

	mov	rdx, r15
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN74@writeArray:

	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1

	jmp	$LN90@writeArray
$LN9@writeArray:

	lea	rdx, OFFSET FLAT:??_C@_02PFNDMDBO@?$FL?5@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	xor	edi, edi

	test	r14d, r14d
	je	SHORT $LN5@writeArray
	lea	rbp, QWORD PTR [rsi+8]

	mov	esi, edi
	npad	2
$LL6@writeArray:

	test	edi, edi
	je	SHORT $LN14@writeArray

	lea	rdx, OFFSET FLAT:??_C@_02KEGNLNML@?0?5@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN14@writeArray:

	mov	rdx, rsi
	mov	rcx, rbp
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rdx, rax
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

	inc	edi
	inc	rsi
	cmp	edi, r14d
	jb	SHORT $LL6@writeArray
$LN5@writeArray:

	lea	rdx, OFFSET FLAT:??_C@_02DHOGEDBE@?5?$FN@
	mov	rcx, rbx
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	jmp	SHORT $LN10@writeArray
$LN88@writeArray:

	lea	rdx, OFFSET FLAT:??_C@_02GPECMEKF@?$FL?$FN@
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rdx, QWORD PTR $T4[rsp]
	cmp	BYTE PTR [rsi+104], 0
	je	SHORT $LN43@writeArray

	lea	rcx, QWORD PTR [rsi+8]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
	jmp	SHORT $LN44@writeArray
$LN43@writeArray:

	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
$LN44@writeArray:
$LN90@writeArray:

	lea	rcx, QWORD PTR $T4[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@writeArray:
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+176]
	add	rsp, 96					; 00000060H
	pop	r15
	pop	r14
	pop	r13
	pop	r12
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeArrayValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$3@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$3
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T4[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
	lea	rcx, QWORD PTR $T5[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$3@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$3
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
tv567 = 32
$T2 = 32
itLast$9 = 32
tv566 = 40
value$GSCopy$1$ = 48
$T6 = 56
$T8 = 56
$T5 = 56
$T4 = 56
__$ArrayPad$ = 88
this$ = 160
value$ = 168
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
	lea	rcx, QWORD PTR $T8[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
_TEXT	SEGMENT
$T7 = 80
$T3 = 80
this$ = 80
itLast$9 = 88
itLast$10 = 88
value$ = 88
?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z PROC ; Json::StyledWriter::isMultineArray, COMDAT

$LN108:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rbp
	push	rsi
	push	rdi
	push	r12
	push	r14
	push	r15
	sub	rsp, 32					; 00000020H
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 875  : }

	movzx	eax, BYTE PTR [rdx+8]
	xor	ebp, ebp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	r14, rdx
	mov	r15, rcx
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 875  : }

	test	al, al
	js	SHORT $LN25@isMultineA
	cmp	al, 5
	jle	SHORT $LN25@isMultineA
	cmp	al, 6
	je	SHORT $LN22@isMultineA
	cmp	al, 7
	jne	SHORT $LN25@isMultineA

; 893  :       if ( !value_.map_->empty() )
; 894  :       {

	mov	rax, QWORD PTR [rdx]
	mov	edi, DWORD PTR [rax+8]
	jmp	SHORT $LN18@isMultineA
$LN22@isMultineA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 1314 :         return size() == 0;

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rdx+8], rbp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 886  :    case uintValue:

	je	SHORT $LN25@isMultineA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rdx]

; 40   :         this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T3[rsp]
	mov	QWORD PTR $T3[rsp], rax
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 888  :    case booleanValue:

	mov	rax, QWORD PTR $T3[rsp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 215  :         _Mybase::operator--();

	lea	rcx, QWORD PTR itLast$10[rsp]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 888  :    case booleanValue:

	mov	QWORD PTR itLast$10[rsp], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 215  :         _Mybase::operator--();

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<Json::Value::CZString const ,Json::Value> > >,std::_Iterator_base0>::operator--
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 890  :       return 0;

	mov	rax, QWORD PTR itLast$10[rsp]
	mov	edi, DWORD PTR [rax+40]
	inc	edi

; 891  : #ifndef JSON_VALUE_USE_INTERNAL_MAP
; 892  :    case arrayValue:  // size of the array is highest index + 1

	jmp	SHORT $LN18@isMultineA
$LN25@isMultineA:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	edi, ebp
$LN18@isMultineA:
	lea	eax, DWORD PTR [rdi+rdi*2]
	cmp	eax, DWORD PTR [r15+96]

	lea	rcx, QWORD PTR [r15+8]
	setge	bl
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear

	mov	esi, ebp
	test	edi, edi
	jle	SHORT $LN3@isMultineA
$LL4@isMultineA:
	test	bl, bl
	jne	$LN16@isMultineA

	mov	edx, esi
	mov	rcx, r14
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	rdx, rax
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1315 :    return type_ == stringValue;

	movzx	ecx, BYTE PTR [rax+8]
	lea	eax, DWORD PTR [rcx-6]
	cmp	al, 1
	ja	SHORT $LN11@isMultineA

; 875  : }

	cmp	cl, 6
	je	SHORT $LN53@isMultineA
	cmp	cl, 7
	jne	SHORT $LN11@isMultineA

; 893  :       if ( !value_.map_->empty() )
; 894  :       {

	mov	rax, QWORD PTR [rdx]
	mov	ecx, DWORD PTR [rax+8]
	jmp	SHORT $LN49@isMultineA
$LN53@isMultineA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 1314 :         return size() == 0;

	mov	rdx, QWORD PTR [rdx]
	cmp	QWORD PTR [rdx+8], rbp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 886  :    case uintValue:

	je	SHORT $LN11@isMultineA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 39   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) noexcept : _Ptr(_Pnode) {

	mov	rax, QWORD PTR [rdx]

; 40   :         this->_Adopt(_Plist);

	lea	rcx, QWORD PTR $T7[rsp]
	mov	QWORD PTR $T7[rsp], rax
	call	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 888  :    case booleanValue:

	mov	rax, QWORD PTR $T7[rsp]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 215  :         _Mybase::operator--();

	lea	rcx, QWORD PTR itLast$9[rsp]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 888  :    case booleanValue:

	mov	QWORD PTR itLast$9[rsp], rax
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\xtree

; 215  :         _Mybase::operator--();

	call	??F?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBVCZString@Value@Json@@V23@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<Json::Value::CZString const ,Json::Value> > >,std::_Iterator_base0>::operator--
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 890  :       return 0;

	mov	rax, QWORD PTR itLast$9[rsp]
	mov	ecx, DWORD PTR [rax+40]
	inc	ecx
$LN49@isMultineA:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	test	ecx, ecx
	je	SHORT $LN11@isMultineA
	mov	bl, 1
	jmp	SHORT $LN13@isMultineA
$LN11@isMultineA:
	xor	bl, bl
$LN13@isMultineA:

	inc	esi
	cmp	esi, edi
	jl	SHORT $LL4@isMultineA
$LN3@isMultineA:

	test	bl, bl
	jne	SHORT $LN16@isMultineA
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector

; 1307 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

	lea	rcx, QWORD PTR [r15+8]
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	movsxd	rbx, edi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector

; 1307 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	rbx, rax
	jbe	SHORT $LN73@isMultineA

; 1308 :             if (_Newcapacity > max_size()) {

	lea	rcx, QWORD PTR [r15+8]
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	rbx, rax
	ja	SHORT $LN106@isMultineA

; 1310 :             }
; 1311 : 
; 1312 :             _Reallocate_exactly(_Newcapacity);

	mov	rdx, rbx
	lea	rcx, QWORD PTR [r15+8]
	call	?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
$LN73@isMultineA:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	BYTE PTR [r15+104], 1

	lea	ebx, DWORD PTR [rdi*2+2]

	test	edi, edi
	jle	SHORT $LN6@isMultineA
	npad	6
$LL7@isMultineA:

	mov	edx, ebp
	mov	rcx, r14
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	rdx, rax
	mov	rcx, r15
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue

	mov	edx, ebp
	lea	rcx, QWORD PTR [r15+8]
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rcx, rax
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	add	ebx, eax
	inc	ebp
	cmp	ebp, edi
	jl	SHORT $LL7@isMultineA
$LN6@isMultineA:

	cmp	ebx, DWORD PTR [r15+96]
	mov	BYTE PTR [r15+104], 0
	setge	bl
$LN16@isMultineA:

	mov	rbp, QWORD PTR [rsp+104]
	movzx	eax, bl
	mov	rbx, QWORD PTR [rsp+96]
	add	rsp, 32					; 00000020H
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rsi
	ret	0
$LN106@isMultineA:
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector

; 1309 :                 _Xlength();

	call	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
	int	3
$LN103@isMultineA:
?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ENDP ; Json::StyledWriter::isMultineArray
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 8
value$ = 16
?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::StyledWriter::pushValue, COMDAT

	cmp	BYTE PTR [rcx+104], 0
	je	SHORT $LN2@pushValue

	add	rcx, 8
	jmp	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back
$LN2@pushValue:

	add	rcx, 32					; 00000020H
	jmp	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::StyledWriter::pushValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeIndent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?writeIndent@StyledWriter@Json@@AEAAXXZ PROC		; Json::StyledWriter::writeIndent, COMDAT

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx

	add	rcx, 32					; 00000020H
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN4@writeInden

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rax-1]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN1@writeInden

	cmp	cl, 10
	je	SHORT $LN4@writeInden

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN4@writeInden:

	lea	rdx, QWORD PTR [rdi+64]
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN1@writeInden:

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?writeIndent@StyledWriter@Json@@AEAAXXZ ENDP		; Json::StyledWriter::writeIndent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::StyledWriter::writeWithIndent, COMDAT

$LN9:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	rsi, rdx

	add	rcx, 32					; 00000020H
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	test	al, al
	jne	SHORT $LN6@writeWithI

	lea	rcx, QWORD PTR [rdi+32]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rcx, QWORD PTR [rdi+32]
	lea	rdx, QWORD PTR [rax-1]
	call	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
	movzx	ecx, BYTE PTR [rax]

	cmp	cl, 32					; 00000020H
	je	SHORT $LN3@writeWithI

	cmp	cl, 10
	je	SHORT $LN6@writeWithI

	mov	dl, 10
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN6@writeWithI:

	lea	rdx, QWORD PTR [rdi+64]
	lea	rcx, QWORD PTR [rdi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN3@writeWithI:

	mov	rdx, rsi
	lea	rcx, QWORD PTR [rdi+32]

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi

	jmp	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::StyledWriter::writeWithIndent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?indent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 64
this$ = 96
?indent@StyledWriter@Json@@AEAAXXZ PROC			; Json::StyledWriter::indent, COMDAT

$LN6:
	push	rbx
	sub	rsp, 80					; 00000050H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rbx, rcx

	movsxd	rdx, DWORD PTR [rcx+100]
	mov	r8b, 32					; 00000020H
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR [rbx+64]
	mov	rdx, rax
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T1[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 80					; 00000050H
	pop	rbx
	ret	0
?indent@StyledWriter@Json@@AEAAXXZ ENDP			; Json::StyledWriter::indent
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ArrayPad$ = 64
this$ = 96
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA PROC	; `Json::StyledWriter::indent'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA ENDP	; `Json::StyledWriter::indent'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ArrayPad$ = 64
this$ = 96
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA PROC	; `Json::StyledWriter::indent'::`1'::dtor$0
	lea	rcx, QWORD PTR $T1[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA ENDP	; `Json::StyledWriter::indent'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?unindent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?unindent@StyledWriter@Json@@AEAAXXZ PROC		; Json::StyledWriter::unindent, COMDAT

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

	add	rcx, 64					; 00000040H
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	rdx, rax
	lea	rcx, QWORD PTR [rbx+64]
	movsxd	rax, DWORD PTR [rbx+100]
	xor	r8d, r8d
	sub	rdx, rax

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi

	jmp	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
?unindent@StyledWriter@Json@@AEAAXXZ ENDP		; Json::StyledWriter::unindent
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T5 = 72
__$ArrayPad$ = 104
this$ = 144
root$ = 152
?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeCommentBeforeValue, COMDAT

$LN35:
	mov	QWORD PTR [rsp+24], rbx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	rsi, rcx
	xor	ebx, ebx
	mov	DWORD PTR $T1[rsp], ebx
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rax, QWORD PTR [rdx+16]
	test	rax, rax
	je	$LN1@writeComme
	mov	rdx, QWORD PTR [rax]
	test	rdx, rdx
	je	$LN1@writeComme

; 1354 :    return comments_ != 0  &&  comments_[placement].comment_ != 0;

	lea	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR $T5[rsp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rbp, rax

	or	ebx, 3
	mov	DWORD PTR $T1[rsp], ebx

	lea	rcx, QWORD PTR $T2[rsp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	lea	rcx, QWORD PTR $T2[rsp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rbx, rax

	lea	rcx, QWORD PTR $T2[rsp]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdi, QWORD PTR [rbx+rax]

	cmp	rbx, rdi
	je	SHORT $LN21@writeComme
$LL20@writeComme:

	movzx	edx, BYTE PTR [rbx]
	inc	rbx

	cmp	dl, 13
	jne	SHORT $LN23@writeComme

	cmp	BYTE PTR [rbx], 10
	jne	SHORT $LN24@writeComme

	inc	rbx
$LN24@writeComme:

	mov	dl, 10
$LN23@writeComme:

	lea	rcx, QWORD PTR $T5[rsp]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	cmp	rbx, rdi
	jne	SHORT $LL20@writeComme
$LN21@writeComme:

	mov	rdx, rbp
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T5[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T2[rsp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	lea	rcx, QWORD PTR [rsi+32]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN1@writeComme:

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	mov	rbx, QWORD PTR [rsp+160]
	add	rsp, 112				; 00000070H
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeCommentBeforeValue
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T5 = 72
__$ArrayPad$ = 104
this$ = 144
root$ = 152
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
$T1 = 32
$T2 = 40
$T5 = 72
__$ArrayPad$ = 104
this$ = 144
root$ = 152
?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN27@dtor$3
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR $T5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN27@dtor$3:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T5 = 72
__$ArrayPad$ = 104
this$ = 144
root$ = 152
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T5 = 72
__$ArrayPad$ = 104
this$ = 144
root$ = 152
?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN27@dtor$3
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR $T5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN27@dtor$3:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeCommentAfterValueOnSameLine, COMDAT

$LN70:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rbp
	push	rdi
	push	r12
	push	r14
	push	r15
	lea	rbp, QWORD PTR [rsp-55]
	sub	rsp, 144				; 00000090H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rbp-89], rax
	mov	r14, rdx
	mov	r15, rcx
	xor	edi, edi
	mov	DWORD PTR $T1[rbp-89], edi
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rax, QWORD PTR [rdx+16]
	test	rax, rax
	je	$LN12@writeComme
	mov	rdx, QWORD PTR [rax+8]
	test	rdx, rdx
	je	$LN12@writeComme

; 1354 :    return comments_ != 0  &&  comments_[placement].comment_ != 0;

	lea	rcx, QWORD PTR $T2[rbp-89]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR $T5[rbp-89]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	r12, rax

	or	edi, 3
	mov	DWORD PTR $T1[rbp-89], edi

	lea	rcx, QWORD PTR $T2[rbp-89]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rbp-89]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	lea	rcx, QWORD PTR $T2[rbp-89]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rbx, rax

	lea	rcx, QWORD PTR $T2[rbp-89]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rsi, QWORD PTR [rbx+rax]

	cmp	rbx, rsi
	je	SHORT $LN25@writeComme
$LL24@writeComme:

	movzx	edx, BYTE PTR [rbx]
	inc	rbx

	cmp	dl, 13
	jne	SHORT $LN27@writeComme

	cmp	BYTE PTR [rbx], 10
	jne	SHORT $LN28@writeComme

	inc	rbx
$LN28@writeComme:

	mov	dl, 10
$LN27@writeComme:

	lea	rcx, QWORD PTR $T5[rbp-89]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	cmp	rbx, rsi
	jne	SHORT $LL24@writeComme
$LN25@writeComme:

	mov	r8, r12
	lea	rdx, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
	lea	rcx, QWORD PTR $T6[rbp-89]
	call	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBD$$QEAV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rsi, QWORD PTR [r15+32]
	mov	rdx, rax
	mov	rcx, rsi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T6[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	and	edi, -3
	lea	rcx, QWORD PTR $T5[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T2[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	rax, QWORD PTR [r14+16]
	jmp	SHORT $LN2@writeComme
$LN12@writeComme:
	lea	rsi, QWORD PTR [rcx+32]
$LN2@writeComme:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	test	rax, rax
	je	$LN3@writeComme
	cmp	QWORD PTR [rax+16], 0
	je	$LN3@writeComme
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rsi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rdx, QWORD PTR [r14+16]
	test	rdx, rdx
	je	SHORT $LN37@writeComme
	mov	rdx, QWORD PTR [rdx+16]
	test	rdx, rdx
	jne	SHORT $LN67@writeComme
$LN37@writeComme:

; 1355 : }

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
$LN67@writeComme:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	lea	rcx, QWORD PTR $T7[rbp-89]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1

	lea	rcx, QWORD PTR $T10[rbp-89]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	r14, rax

	or	edi, 12
	mov	DWORD PTR $T1[rbp-89], edi

	lea	rcx, QWORD PTR $T7[rbp-89]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	rdx, rax
	lea	rcx, QWORD PTR $T10[rbp-89]
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	lea	rcx, QWORD PTR $T7[rbp-89]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rbx, rax

	lea	rcx, QWORD PTR $T7[rbp-89]
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdi, QWORD PTR [rbx+rax]

	cmp	rbx, rdi
	je	SHORT $LN47@writeComme
	npad	5
$LL46@writeComme:

	movzx	edx, BYTE PTR [rbx]
	inc	rbx

	cmp	dl, 13
	jne	SHORT $LN49@writeComme

	cmp	BYTE PTR [rbx], 10
	jne	SHORT $LN50@writeComme

	inc	rbx
$LN50@writeComme:

	mov	dl, 10
$LN49@writeComme:

	lea	rcx, QWORD PTR $T10[rbp-89]
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	cmp	rbx, rdi
	jne	SHORT $LL46@writeComme
$LN47@writeComme:

	mov	rdx, r14
	mov	rcx, rsi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	npad	1
	lea	rcx, QWORD PTR $T10[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	npad	1
	lea	rcx, QWORD PTR $T7[rbp-89]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
	mov	rcx, rsi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN3@writeComme:

	mov	rcx, QWORD PTR __$ArrayPad$[rbp-89]
	xor	rcx, rsp
	call	__security_check_cookie
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+64]
	mov	rsi, QWORD PTR [r11+72]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	r12
	pop	rdi
	pop	rbp
	ret	0
?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeCommentAfterValueOnSameLine
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN31@dtor$6
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR $T5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN31@dtor$6:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$6
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN53@dtor$8
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN53@dtor$8:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
	lea	rcx, QWORD PTR $T2[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN31@dtor$6
	and	DWORD PTR $T1[rbp], -3
	lea	rcx, QWORD PTR $T5[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN31@dtor$6:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
	lea	rcx, QWORD PTR $T6[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
	lea	rcx, QWORD PTR $T7[rdx]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T7 = 40
$T2 = 40
$T10 = 72
$T5 = 72
$T6 = 104
__$ArrayPad$ = 136
this$ = 192
root$ = 200
?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN53@dtor$8
	and	DWORD PTR $T1[rbp], -9
	lea	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN53@dtor$8:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
_TEXT	SEGMENT
this$dead$ = 8
value$ = 16
?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z PROC ; Json::StyledWriter::hasCommentForValue, COMDAT
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_value.cpp

; 1347 :    setComment( comment.c_str(), placement );

	mov	rax, QWORD PTR [rdx+16]
	test	rax, rax
	je	SHORT $LN15@hasComment
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN3@hasComment
	test	rax, rax
	je	SHORT $LN15@hasComment
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN3@hasComment
	test	rax, rax
	je	SHORT $LN15@hasComment
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN15@hasComment
$LN3@hasComment:
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp

	mov	al, 1

	ret	0
$LN15@hasComment:

	xor	al, al

	ret	0
?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ENDP ; Json::StyledWriter::hasCommentForValue
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File D:\Code\LibShared\jsoncpp-src-0.5.0\src\lib_json\json_writer.cpp
;	COMDAT ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
text$ = 72
?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z PROC ; Json::StyledWriter::normalizeEOL, COMDAT

$LN16:
	mov	QWORD PTR [rsp+16], rbx
	mov	QWORD PTR [rsp+24], rsi
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rdx
	mov	rsi, rcx
	mov	DWORD PTR $T1[rsp], 0

	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

	mov	DWORD PTR $T1[rsp], 1

	mov	rcx, rdi
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	mov	rdx, rax
	mov	rcx, rsi
	call	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

	mov	rcx, rdi
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	rbx, rax

	mov	rcx, rdi
	call	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
	lea	rdi, QWORD PTR [rbx+rax]

	cmp	rbx, rdi
	je	SHORT $LN13@normalizeE
	npad	2
$LL2@normalizeE:

	movzx	edx, BYTE PTR [rbx]
	inc	rbx

	cmp	dl, 13
	jne	SHORT $LN4@normalizeE

	cmp	BYTE PTR [rbx], 10
	jne	SHORT $LN6@normalizeE

	inc	rbx
$LN6@normalizeE:

	mov	dl, 10
$LN4@normalizeE:

	mov	rcx, rsi
	call	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
	cmp	rbx, rdi
	jne	SHORT $LL2@normalizeE
$LN13@normalizeE:

	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
	int	3
?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ENDP ; Json::StyledWriter::normalizeEOL
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
text$ = 72
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA PROC ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA ENDP ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
text$ = 72
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA PROC ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA ENDP ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 48
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++, COMDAT

; 259  :     _Vector_iterator& operator++() {

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx

; 260  :         _Mybase::operator++();

	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++

; 261  :         return *this;

	mov	rax, rbx

; 262  :     }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\streambuf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
this$ = 80
__$ReturnUdt$ = 88
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 490  :     _NODISCARD _Mystr str() const {

$LN21:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
	mov	rsi, rdx
	mov	QWORD PTR __$ReturnUdt$GSCopy$[rsp], rdx
	mov	DWORD PTR $T1[rsp], 0

; 491  :         return _Stringbuffer.str();

	lea	rdi, QWORD PTR [rcx+8]

; 85   :         _Mystr _Result(_Al);

	lea	rdx, QWORD PTR [rdi+116]
	mov	rcx, rsi
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 92   :         }
; 93   : 
; 94   :         return _Result;

	mov	DWORD PTR $T1[rsp], 2

; 86   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

	test	BYTE PTR [rdi+112], 2
	jne	SHORT $LN15@str
	mov	rcx, rdi
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN15@str
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\streambuf

; 191  :         return *_IPfirst;

	mov	rax, QWORD PTR [rdi+32]
	mov	rbx, QWORD PTR [rax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream

; 88   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	mov	rcx, rdi
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR [rdi+104]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
	mov	r8, QWORD PTR [rax]
	sub	r8, rbx
	jmp	SHORT $LN18@str
$LN15@str:

; 89   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

	test	BYTE PTR [rdi+112], 4
	jne	SHORT $LN16@str
	mov	rcx, rdi
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN16@str

; 90   :             const auto _Base = _Mysb::eback();

	mov	rcx, rdi
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	rbx, rax

; 91   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

	mov	rcx, rdi
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	sub	rax, rbx
	mov	r8, rax
$LN18@str:

; 492  :     }

	mov	rdx, rbx
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	npad	1
$LN16@str:
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+96]
	mov	rsi, QWORD PTR [rsp+104]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
this$ = 80
__$ReturnUdt$ = 88
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN11@dtor$1
	and	DWORD PTR $T1[rbp], -3
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$GSCopy$ = 48
this$ = 80
__$ReturnUdt$ = 88
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN11@dtor$1
	and	DWORD PTR $T1[rbp], -3
	mov	rcx, QWORD PTR __$ReturnUdt$GSCopy$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 484  :     virtual ~basic_ostringstream() noexcept {}

$LN5:
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rax, QWORD PTR [rcx-136]
	mov	rbx, rcx
	movsxd	rdx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rdx+rcx-136], rax
	mov	rax, QWORD PTR [rcx-136]
	movsxd	rdx, DWORD PTR [rax+4]
	lea	r8d, DWORD PTR [rdx-136]
	mov	DWORD PTR [rdx+rcx-140], r8d
	add	rcx, -128				; ffffffffffffff80H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx-120]
	add	rsp, 32					; 00000020H
	pop	rbx
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 453  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Mode | ios_base::out) {}

$LN13:
	mov	QWORD PTR [rsp+16], rbx
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0
	lea	rax, OFFSET FLAT:??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	QWORD PTR [rcx], rax
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	mov	DWORD PTR $T1[rsp], 1
	lea	rbx, QWORD PTR [rdi+8]
	mov	rcx, rbx
	call	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
	mov	rdx, rax
	xor	r9d, r9d
	xor	r8d, r8d
	mov	rcx, rdi
	call	QWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	npad	1
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rcx+rdi], rax
	mov	rax, QWORD PTR [rdi]
	movsxd	rcx, DWORD PTR [rax+4]
	lea	edx, DWORD PTR [rcx-136]
	mov	DWORD PTR [rcx+rdi-4], edx
	mov	QWORD PTR this$[rsp], rbx

; 33   :         : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

	mov	rcx, rbx
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+104], 0
	mov	ecx, 2
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	mov	DWORD PTR [rbx+112], eax
	lea	rcx, QWORD PTR [rbx+116]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	npad	1

; 453  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Mode | ios_base::out) {}

	mov	rax, rdi
	mov	rbx, QWORD PTR [rsp+56]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
?dtor$3@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 136				; 00000088H
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
	mov	rcx, QWORD PTR this$[rdx]
	add	rcx, 16
	rex_jmp	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$1@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$dead$ = 56
$initVBases$dead$ = 64
$T1 = 64
this$ = 72
?dtor$3@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$3
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$3@?0???0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
;	COMDAT ?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty, COMDAT

; 1479 :         auto& _My_data = _Mypair._Myval2;
; 1480 :         return _My_data._Myfirst == _My_data._Mylast;

	mov	rax, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rcx], rax
	sete	al

; 1481 :     }

	ret	0
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
;	COMDAT ?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve, COMDAT

; 1305 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcapacity) {

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rbx, rdx
	mov	rdi, rcx

; 1306 :         // increase capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1307 :         if (_Newcapacity > capacity()) { // something to do (reserve() never shrinks)

	call	?capacity@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::capacity
	cmp	rbx, rax
	jbe	SHORT $LN2@reserve

; 1308 :             if (_Newcapacity > max_size()) {

	mov	rcx, rdi
	call	?max_size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::max_size
	cmp	rbx, rax
	ja	SHORT $LN7@reserve

; 1310 :             }
; 1311 : 
; 1312 :             _Reallocate_exactly(_Newcapacity);

	mov	rdx, rbx
	mov	rcx, rdi
	call	?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
$LN2@reserve:

; 1313 :         }
; 1314 :     }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN7@reserve:

; 1309 :                 _Xlength();

	call	?_Xlength@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@CAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Xlength
	int	3
$LN5@reserve:
?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN12:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 484  :     virtual ~basic_ostringstream() noexcept {}

	mov	rax, QWORD PTR [rcx-136]
	mov	rbx, rcx
	mov	edi, edx
	movsxd	r8, DWORD PTR [rax+4]
	lea	rax, OFFSET FLAT:??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [r8+rcx-136], rax
	mov	rax, QWORD PTR [rcx-136]
	movsxd	r8, DWORD PTR [rax+4]
	lea	r9d, DWORD PTR [r8-136]
	mov	DWORD PTR [r8+rcx-140], r9d
	add	rcx, -128				; ffffffffffffff80H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	lea	rcx, QWORD PTR [rbx-120]
	call	QWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	mov	rcx, rbx
	call	QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
	test	dil, 1
	je	SHORT $LN9@scalar
	mov	edx, 232				; 000000e8H
	lea	rcx, QWORD PTR [rbx-136]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN9@scalar:
	mov	rsi, QWORD PTR [rsp+56]
	lea	rax, QWORD PTR [rbx-136]
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\streambuf
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 64
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 84   :     _NODISCARD _Mystr str() const {

$LN17:
	mov	QWORD PTR [rsp+24], rbx
	mov	QWORD PTR [rsp+32], rsi
	mov	QWORD PTR [rsp+16], rdx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rsi, rdx
	mov	rdi, rcx
	mov	DWORD PTR $T1[rsp], 0

; 85   :         _Mystr _Result(_Al);

	lea	rdx, QWORD PTR [rcx+116]
	mov	rcx, rsi
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >

; 92   :         }
; 93   : 
; 94   :         return _Result;

	mov	DWORD PTR $T1[rsp], 1

; 86   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

	test	BYTE PTR [rdi+112], 2
	jne	SHORT $LN11@str
	mov	rcx, rdi
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN11@str
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\streambuf

; 191  :         return *_IPfirst;

	mov	rax, QWORD PTR [rdi+32]
	mov	rbx, QWORD PTR [rax]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream

; 88   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

	mov	rcx, rdi
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR [rdi+104]
	lea	rcx, QWORD PTR $T2[rsp]
	call	??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
	mov	r8, QWORD PTR [rax]
	sub	r8, rbx
	jmp	SHORT $LN14@str
$LN11@str:

; 89   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

	test	BYTE PTR [rdi+112], 4
	jne	SHORT $LN12@str
	mov	rcx, rdi
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	test	rax, rax
	je	SHORT $LN12@str

; 90   :             const auto _Base = _Mysb::eback();

	mov	rcx, rdi
	call	QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	mov	rbx, rax

; 91   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

	mov	rcx, rdi
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
	sub	rax, rbx
	mov	r8, rax
$LN14@str:

; 95   :     }

	mov	rdx, rbx
	mov	rcx, rsi
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN12@str:
	mov	rax, rsi
	mov	rbx, QWORD PTR [rsp+80]
	mov	rsi, QWORD PTR [rsp+88]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
	int	3
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 64
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$dead$ = 56
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 33   :         : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() {}

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 32					; 00000020H
	mov	rbx, rcx
	call	QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
	npad	1
	lea	rax, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	QWORD PTR [rbx], rax
	mov	QWORD PTR [rbx+104], 0
	mov	ecx, 2
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	mov	DWORD PTR [rbx+112], eax
	lea	rcx, QWORD PTR [rbx+116]
	call	??0?$allocator@D@std@@QEAA@XZ		; std::allocator<char>::allocator<char>
	npad	1
	mov	rax, rbx
	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$dead$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$dead$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
	mov	rcx, QWORD PTR this$[rdx]
	rex_jmp	QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\vector
;	COMDAT ?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly, COMDAT

; 1252 :     void _Reallocate_exactly(const size_type _Newcapacity) {

$LN10:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 32					; 00000020H

; 1253 :         // set capacity to _Newcapacity (without geometric growth), provide strong guarantee
; 1254 :         auto& _My_data    = _Mypair._Myval2;
; 1255 :         pointer& _Myfirst = _My_data._Myfirst;
; 1256 :         pointer& _Mylast  = _My_data._Mylast;
; 1257 : 
; 1258 :         const auto _Size = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rdi, QWORD PTR [rcx+8]
	mov	rsi, rdx
	sub	rdi, QWORD PTR [rcx]
	mov	rbx, rcx
	sar	rdi, 5

; 1259 : 
; 1260 :         const pointer _Newvec = _Getal().allocate(_Newcapacity);

	call	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
	mov	rcx, rax
	mov	rdx, rsi
	call	?allocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::allocate

; 1261 : 
; 1262 :         _TRY_BEGIN
; 1263 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

	mov	r8, QWORD PTR [rbx+8]
	mov	r9, rax
	mov	rdx, QWORD PTR [rbx]
	mov	rcx, rbx
	mov	rbp, rax
	call	?_Umove_if_noexcept@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@00@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Umove_if_noexcept

; 1264 :         _CATCH_ALL
; 1265 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1266 :         _RERAISE;
; 1267 :         _CATCH_END
; 1268 : 
; 1269 :         _Change_array(_Newvec, _Size, _Newcapacity);

	mov	r9, rsi
	mov	r8, rdi
	mov	rdx, rbp
	mov	rcx, rbx

; 1270 :     }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+56]
	mov	rsi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	rdi

; 1264 :         _CATCH_ALL
; 1265 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1266 :         _RERAISE;
; 1267 :         _CATCH_END
; 1268 : 
; 1269 :         _Change_array(_Newvec, _Size, _Newcapacity);

	jmp	?_Change_array@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K1@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Change_array
?_Reallocate_exactly@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Reallocate_exactly
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
;	COMDAT ??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
_Ch$dead$ = 16
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z PROC		; std::setfill<char>, COMDAT

; 27   :     _Fillobj(_Elem _Ch) : _Fill(_Ch) {}

	mov	BYTE PTR [rcx], 48			; 00000030H

; 35   :     return _Fillobj<_Elem>(_Ch);

	mov	rax, rcx

; 36   : }

	ret	0
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ENDP		; std::setfill<char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
;	COMDAT ??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
_TEXT	SEGMENT
_Ostr$ = 8
_Manip$ = 16
??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,char>, COMDAT

; 50   :     static_assert(is_same_v<_Elem, _Elem2>, "wrong character type for setfill");
; 51   : 
; 52   :     _Ostr.fill(_Manip._Fill);

	mov	rax, QWORD PTR [rcx]
	movsxd	r8, DWORD PTR [rax+4]
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\ios

; 106  :         _Fillch        = _Newfill;

	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [r8+rcx+88], al
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip

; 53   :     return _Ostr;

	mov	rax, rcx

; 54   : }

	ret	0
??$?6DU?$char_traits@D@std@@D@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,char>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
;	COMDAT ??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,__int64>, COMDAT

; 423  :     const _Smanip<_Arg>& _Manip) { // insert by calling function with output stream and argument

$LN4:
	push	rbx
	sub	rsp, 32					; 00000020H

; 424  :     (*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	mov	rax, QWORD PTR [rcx]
	mov	rbx, rcx
	mov	r8, rdx
	mov	rdx, QWORD PTR [rdx+8]
	movsxd	rcx, DWORD PTR [rax+4]
	add	rcx, rbx
	call	QWORD PTR [r8]

; 425  :     return _Ostr;

	mov	rax, rbx

; 426  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,__int64>
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\include\iomanip
;	COMDAT ??0?$_Fillobj@D@std@@QEAA@D@Z
_TEXT	SEGMENT
this$ = 8
_Ch$dead$ = 16
??0?$_Fillobj@D@std@@QEAA@D@Z PROC			; std::_Fillobj<char>::_Fillobj<char>, COMDAT

; 27   :     _Fillobj(_Elem _Ch) : _Fill(_Ch) {}

	mov	BYTE PTR [rcx], 48			; 00000030H
	mov	rax, rcx
	ret	0
??0?$_Fillobj@D@std@@QEAA@D@Z ENDP			; std::_Fillobj<char>::_Fillobj<char>
_TEXT	ENDS
; Function compile flags: /Odspy
;	COMDAT ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
END
